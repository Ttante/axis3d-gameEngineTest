[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/camera.js",
    "memberof": null,
    "longname": "src/camera.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { define, radians } from './utils'\nimport { MeshCommand } from './mesh'\nimport { Vector } from './math'\nimport coalesce from 'defined'\nimport mat4 from 'gl-mat4'\nimport vec3 from 'gl-vec3'\nimport quat from 'gl-quat'\n\n/**\n * CameraCommand constructor.\n * @see CameraCommand\n */\n\nexport default (...args) => new CameraCommand(...args)\n\n/**\n * Scratch matrix\n *\n * @private\n * @const\n * @type {mat4}\n */\n\nconst scratch = mat4.identity([])\n\n/**\n * Euler angle of the origin camera orientation\n * express in radians.\n *\n * @public\n * @const\n * @type {Vector}\n */\n\nexport const DEFAULT_CAMERA_ORIENTATION_ORIGIN =\n  // pitch, yaw, roll\n  new Vector(radians(90), 0, 0)\n\n/**\n * Default field of view frustrum angle for the\n * persective camera projection. This value is\n * expressed in radians.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const DEFAULT_CAMERA_FIELD_OF_VIEW = radians(60)\n\n/**\n * Default near value for the persective camera\n * projection.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const DEFAULT_CAMERA_NEAR = 0.01\n\n/**\n * Default far value for the persective camera\n * projection.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const DEFAULT_CAMERA_FAR = 1000.0\n\n/**\n * CameraCommand class.\n *\n * @public\n * @class CameraCommand\n * @extends Command\n */\n\nexport class CameraCommand extends MeshCommand {\n\n  /**\n   * Camera class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} opts\n   */\n\n  constructor(ctx, opts = {}) {\n    const worldUp = new Vector(0, 1, 0)\n    const target = opts.target || new Vector(0, 0, 0)\n    const front = new Vector(0, 0, -1)\n    const right = new Vector(1, 0, 0)\n    const eye = new Vector(0, 0, 0)\n    const up = new Vector(0, 0, 0)\n\n    const projection = mat4.identity([])\n    const view = mat4.identity([])\n\n    const orientation = Object.create(DEFAULT_CAMERA_ORIENTATION_ORIGIN)\n\n    const state = {\n      viewportHeight: coalesce(opts.viewportHeight, 1),\n      viewportWidth: coalesce(opts.viewportWidth, 1),\n      near: coalesce(opts.near, DEFAULT_CAMERA_NEAR),\n      far: coalesce(opts.far, DEFAULT_CAMERA_FAR),\n      fov: coalesce(opts.fov, opts.fieldOfView, DEFAULT_CAMERA_FIELD_OF_VIEW),\n    }\n\n    const context = {\n      projection({viewportWidth, viewportHeight}) {\n        update({viewportWidth, viewportHeight})\n        return projection\n      },\n\n      view({viewportWidth, viewportHeight}) {\n        update({viewportWidth, viewportHeight})\n        return view\n      },\n\n      aspect({viewportWidth, viewportHeight}) {\n        return viewportWidth/viewportHeight\n      },\n    }\n\n    const uniforms = { ...context }\n    const render = ctx.regl({context, uniforms})\n\n    const update = (updates) => {\n      const sync = (prop) => {\n        if (prop in updates) {\n          state[prop] = updates[prop]\n        }\n      }\n\n      // sycn properties\n      sync('fov')\n      sync('far')\n      sync('near')\n      sync('viewportWidth')\n      sync('viewportHeight')\n\n      if ('position' in updates) {\n        vec3.copy(this.position, updates.position)\n      }\n\n      if ('target' in updates) {\n        vec3.copy(target, updates.target)\n      }\n\n      if ('rotation' in updates) {\n        quat.copy(this.rotation, updates.rotation)\n      }\n\n      if ('orientation' in updates) {\n        quat.copy(orientation, updates.orientation)\n      }\n\n      const position = this.position\n      const aspect = state.viewportWidth / state.viewportHeight\n      const vector = new Vector(0, 0, 0)\n      const near = state.near\n      const far = state.far\n      const fov = state.fov\n\n      // update camera direction vectors\n      vec3.set(front,\n        Math.cos(orientation.x) * Math.cos(orientation.y),\n        Math.sin(orientation.y),\n        Math.sin(orientation.x) * Math.sin(orientation.y)\n      )\n\n      vec3.normalize(front, front)\n      vec3.copy(right, vec3.normalize([], vec3.cross([], front, worldUp)))\n      vec3.copy(up, vec3.normalize([], vec3.cross([], right, front)))\n\n      // set projection\n      mat4.perspective(projection, fov, aspect, near, far)\n\n      // update transform from context if present\n      if (ctx.previous && ctx.previous.id != this.id) {\n        mat4.copy(this.transform, mat4.multiply([], ctx.previous.transform, view))\n      } else {\n        mat4.copy(this.transform, view)\n      }\n\n      // update view matrix\n      mat4.copy(view, this.transform)\n      mat4.lookAt(view, position, target, up)\n      mat4.multiply(view, view, mat4.fromQuat([], this.rotation))\n\n      // set eye vector\n      mat4.invert(scratch, view)\n      vec3.set(eye, scratch[12], scratch[13], scratch[14])\n      return this\n    }\n\n    super(ctx, {\n      ...opts,\n      draw: false,\n      render(_, state, ...args) {\n        if ('object' == typeof state) {\n          update(state)\n          render(state, ...args)\n        } else if ('function' == typeof state) {\n          render(state)\n        }\n      }\n    })\n\n    /**\n     * Camera field of view value.\n     *\n     * @type {Number}\n     */\n\n    define(this, 'fov', {\n      get: () => state.fov,\n      set: (fov) => update({fov})\n    })\n\n    /**\n     * Camera far value.\n     *\n     * @type {Number}\n     */\n\n    define(this, 'far', {\n      get: () => state.far,\n      set: (far) => update({far})\n    })\n\n    /**\n     * Camera near value.\n     *\n     * @type {Number}\n     */\n\n    define(this, 'near', {\n      get: () => state.near,\n      set: (near) => update({near})\n    })\n\n    /**\n     * Camera projection value.\n     *\n     * @type {Number}\n     */\n\n    define(this, 'projection', { get: () => projection })\n\n    /**\n     * Camera view matrix value.\n     *\n     * @type {Number}\n     */\n\n    define(this, 'view', { get: () => view })\n\n    /**\n     * Camera world up vector.\n     *\n     * @type {Vector}\n     */\n\n    define(this, 'worldUp', { get: () => worldUp })\n\n    /**\n     * Camera front vector.\n     *\n     * @type {Vector}\n     */\n\n    define(this, 'front', { get: () => front })\n\n    /**\n     * Camera right vector.\n     *\n     * @type {Vector}\n     */\n\n    define(this, 'right', { get: () => right })\n\n    /**\n     * Camera eye vector.\n     *\n     * @type {Vector}\n     */\n\n    define(this, 'eye', { get: () => eye })\n\n    /**\n     * Camera up vector.\n     *\n     * @type {Vector}\n     */\n\n    define(this, 'up', { get: () => up })\n\n    /**\n     * Camera lookAt target vector.\n     *\n     * @type {Vector}\n     */\n\n    define(this, 'target', { get: () => target })\n\n    /**\n     * Camera orientation vector.\n     *\n     * @type {Vector}\n     */\n\n    define(this, 'orientation', { get: () => orientation })\n\n    /**\n     * Looks at a target vector.\n     *\n     * @type {Number}\n     */\n\n    define(this, 'lookAt', {\n      value(vector) {\n        vec3.copy(target, vector)\n        return this\n      }\n    })\n  }\n}\n"
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "scratch",
    "memberof": "src/camera.js",
    "longname": "src/camera.js~scratch",
    "access": "private",
    "export": false,
    "importPath": "axis3d/src/camera.js",
    "importStyle": null,
    "description": "Scratch matrix",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "mat4"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_CAMERA_ORIENTATION_ORIGIN",
    "memberof": "src/camera.js",
    "longname": "src/camera.js~DEFAULT_CAMERA_ORIENTATION_ORIGIN",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/camera.js",
    "importStyle": "{DEFAULT_CAMERA_ORIENTATION_ORIGIN}",
    "description": "Euler angle of the origin camera orientation\nexpress in radians.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_CAMERA_FIELD_OF_VIEW",
    "memberof": "src/camera.js",
    "longname": "src/camera.js~DEFAULT_CAMERA_FIELD_OF_VIEW",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/camera.js",
    "importStyle": "{DEFAULT_CAMERA_FIELD_OF_VIEW}",
    "description": "Default field of view frustrum angle for the\npersective camera projection. This value is\nexpressed in radians.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_CAMERA_NEAR",
    "memberof": "src/camera.js",
    "longname": "src/camera.js~DEFAULT_CAMERA_NEAR",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/camera.js",
    "importStyle": "{DEFAULT_CAMERA_NEAR}",
    "description": "Default near value for the persective camera\nprojection.",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 5,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_CAMERA_FAR",
    "memberof": "src/camera.js",
    "longname": "src/camera.js~DEFAULT_CAMERA_FAR",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/camera.js",
    "importStyle": "{DEFAULT_CAMERA_FAR}",
    "description": "Default far value for the persective camera\nprojection.",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 6,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "CameraCommand",
    "memberof": "src/camera.js",
    "longname": "src/camera.js~CameraCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/camera.js",
    "importStyle": "{CameraCommand}",
    "description": "CameraCommand class.",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CameraCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 7,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/camera.js~CameraCommand",
    "longname": "src/camera.js~CameraCommand#constructor",
    "access": null,
    "description": "Camera class constructor.",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 8,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/command.js",
    "memberof": null,
    "longname": "src/command.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * No-op to return this only\n */\n\nconst noop = () => this\n\n/**\n * Module symbols.\n */\n\nimport {\n  $ctx,\n  $run,\n  $ref,\n} from './symbols'\n\n/**\n * Encode a function for execution within a\n * Command instance context.\n *\n * @public\n * @param {Function} fn\n * @return {String}\n */\n\nexport const encode = (fn) => `(${String(fn)})`\n\n/**\n * Command class.\n *\n * @public\n */\n\nexport class Command extends Function {\n\n  /**\n   * Generates code executed in an\n   * isolated context.\n   *\n   * @static\n   * @param {Function} fn\n   * @return {String}\n   */\n\n  static codegen(fn) {\n    return `\n    var fn = ${encode(fn)};\n    fn.apply(this, arguments);\n    return this;`\n  }\n\n  /**\n   * Command class constructor.\n   * Assigns a command runner and returns\n   * a command function.\n   *\n   * @constructor\n   * @param {Function} run\n   */\n\n  constructor(run) {\n    super(Command.codegen(commandRunnerWrap))\n    run = 'function' == typeof run ? run : noop\n    const state = {[$run]: run}\n    const ctx = this[$ctx] = new CommandContext(this, state)\n    const exec = (...args) => this(ctx, run, ...args)\n    const self = this\n    return (...args) => exec.call(self, ...args)\n  }\n}\n\n/**\n * CommandContext class.\n *\n * @public\n */\n\nexport class CommandContext {\n\n  /**\n   * CommandContext class constructor.\n   *\n   * @param {Command} cmd\n   * @param {Object} [state]\n   */\n\n  constructor(cmd, state) {\n    this[$ref] = cmd\n    Object.assign(this, state || {})\n  }\n\n  /**\n   * Returns a reference to the command.\n   * This is used in the commandRunnerWrap\n   * function.\n   *\n   * @getter\n   * @private\n   */\n\n  get ref() { return this[$ref] }\n}\n\n/**\n * Command runner wrap that calls a\n * commands internal run ($run) function.\n *\n * @private\n * @param {CommandContext} ctx\n * @param {Function} fn\n * @param {...Mixed} args\n * @return {Mixed}\n */\n\nfunction commandRunnerWrap(ctx, run, ...args) {\n  if (this && 'function' == typeof run) {\n    run.apply(run, [ctx, ...args])\n  }\n  return this\n}\n"
  },
  {
    "__docId__": 9,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "noop",
    "memberof": "src/command.js",
    "longname": "src/command.js~noop",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/command.js",
    "importStyle": null,
    "description": "No-op to return this only",
    "lineNumber": 7,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 10,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "encode",
    "memberof": "src/command.js",
    "longname": "src/command.js~encode",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/command.js",
    "importStyle": "{encode}",
    "description": "Encode a function for execution within a\nCommand instance context.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 11,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Command",
    "memberof": "src/command.js",
    "longname": "src/command.js~Command",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/command.js",
    "importStyle": "{Command}",
    "description": "Command class.",
    "lineNumber": 36,
    "interface": false,
    "extends": [
      "Function"
    ]
  },
  {
    "__docId__": 12,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "codegen",
    "memberof": "src/command.js~Command",
    "longname": "src/command.js~Command.codegen",
    "access": null,
    "description": "Generates code executed in an\nisolated context.",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@static",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 13,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/command.js~Command",
    "longname": "src/command.js~Command#constructor",
    "access": null,
    "description": "Command class constructor.\nAssigns a command runner and returns\na command function.",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "run",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 14,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "CommandContext",
    "memberof": "src/command.js",
    "longname": "src/command.js~CommandContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/command.js",
    "importStyle": "{CommandContext}",
    "description": "CommandContext class.",
    "lineNumber": 80,
    "interface": false
  },
  {
    "__docId__": 15,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/command.js~CommandContext",
    "longname": "src/command.js~CommandContext#constructor",
    "access": null,
    "description": "CommandContext class constructor.",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "Command"
        ],
        "spread": false,
        "optional": false,
        "name": "cmd",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "state",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 16,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "ref",
    "memberof": "src/command.js~CommandContext",
    "longname": "src/command.js~CommandContext#ref",
    "access": "private",
    "description": "Returns a reference to the command.\nThis is used in the commandRunnerWrap\nfunction.",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "commandRunnerWrap",
    "memberof": "src/command.js",
    "longname": "src/command.js~commandRunnerWrap",
    "access": "private",
    "export": false,
    "importPath": "axis3d/src/command.js",
    "importStyle": null,
    "description": "Command runner wrap that calls a\ncommands internal run ($run) function.",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "CommandContext"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "...Mixed"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Mixed"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 18,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/context.js",
    "memberof": null,
    "longname": "src/context.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { EventEmitter } from 'events'\nimport events from 'dom-events'\nimport glsl from 'glslify'\n// @TODO(werle) - consider using multi-regl\nimport regl from 'regl'\n\n/**\n * Module symbols.\n */\n\nimport {\n  $reglContext,\n  $domElement,\n  $hasFocus,\n  $previous,\n  $current,\n  $stack,\n  $state,\n  $regl\n} from './symbols'\n\n/**\n * Context class defaults.\n *\n * @public\n * @const\n * @type {Object}\n */\n\nexport const defaults = {\n  clear: {\n    // @TODO(werle) - use a color module\n    color: [17/255, 17/255, 17/255, 1],\n    depth: 1,\n  },\n}\n\n/**\n * Creates a new Context instance with\n * sane defaults.\n *\n * @param {Object} opts\n */\n\nexport default (state, opts) => new Context({...defaults, ...state}, opts)\n\n/**\n * Context class.\n *\n * @public\n * @class Context\n * @extends EventEmitter\n */\n\nexport class Context extends EventEmitter {\n\n  /**\n   * Context class constructor.\n   *\n   * @param {Objects} [initialState]\n   * @param {Object} [opts]\n   */\n\n  constructor(initialState = {}, opts = {}, createRegl = regl) {\n    super()\n\n    const reglOptions = { ...opts.regl }\n    if (opts.element && 'CANVAS' == opts.element.nodeName) {\n      reglOptions.canvas = opts.element\n    } else if (opts.element && opts.element.nodeName) {\n      reglOptions.container = opts.element\n    } else if ('string' == typeof opts.element) {\n      reglOptions.container = opts.element\n    }\n\n    this[$regl] = createRegl(reglOptions)\n    this[$stack] = []\n    this[$state] = initialState\n    this[$current] = null\n    this[$previous] = null\n    this[$hasFocus] = false\n    this[$domElement] = this[$regl]._gl.canvas\n    this[$reglContext] = null\n\n    this.setMaxListeners(Infinity)\n\n    events.on(this[$domElement], 'focus', () => this.focus())\n    events.on(this[$domElement], 'blur', () => this.blur())\n    events.on(window, 'blur', () => this.blur())\n  }\n\n  /**\n   * Current command getter.\n   *\n   * @getter\n   * @type {Command}\n   */\n\n  get current() {\n    return this[$current]\n  }\n\n  /**\n   * Previous command getter.\n   *\n   * @getter\n   * @type {Command}\n   */\n\n  get previous() {\n    return this[$previous]\n  }\n\n  /**\n   * Current stack depth.\n   *\n   * @type {Number}\n   */\n\n  get depth() {\n    return this[$stack].length\n  }\n\n  /**\n   * DOM element associated with this\n   * command context.\n   *\n   * @getter\n   * @type {Element}\n   */\n\n  get domElement() {\n    return this[$domElement]\n  }\n\n  /**\n   * Boolean indicating if context has\n   * focus.\n   *\n   * @getter\n   * @type {Boolean}\n   */\n\n  get hasFocus() {\n    return this[$hasFocus]\n  }\n\n  /**\n   * regl instance.\n   *\n   * @getter\n   * @type {Function}\n   */\n\n  get regl() {\n    return this[$regl]\n  }\n\n  /**\n   * State object.\n   *\n   * @getter\n   * @type {Object}\n   */\n\n  get state() {\n    return this[$stack]\n  }\n\n  /**\n   * Focuses context.\n   *\n   * @return {Context}\n   */\n\n  focus() {\n    this[$hasFocus] = true\n    this.emit('focus')\n    return this\n  }\n\n  /**\n   * Blurs context.\n   *\n   * @return {Context}\n   */\n\n  blur() {\n    this[$hasFocus] = false\n    this.emit('blur')\n    return this\n  }\n\n  /**\n   * Pushes command to context stack.\n   *\n   * @param {Command} command\n   * @return {Context}\n   */\n\n  push(command) {\n    if ('function' == typeof command) {\n      this[$stack].push(command)\n      this[$current] = command\n      this[$previous] = this[$stack][this[$stack].length - 2]\n    }\n    return this\n  }\n\n  /**\n   * Pops tail of context command stack.\n   *\n   * @return {Context}\n   */\n\n  pop() {\n    let command = this[$stack].pop()\n    this[$current] = this[$stack][this[$stack].length - 1]\n    this[$previous] = command\n    return command\n  }\n\n  /**\n   * Updates command context state.\n   *\n   * @param {Function|Object} block\n   * @return {Context}\n   */\n\n  update(block) {\n    if (block && 'object' == typeof block) {\n      Object.assign(this[$state], block)\n    }\n    return this\n  }\n\n  /**\n   * Clears the clear buffers in regl.\n   *\n   * @return {Context}\n   */\n\n  clear() {\n    this.regl.clear(this[$state].clear)\n    this[$current] = null\n    this[$previous] = null\n    this[$stack].splice(0, this[$stack].length)\n    return this\n  }\n}\n"
  },
  {
    "__docId__": 19,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "defaults",
    "memberof": "src/context.js",
    "longname": "src/context.js~defaults",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/context.js",
    "importStyle": "{defaults}",
    "description": "Context class defaults.",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 20,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Context",
    "memberof": "src/context.js",
    "longname": "src/context.js~Context",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/context.js",
    "importStyle": "{Context}",
    "description": "Context class.",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Context"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 21,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#constructor",
    "access": null,
    "description": "Context class constructor.",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "Objects"
        ],
        "spread": false,
        "optional": true,
        "name": "initialState",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 22,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "current",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#current",
    "access": null,
    "description": "Current command getter.",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Command"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 23,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "previous",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#previous",
    "access": null,
    "description": "Previous command getter.",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Command"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 24,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "depth",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#depth",
    "access": null,
    "description": "Current stack depth.",
    "lineNumber": 126,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "domElement",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#domElement",
    "access": null,
    "description": "DOM element associated with this\ncommand context.",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 26,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "hasFocus",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#hasFocus",
    "access": null,
    "description": "Boolean indicating if context has\nfocus.",
    "lineNumber": 150,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 27,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "regl",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#regl",
    "access": null,
    "description": "regl instance.",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 28,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "state",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#state",
    "access": null,
    "description": "State object.",
    "lineNumber": 172,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 29,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "focus",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#focus",
    "access": null,
    "description": "Focuses context.",
    "lineNumber": 182,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 30,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "blur",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#blur",
    "access": null,
    "description": "Blurs context.",
    "lineNumber": 194,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "push",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#push",
    "access": null,
    "description": "Pushes command to context stack.",
    "lineNumber": 207,
    "params": [
      {
        "nullable": null,
        "types": [
          "Command"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 32,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "pop",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#pop",
    "access": null,
    "description": "Pops tail of context command stack.",
    "lineNumber": 222,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 33,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#update",
    "access": null,
    "description": "Updates command context state.",
    "lineNumber": 236,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "block",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 34,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#clear",
    "access": null,
    "description": "Clears the clear buffers in regl.",
    "lineNumber": 249,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 35,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controller.js",
    "memberof": null,
    "longname": "src/controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Quaternion, Vector } from './math'\nimport { Command } from './command'\nimport { define } from './utils'\nimport vec3 from 'gl-vec3'\nimport quat from 'gl-quat'\n\n/**\n * Static vectors used for reference in\n * quaternion axis rotations.\n *\n */\n\nconst XVECTOR = new Vector(1, 0, 0)\nconst YVECTOR = new Vector(0, 1, 0)\nconst ZVECTOR = new Vector(0, 0, 1)\n\n/**\n * ControllerCommand class.\n *\n * @public\n * @abstract\n * @class ControllerCommand\n * @extends Command\n */\n\nexport class ControllerCommand extends Command {\n\n  /**\n   * ControllerCommand class contructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} opts\n   */\n\n  constructor(ctx, opts = {}, update = () => void 0) {\n    super((_, updates) => {\n      if (updates && 'target' in updates) {\n        target = updates.target\n      }\n\n      if (updates && 'source' in updates) {\n        source = updates.source\n      }\n\n      updateState(updates)\n      syncTarget()\n\n      if ('function' == typeof updates) {\n        updates(_)\n      }\n\n      update(_, {...state}, target, source)\n\n      for (let fn of middleware) {\n        fn(this, _, {...state}, target, source)\n      }\n    })\n\n    /**\n     * ControllerCommand middleware\n     *\n     * @private\n     * @const\n     * @type {Array}\n     */\n\n    const middleware = []\n\n    /**\n     * ControllerCommand state.\n     *\n     * @private\n     * @const\n     * @type {Object}\n     */\n\n    const state = Object.assign({\n      interpolationFactor: 0.1,\n      orientation: Object.assign(new Vector(0, 0, 0), opts.orientation),\n      quaternions: {\n        x: new Quaternion(), y: new Quaternion(), z: new Quaternion()\n      },\n    }, opts)\n\n    /**\n     * ControllerCommand rotation quaternion.\n     *\n     * @private\n     * @type {Quaternion}\n     */\n\n    let rotation = new Quaternion()\n\n    /**\n     * Target MeshCommand instance.\n     *\n     * @private\n     * @type {MeshCommand}\n     */\n\n    let target = opts.target || null\n\n    /**\n     * Source MeshCommand instance.\n     *\n     * @private\n     * @type {MeshCommand}\n     */\n\n    let source = opts.source || null\n\n    /**\n     * Updates controller state.\n     *\n     * @private\n     * @param {Object} updates\n     */\n\n    const updateState = (updates) => {\n      if (updates && 'object' == typeof updates) {\n        Object.assign(state, updates, {\n          orientation: Object.assign(state.orientation, updates.orientation),\n          quaternions: Object.assign(state.orientation, updates.orientation),\n        })\n      }\n    }\n\n    /**\n     * Syncs controller state to target.\n     *\n     * @private\n     */\n\n    const syncTarget = () => {\n      rotateTarget()\n    }\n\n    /**\n     * Rotates target at given orientation.\n     *\n     * @private\n     */\n\n    const rotateTarget = () => {\n      Quaternion.slerpTargetFromAxisAngles(rotation,\n                                           state.orientation,\n                                           state.interpolationFactor)\n    }\n\n    /**\n     * Target getter.\n     *\n     * @public\n     * @getter\n     * @type {MeshCommand}\n     */\n\n    define(this, 'target', { get: () => target })\n\n    /**\n     * Rotation getter.\n     *\n     * @public\n     * @getter\n     * @type {MeshCommand}\n     */\n\n    define(this, 'rotation', { get: () => rotation })\n\n    /**\n     * Source getter.\n     *\n     * @public\n     * @getter\n     * @type {MeshCommand}\n     */\n\n    define(this, 'source', { get: () => source })\n\n    /**\n     * Orientation getter.\n     *\n     * @public\n     * @getter\n     * @type {Vector}\n     */\n\n    define(this, 'orientation', { get: () => state.orientation })\n\n    /**\n     * Connects this controller to an input\n     * object.\n     *\n     * @public\n     * @param {MeshCommand} object\n     * @return {ControllerCommand}\n     */\n\n    this.connect = (object) => {\n      if ('function' == typeof object) {\n        target = object\n      }\n      return this\n    }\n\n    /**\n     * Sets the x axis angle orientation in\n     * radians.\n     *\n     * @param {Number} radians\n     * @return {ControllerCommand}\n     */\n\n    this.setAxisAngleX = (radians) => {\n      state.orientation.x = radians\n      return this\n    }\n\n    /**\n     * Sets the y axis angle orientation in\n     * radians.\n     *\n     * @param {Number} radians\n     * @return {ControllerCommand}\n     */\n\n    this.setAxisAngleY = (radians) => {\n      state.orientation.y = radians\n      return this\n    }\n\n    /**\n     * Sets the z axis angle orientation in\n     * radians.\n     *\n     * @param {Number} radians\n     * @return {ControllerCommand}\n     */\n\n    this.setAxisAngleZ = (radians) => {\n      state.orientation.z = radians\n      return this\n    }\n\n    /**\n     * Installs controller middleware.\n     *\n     * @param {Function} fn\n     * @return {ControllerCommand}\n     */\n\n    this.use = (fn) => {\n      middleware.push(fn)\n      return this\n    }\n  }\n}\n"
  },
  {
    "__docId__": 36,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "XVECTOR",
    "memberof": "src/controller.js",
    "longname": "src/controller.js~XVECTOR",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/controller.js",
    "importStyle": null,
    "description": "Static vectors used for reference in\nquaternion axis rotations.",
    "lineNumber": 19,
    "type": {
      "types": [
        "src/math.js~Vector"
      ]
    }
  },
  {
    "__docId__": 37,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "YVECTOR",
    "memberof": "src/controller.js",
    "longname": "src/controller.js~YVECTOR",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "src/math.js~Vector"
      ]
    }
  },
  {
    "__docId__": 38,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ZVECTOR",
    "memberof": "src/controller.js",
    "longname": "src/controller.js~ZVECTOR",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "src/math.js~Vector"
      ]
    }
  },
  {
    "__docId__": 39,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ControllerCommand",
    "memberof": "src/controller.js",
    "longname": "src/controller.js~ControllerCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/controller.js",
    "importStyle": "{ControllerCommand}",
    "description": "ControllerCommand class.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ControllerCommand"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 40,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controller.js~ControllerCommand",
    "longname": "src/controller.js~ControllerCommand#constructor",
    "access": null,
    "description": "ControllerCommand class contructor.",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 41,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "connect",
    "memberof": "src/controller.js~ControllerCommand",
    "longname": "src/controller.js~ControllerCommand#connect",
    "access": "public",
    "description": "Connects this controller to an input\nobject.",
    "lineNumber": 205,
    "params": [
      {
        "nullable": null,
        "types": [
          "MeshCommand"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ControllerCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 42,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "setAxisAngleX",
    "memberof": "src/controller.js~ControllerCommand",
    "longname": "src/controller.js~ControllerCommand#setAxisAngleX",
    "access": null,
    "description": "Sets the x axis angle orientation in\nradians.",
    "lineNumber": 220,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radians",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ControllerCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 43,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "setAxisAngleY",
    "memberof": "src/controller.js~ControllerCommand",
    "longname": "src/controller.js~ControllerCommand#setAxisAngleY",
    "access": null,
    "description": "Sets the y axis angle orientation in\nradians.",
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radians",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ControllerCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "setAxisAngleZ",
    "memberof": "src/controller.js~ControllerCommand",
    "longname": "src/controller.js~ControllerCommand#setAxisAngleZ",
    "access": null,
    "description": "Sets the z axis angle orientation in\nradians.",
    "lineNumber": 246,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radians",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ControllerCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 45,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "use",
    "memberof": "src/controller.js~ControllerCommand",
    "longname": "src/controller.js~ControllerCommand#use",
    "access": null,
    "description": "Installs controller middleware.",
    "lineNumber": 258,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ControllerCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controls/ambisonic-audio/index.js",
    "memberof": null,
    "longname": "src/controls/ambisonic-audio/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Omnitone as omnitone } from 'omnitone'\nimport defaultAudioContext from 'audio-context'\nimport clamp from 'clamp'\nimport quat from 'gl-quat'\nimport vec3 from 'gl-vec3'\nimport mat3 from 'gl-mat3'\nimport raf from 'raf'\n\nimport { XVector3, YVector3, ZVector3, } from '../../math/vector'\nimport { Quaternion, Vector, } from '../../math'\nimport { ControllerCommand } from '../../controller'\nimport { define, radians } from '../../utils'\n\n/**\n * AmbisonicAudioControllerCommand function.\n *\n * @see AmbisonicAudioControllerCommand\n */\n\nexport default (...args) => new AmbisonicAudioControllerCommand(...args)\n\n/**\n * AmbisonicAudioControllerCommand class\n *\n * @public\n * @class AmbisonicAudioControllerCommand\n * @extends ControllerCommand\n */\n\nexport class AmbisonicAudioControllerCommand extends ControllerCommand {\n\n  /**\n   * AmbisonicAudioControllerCommand class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} opts\n   */\n\n  constructor(ctx, opts = {}) {\n    let foaDecoder = null\n    let audioContext = null\n    let isFoaDecoderInitialized = false\n\n    super(ctx, { ...opts }, (_, updates = {}, target) => { })\n\n    define(this, 'audioContext', { get: () => audioContext })\n    define(this, 'foaDecoder', { get: () => foaDecoder })\n\n    if (opts) {\n      if (opts.audioContext instanceof window.AudioContext) {\n        audioContext = opts.audioContext\n      } else {\n        audioContext = defaultAudioContext\n      }\n\n      this.target && this.target.on('load', () => {\n        const target = this.target\n        const source = this.source\n\n        if (!target || !source) {\n          // @TODO(werle) - log error\n          return\n        } else if (null != foaDecoder) {\n          // @TODO(werle) - log error\n          return\n        }\n\n        foaDecoder = omnitone.createFOADecoder(\n          audioContext,\n          target.domElement,\n          Object.assign({ channelMap: [0, 1, 2, 3] }, opts)\n        )\n\n        foaDecoder.initialize()\n        .then(() => isFoaDecoderInitialized = true)\n        .catch((err) => emit('error', err))\n\n        let foaDecoderLoopFrame = null\n        let foaDecoderLoop = () => {\n          if (foaDecoderLoopFrame) {\n            foaDecoderLoopFrame = raf(foaDecoderLoop)\n          }\n\n          const mat = []\n          mat3.fromQuat(mat, source.rotation)\n          mat3.translate(mat, mat, vec3.negate([], target.position))\n          foaDecoder.setRotationMatrix(mat)\n        }\n\n        target.on('playing', () => {\n          if (foaDecoderLoopFrame) {\n            raf.cancel(foaDecoderLoopFrame)\n            foaDecoderLoopFrame = null\n          }\n\n          foaDecoderLoopFrame = raf(foaDecoderLoop)\n        })\n\n        target.on('pause', () => {\n          if (foaDecoderLoopFrame) {\n            raf.cancel(foaDecoderLoopFrame)\n            foaDecoderLoopFrame = null\n          }\n        })\n      })\n    }\n  }\n}\n"
  },
  {
    "__docId__": 47,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AmbisonicAudioControllerCommand",
    "memberof": "src/controls/ambisonic-audio/index.js",
    "longname": "src/controls/ambisonic-audio/index.js~AmbisonicAudioControllerCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/controls/ambisonic-audio/index.js",
    "importStyle": "{AmbisonicAudioControllerCommand}",
    "description": "AmbisonicAudioControllerCommand class",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AmbisonicAudioControllerCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 48,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controls/ambisonic-audio/index.js~AmbisonicAudioControllerCommand",
    "longname": "src/controls/ambisonic-audio/index.js~AmbisonicAudioControllerCommand#constructor",
    "access": null,
    "description": "AmbisonicAudioControllerCommand class constructor.",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "target",
    "memberof": "src/controls/ambisonic-audio/index.js~AmbisonicAudioControllerCommand",
    "longname": "src/controls/ambisonic-audio/index.js~AmbisonicAudioControllerCommand#target",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controls/first-person-camera/index.js",
    "memberof": null,
    "longname": "src/controls/first-person-camera/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport clamp from 'clamp'\nimport quat from 'gl-quat'\nimport vec3 from 'gl-vec3'\n\nimport { ControllerCommand } from '../../controller'\nimport { DEFAULT_FRICTION  } from '../orbit-camera'\nimport { define, radians } from '../../utils'\nimport applyKeyboardInput from './keyboard'\nimport applyMouseInput from '../orbit-camera/mouse'\nimport { Vector } from '../../math'\n\n/**\n * FirstPersonCameraController function.\n *\n * @see FirstPersonCameraController\n */\n\nexport default (...args) => new FirstPersonCameraController(...args)\n\n/**\n * FirstPersonCameraController class\n *\n * @public\n * @class FirstPersonCameraController\n * @extends ControllerCommand\n */\n\nexport class FirstPersonCameraController extends ControllerCommand {\n\n  /**\n   * FirstPersonCameraController class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} opts\n   */\n\n  constructor(ctx, opts = {}) {\n    super(ctx, { ...opts, rotate: false }, (_, updates) => {\n      const { keyboard, mouse } = this.inputs\n      const friction = this.friction\n      const camera = this.target\n\n      if (keyboard) { applyKeyboardInput(this, {keyboard}, opts) }\n      if (mouse) { applyMouseInput(this, {mouse}, opts) }\n    })\n\n    /**\n     * FirstPerson control inputs.\n     *\n     * @public\n     * @type {Object}\n     */\n\n    this.inputs = Object.assign({}, opts.inputs || {})\n\n    /**\n     * Friction value applied to various inputs.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this.friction = null != opts.friction ? opts.friction : DEFAULT_FRICTION\n  }\n}\n"
  },
  {
    "__docId__": 51,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FirstPersonCameraController",
    "memberof": "src/controls/first-person-camera/index.js",
    "longname": "src/controls/first-person-camera/index.js~FirstPersonCameraController",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/controls/first-person-camera/index.js",
    "importStyle": "{FirstPersonCameraController}",
    "description": "FirstPersonCameraController class",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "FirstPersonCameraController"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 52,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controls/first-person-camera/index.js~FirstPersonCameraController",
    "longname": "src/controls/first-person-camera/index.js~FirstPersonCameraController#constructor",
    "access": null,
    "description": "FirstPersonCameraController class constructor.",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 53,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "inputs",
    "memberof": "src/controls/first-person-camera/index.js~FirstPersonCameraController",
    "longname": "src/controls/first-person-camera/index.js~FirstPersonCameraController#inputs",
    "access": "public",
    "description": "FirstPerson control inputs.",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "friction",
    "memberof": "src/controls/first-person-camera/index.js~FirstPersonCameraController",
    "longname": "src/controls/first-person-camera/index.js~FirstPersonCameraController#friction",
    "access": "public",
    "description": "Friction value applied to various inputs.",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controls/first-person-camera/keyboard.js",
    "memberof": null,
    "longname": "src/controls/first-person-camera/keyboard.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { radians } from '../../utils'\nimport { Vector } from '../../math'\nimport clamp from 'clamp'\nimport vec3 from 'gl-vec3'\n\n/**\n * Applies orientation changes to first person fpCamera from\n * keyboard input\n *\n * @param {FirstPersonfpCameraController} fpCamera\n * @param {KeyboardCommand} keyboard\n */\n\nexport default (fpCamera, {keyboard}) => {\n  const { mouse } = fpCamera.inputs\n  const position = fpCamera.target.position\n  const front = new Vector(0, 0, -1)\n  const up = new Vector(0, 1, 0)\n\n  keyboard && keyboard(() => {\n    if (false == keyboard.isKeydown) { return }\n    if (mouse && mouse.buttons) { return }\n\n    const lastPosition = vec3.copy([], position)\n    const friction = fpCamera.friction\n    const step = 0.07*friction\n    const keys = keyboard.keys\n\n    // @TODO(werle) - should we reset keyboard state ?\n    if (keyboard.aliasMappings.value('control', keys)) {\n      return\n    }\n\n    if (keyboard.aliasMappings.value('up', keys)) {\n      const scaled = vec3.scale([], front, step)\n      vec3.add(position, position, scaled)\n      keyboard.aliasMappings.off('down', keys)\n    } else if (keyboard.aliasMappings.value('down', keys)) {\n      const scaled = vec3.scale([], front, step)\n      vec3.subtract(position, position, scaled)\n      keyboard.aliasMappings.off('up', keys)\n    }\n\n    if (keyboard.aliasMappings.value('left', keys)) {\n      const c = vec3.cross([], front, up)\n      const n = vec3.normalize([], c)\n      const scaled = vec3.scale([], n, step)\n      vec3.subtract(position, position, scaled)\n      keyboard.aliasMappings.off('right', keys)\n    } else if (keyboard.aliasMappings.value('right', keys)) {\n      const c = vec3.cross([], front, up)\n      const n = vec3.normalize([], c)\n      const scaled = vec3.scale([], n, step)\n      vec3.add(position, position, scaled)\n      keyboard.aliasMappings.off('left', keys)\n    }\n\n    fpCamera.target.lookAt(vec3.add([], position, front))\n  })\n}\n"
  },
  {
    "__docId__": 56,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controls/first-person-camera/mouse.js",
    "memberof": null,
    "longname": "src/controls/first-person-camera/mouse.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { radians } from '../../utils'\nimport clamp from 'clamp'\n\n/**\n * Local friction applied to rotations around\n * the x axis for mouse inputs.\n */\n\nconst X_AXIS_MOUSE_FRICTION = 0.0033\n\n/**\n * Local friction applied to rotations around\n * the y axis for mouse inputs.\n */\n\nconst Y_AXIS_MOUSE_FRICTION = 0.0046\n\n/**\n * Applies orientation changes to orbit fpCamera from\n * mouse input\n *\n * @param {OrbitfpCameraController} fpCamera\n * @param {MouseCommand} mouse\n */\n\nexport default (fpCamera, {mouse}, opts = {}) => {\n  const friction = fpCamera.friction\n  // update orientation from coordinates\n  mouse && mouse(() => {\n    const c = 0.0025\n    const xf = X_AXIS_MOUSE_FRICTION\n    const yf = Y_AXIS_MOUSE_FRICTION\n    const dy = mouse.deltaY\n    const dx = mouse.deltaX\n\n    // update if a singled button is pressed\n    if (1 == mouse.buttons && (dy || dx)) {\n      fpCamera.orientation.x += (false == opts.invert ? 1 : -1)*xf*dy*friction + (c*Math.random())\n      fpCamera.orientation.y += (false == opts.invert ? 1 : -1)*0.8*yf*dx*friction + (c*Math.random())\n    }\n\n    // clamp at north/south poles\n    fpCamera.orientation.x = clamp(fpCamera.orientation.x, radians(-90), radians(90))\n  })\n\n  // update field of view from mouse wheel\n  mouse && mouse(() => {\n    const c = 0.033\n    const dv = c*friction*mouse.wheel.deltaY\n    fpCamera.fov += dv\n    fpCamera.fov = clamp(fpCamera.fov, radians(0.1) , radians(180))\n  })\n}\n"
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "X_AXIS_MOUSE_FRICTION",
    "memberof": "src/controls/first-person-camera/mouse.js",
    "longname": "src/controls/first-person-camera/mouse.js~X_AXIS_MOUSE_FRICTION",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/controls/first-person-camera/mouse.js",
    "importStyle": null,
    "description": "Local friction applied to rotations around\nthe x axis for mouse inputs.",
    "lineNumber": 15,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Y_AXIS_MOUSE_FRICTION",
    "memberof": "src/controls/first-person-camera/mouse.js",
    "longname": "src/controls/first-person-camera/mouse.js~Y_AXIS_MOUSE_FRICTION",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/controls/first-person-camera/mouse.js",
    "importStyle": null,
    "description": "Local friction applied to rotations around\nthe y axis for mouse inputs.",
    "lineNumber": 22,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controls/orbit-camera/index.js",
    "memberof": null,
    "longname": "src/controls/orbit-camera/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport clamp from 'clamp'\nimport quat from 'gl-quat'\nimport vec3 from 'gl-vec3'\n\nimport { ControllerCommand } from '../../controller'\nimport applyOrientationInput from './orientation'\nimport applyKeyboardInput from './keyboard'\nimport { lerp, radians } from '../../utils'\nimport applyMouseInput from './mouse'\nimport applyTouchInput from './touch'\n\n/**\n * OrbitCameraController function.\n *\n * @see OrbitCameraController\n */\n\nexport default (...args) => new OrbitCameraController(...args)\n\n/**\n * Default friction value applied to inputs.\n *\n * @public\n * @const\n * @type {Number}\n */\n\nexport const DEFAULT_FRICTION = 0.8\n\n/**\n * OrbitCameraController class\n *\n * @public\n * @class OrbitCameraController\n * @extends ControllerCommand\n */\n\nexport class OrbitCameraController extends ControllerCommand {\n\n  /**\n   * OrbitCameraController class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} opts\n   */\n\n  constructor(ctx, opts = {}) {\n    super(ctx, { ...opts }, (_, updates, target) => {\n      const friction = this.friction\n      const camera = updates.target || this.target\n      const inputs = this.inputs || {}\n\n      if (true != opts.invert) {\n        opts.invert = false\n      }\n\n      // supported inputs\n      const orientation = inputs.orientation\n      const keyboard = inputs.keyboard\n      const mouse = inputs.mouse\n      const touch = inputs.touch\n\n      if (orientation) { applyOrientationInput(this, {orientation}, opts) }\n      if (keyboard) { applyKeyboardInput(this, {keyboard}, opts) }\n      if (touch) { applyTouchInput(this, {touch}, opts) }\n      if (mouse) { applyMouseInput(this, {mouse}, opts) }\n\n      quat.copy(camera.rotation, this.rotation)\n    })\n\n    /**\n     * Orbit control inputs.\n     *\n     * @public\n     * @type {Object}\n     */\n\n    this.inputs = Object.assign({}, opts.inputs || {})\n\n    /**\n     * Friction value applied to various inputs.\n     *\n     * @public\n     * @type {Number}\n     */\n\n    this.friction = null != opts.friction ? opts.friction : DEFAULT_FRICTION\n  }\n}\n"
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_FRICTION",
    "memberof": "src/controls/orbit-camera/index.js",
    "longname": "src/controls/orbit-camera/index.js~DEFAULT_FRICTION",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/controls/orbit-camera/index.js",
    "importStyle": "{DEFAULT_FRICTION}",
    "description": "Default friction value applied to inputs.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "OrbitCameraController",
    "memberof": "src/controls/orbit-camera/index.js",
    "longname": "src/controls/orbit-camera/index.js~OrbitCameraController",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/controls/orbit-camera/index.js",
    "importStyle": "{OrbitCameraController}",
    "description": "OrbitCameraController class",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "OrbitCameraController"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 62,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controls/orbit-camera/index.js~OrbitCameraController",
    "longname": "src/controls/orbit-camera/index.js~OrbitCameraController#constructor",
    "access": null,
    "description": "OrbitCameraController class constructor.",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 63,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "inputs",
    "memberof": "src/controls/orbit-camera/index.js~OrbitCameraController",
    "longname": "src/controls/orbit-camera/index.js~OrbitCameraController#inputs",
    "access": "public",
    "description": "Orbit control inputs.",
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "friction",
    "memberof": "src/controls/orbit-camera/index.js~OrbitCameraController",
    "longname": "src/controls/orbit-camera/index.js~OrbitCameraController#friction",
    "access": "public",
    "description": "Friction value applied to various inputs.",
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 65,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controls/orbit-camera/keyboard.js",
    "memberof": null,
    "longname": "src/controls/orbit-camera/keyboard.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { radians } from '../../utils'\nimport clamp from 'clamp'\n\n/**\n * Applies orientation changes to orbit orbitCamera from\n * keyboard input\n *\n * @param {OrbitorbitCameraController} orbitCamera\n * @param {KeyboardCommand} keyboard\n */\n\nexport default (orbitCamera, {keyboard}, opts = {}, {dx = 0, dy = 0} = {}) => {\n  keyboard && keyboard(() => {\n    const friction = orbitCamera.friction\n    let c = 0.07\n    const step = c*friction\n    const keys = keyboard.keys\n\n    // @TODO(werle) - should we reset keyboard state ?\n    if (keyboard.aliasMappings.value('control', keys)) {\n      return\n    }\n\n    if (keyboard.aliasMappings.value('up', keys)) {\n      dx = dx + step\n      orbitCamera.orientation.x -= step\n      keyboard.aliasMappings.off('down', keys)\n    } else if (keyboard.aliasMappings.value('down', keys)) {\n      dx = dx - step\n      orbitCamera.orientation.x += step\n      keyboard.aliasMappings.off('up', keys)\n    }\n\n    if (keyboard.aliasMappings.value('left', keys)) {\n      dy = dy + step\n      orbitCamera.orientation.y -= step\n      keyboard.aliasMappings.off('right', keys)\n    } else if (keyboard.aliasMappings.value('right', keys)) {\n      dy = dy - step\n      orbitCamera.orientation.y += step\n      keyboard.aliasMappings.off('left', keys)\n    }\n\n    c = 0.075\n    if (dx) { orbitCamera.orientation.x += c*dx}\n    if (dy) { orbitCamera.orientation.y += c*dy}\n\n  })\n}\n"
  },
  {
    "__docId__": 66,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controls/orbit-camera/mouse.js",
    "memberof": null,
    "longname": "src/controls/orbit-camera/mouse.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { radians } from '../../utils'\nimport clamp from 'clamp'\n\n/**\n * Local friction applied to rotations around\n * the x axis for mouse inputs.\n */\n\nconst X_AXIS_MOUSE_FRICTION = 0.005\n\n/**\n * Local friction applied to rotations around\n * the y axis for mouse inputs.\n */\n\nconst Y_AXIS_MOUSE_FRICTION = 0.006\n\n/**\n * Applies orientation changes to orbit orbitCamera from\n * mouse input\n *\n * @param {OrbitorbitCameraController} orbitCamera\n * @param {MouseCommand} mouse\n */\n\nexport default (orbitCamera, {mouse}, opts = {}) => {\n  const friction = orbitCamera.friction\n  // update orientation from coordinates\n  mouse && mouse(() => {\n    const xf = X_AXIS_MOUSE_FRICTION\n    const yf = Y_AXIS_MOUSE_FRICTION\n    const dy = mouse.deltaY\n    const dx = mouse.deltaX\n\n    // update if a singled button is pressed\n    if (1 == mouse.buttons && (dy || dx)) {\n      orbitCamera.orientation.x += (false == opts.invert ? 1 : -1)*xf*dy*friction\n      orbitCamera.orientation.y += (false == opts.invert ? 1 : -1)*yf*dx*friction\n    }\n\n    // clamp at north/south poles\n    orbitCamera.orientation.x = clamp(orbitCamera.orientation.x, radians(-90), radians(90))\n  })\n\n  // update field of view from mouse wheel\n  mouse && mouse(() => {\n    const c = 0.033\n    const dv = c*friction*mouse.wheel.deltaY\n    if (!orbitCamera.fov) { orbitCamera.fov = 0 }\n    orbitCamera.target.fov += dv\n    orbitCamera.target.fov = clamp(orbitCamera.target.fov, radians(0.1) , radians(120))\n  })\n}\n"
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "X_AXIS_MOUSE_FRICTION",
    "memberof": "src/controls/orbit-camera/mouse.js",
    "longname": "src/controls/orbit-camera/mouse.js~X_AXIS_MOUSE_FRICTION",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/controls/orbit-camera/mouse.js",
    "importStyle": null,
    "description": "Local friction applied to rotations around\nthe x axis for mouse inputs.",
    "lineNumber": 15,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Y_AXIS_MOUSE_FRICTION",
    "memberof": "src/controls/orbit-camera/mouse.js",
    "longname": "src/controls/orbit-camera/mouse.js~Y_AXIS_MOUSE_FRICTION",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/controls/orbit-camera/mouse.js",
    "importStyle": null,
    "description": "Local friction applied to rotations around\nthe y axis for mouse inputs.",
    "lineNumber": 22,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controls/orbit-camera/orientation.js",
    "memberof": null,
    "longname": "src/controls/orbit-camera/orientation.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { radians } from '../../utils'\nimport clamp from 'clamp'\n\n/**\n * Applies orientation changes to orbit orbitCamera from\n * orientation input\n *\n * @param {OrbitorbitCameraController} orbitCamera\n * @param {OrientationCommand} orientation\n */\n\nexport default (orbitCamera, {orientation}) => {\n  // update orientation from orientation input\n  orientation && orientation(() => {\n    const friction = orbitCamera.friction\n    orbitCamera.orientation.x -= friction*radians(orientation.deltaBeta)\n    orbitCamera.orientation.y -= friction*radians(orientation.deltaGamma)\n    orbitCamera.orientation.z -= friction*radians(orientation.deltaAlpha)\n  })\n}\n"
  },
  {
    "__docId__": 70,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controls/orbit-camera/touch.js",
    "memberof": null,
    "longname": "src/controls/orbit-camera/touch.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { radians } from '../../utils'\nimport clamp from 'clamp'\n\n/**\n * Applies touch changes to orbit orbitCamera from\n * touch input\n *\n * @param {OrbitorbitCameraController} orbitCamera\n * @param {TouchCommand} touch\n */\n\nexport default (orbitCamera, {touch}) => {\n  // update orientation from touch input\n  touch && touch(() => {\n    const friction = orbitCamera.friction\n    const dx = touch.deltaX\n    const dy = touch.deltaY\n    const c = 0.075\n\n    if (touch.touches && touch.touches.length) {\n      orbitCamera.orientation.x -= c*dy*friction\n      orbitCamera.orientation.y -= c*dx*friction\n    }\n  })\n}\n"
  },
  {
    "__docId__": 71,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data.js",
    "memberof": null,
    "longname": "src/data.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": ""
  },
  {
    "__docId__": 72,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/feedback.js",
    "memberof": null,
    "longname": "src/feedback.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { SphereGeometry } from './geometry/sphere'\nimport { BoxGeometry } from './geometry/box'\nimport { Command } from './command'\nimport glslify from 'glslify'\nimport mat4 from 'gl-mat4'\n\nconst defaultGeometry = new SphereGeometry({radius: 100})\n\nconst frag = `\nprecision mediump float;\n\nuniform sampler2D texture;\nuniform float opacity;\nuniform float time;\nvarying vec2 vuv;\n\nvoid main () {\n  const int n = 8;\n  float d = 0.001;\n  vec3 c = texture2D(texture, vuv).rgb;\n\n  for (int i = 0; i < n; i++) {\n    c += texture2D(texture, vuv + vec2(+d, +d)).rgb;\n    c += texture2D(texture, vuv + vec2(-d, +d)).rgb;\n    c += texture2D(texture, vuv + vec2(+d, -d)).rgb;\n    c += texture2D(texture, vuv + vec2(-d, -d)).rgb;\n    d *= 1.6 * float(i) + sin(time);\n  }\n\n  gl_FragColor = vec4(0.9*c/(1.0 + 4.0*float(n)), opacity);\n}\n`\n\nconst vert = (glslify`\nprecision highp float;\n#pragma glslify: linevoffset = require('screen-projected-lines')\n#pragma glslify: snoise = require('glsl-noise/simplex/4d')\n\nuniform mat4 projection;\nuniform mat4 model;\nuniform mat4 view;\nattribute vec3 position;\nvarying vec2 vuv;\n\nvoid main() {\n  mat4 proj = projection * view * model;\n  vuv = 0.5*(1.0 + position.xy);\n  gl_Position = proj * vec4(position, 1.0);\n}\n`).split('\\n').slice(1).join('\\n')\n\n/**\n * FeedbackCommand constructor.\n * @see FeedbackCommand\n */\n\nexport default (...args) => new FeedbackCommand(...args)\n\n/**\n * FeedbackCommand class.\n *\n * @public\n * @class FeedbackCommand\n * @extends Command\n */\n\nexport class FeedbackCommand extends Command {\n\n  /**\n   * FeedbackCommand class constructor.\n   *\n   * @param {Context} ctx\n   */\n\n  constructor(ctx, opts = {}) {\n    const regl = ctx.regl\n    const texture = regl.texture()\n    const fb = regl.framebuffer({color: texture})\n    const draw = regl({\n      vert,\n      frag,\n\n      depth: { enable: false },\n      //cull: { enable: true, face: 'back'},\n      elements() {\n        if (ctx.current && ctx.current.geometry) {\n          return ctx.current.geometry.cells\n        } else {\n          return defaultGeometry.cells\n        }\n      },\n\n      attributes: {\n        position() {\n          if (ctx.current && ctx.current.geometry) {\n            return ctx.current.geometry.positions\n          } else {\n            return defaultGeometry.positions\n          }\n        }\n      },\n\n      uniforms: {\n        texture: texture,\n        opacity: (ctx, {opacity}) => null != opacity ? opacity : 1,\n        model: (ctx, {model, scale}) => mat4.scale([], model || mat4.identity([]), scale || [1, 1, 1]),\n      },\n\n      blend: {\n        enable: true,\n        func: {\n          src: 'src alpha',\n          dst: 'one minus src alpha'\n        },\n      },\n\n      primitive(ctx, {primitive = 'triangles'} = {}) {\n        return opts.primitive || primitive\n      }\n    })\n\n    super((_, state = {}, block = () => void 0) => {\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      draw(state || {})\n      block()\n      texture({copy: true, mag: 'linear', min: 'linear'})\n    })\n  }\n}\n"
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "defaultGeometry",
    "memberof": "src/feedback.js",
    "longname": "src/feedback.js~defaultGeometry",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/feedback.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "src/geometry/sphere.js~SphereGeometry"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "frag",
    "memberof": "src/feedback.js",
    "longname": "src/feedback.js~frag",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/feedback.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "vert",
    "memberof": "src/feedback.js",
    "longname": "src/feedback.js~vert",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/feedback.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FeedbackCommand",
    "memberof": "src/feedback.js",
    "longname": "src/feedback.js~FeedbackCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/feedback.js",
    "importStyle": "{FeedbackCommand}",
    "description": "FeedbackCommand class.",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "FeedbackCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 77,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/feedback.js~FeedbackCommand",
    "longname": "src/feedback.js~FeedbackCommand#constructor",
    "access": null,
    "description": "FeedbackCommand class constructor.",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 78,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/frame.js",
    "memberof": null,
    "longname": "src/frame.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { $reglContext } from './symbols'\nimport { Command } from './command'\nimport { define } from './utils'\n\n/**\n * FrameCommand constructor.\n * @see FrameCommand\n */\n\nexport default (...args) => new FrameCommand(...args)\n\n/**\n * FrameCommand class.\n *\n * @public\n * @class FrameCommand\n * @extends Command\n */\n\nexport class FrameCommand extends Command {\n\n  /**\n   * FrameCommand class constructor.\n   *\n   * @param {Context} ctx\n   */\n\n  constructor(ctx, opts = {}) {\n    // @TODO(werle) - use framebuffer\n\n    let reglContext = null\n    let isRunning = false\n    let tick = null\n    const regl = ctx.regl\n\n    const queue = []\n\n    super((_, refresh) => {\n      queue.push(refresh)\n      if (false == isRunning) {\n        this.start()\n      }\n    })\n\n    const scope = regl({\n      context: {\n        resolution: ({viewportWidth, viewportHeight}) => ([\n          viewportWidth, viewportHeight\n        ])\n      },\n\n      uniforms: {\n        time: regl.context('time'),\n        resolution: ({viewportWidth, viewportHeight}) => ([\n          viewportWidth, viewportHeight\n        ]),\n      }\n    })\n\n    /**\n     * Starts the frame loop.\n     *\n     * @return {FrameCommand}\n     */\n\n    this.start = () => {\n      if (isRunning) { return this }\n      tick = regl.frame((_, ...args) => {\n        scope((_) => {\n          reglContext = _\n          ctx[$reglContext] = reglContext\n          ctx.clear()\n          for (let refresh of queue) {\n            if ('function' == typeof refresh) {\n              refresh(reglContext, ...args)\n            }\n          }\n        })\n      })\n      return this\n    }\n\n    /**\n     * Stops the frame loop\n     *\n     * @return {FrameCommand}\n     */\n\n    this.stop = () => {\n      if (tick) {\n        tick.cancel()\n        tick = null\n      }\n      return this\n    }\n  }\n}\n"
  },
  {
    "__docId__": 79,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FrameCommand",
    "memberof": "src/frame.js",
    "longname": "src/frame.js~FrameCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/frame.js",
    "importStyle": "{FrameCommand}",
    "description": "FrameCommand class.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "FrameCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 80,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/frame.js~FrameCommand",
    "longname": "src/frame.js~FrameCommand#constructor",
    "access": null,
    "description": "FrameCommand class constructor.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 81,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "src/frame.js~FrameCommand",
    "longname": "src/frame.js~FrameCommand#start",
    "access": null,
    "description": "Starts the frame loop.",
    "lineNumber": 72,
    "return": {
      "nullable": null,
      "types": [
        "FrameCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/frame.js~FrameCommand",
    "longname": "src/frame.js~FrameCommand#stop",
    "access": null,
    "description": "Stops the frame loop",
    "lineNumber": 95,
    "return": {
      "nullable": null,
      "types": [
        "FrameCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/fullscreen.js",
    "memberof": null,
    "longname": "src/fullscreen.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\n/**\n * Module dependencies.\n */\n\nimport { Command } from './command'\nimport fullscreen from 'fullscreen'\n\n/**\n * FullscreenCommand constructor.\n * @see FullscreenCommand\n */\n\nexport default (...args) => new FullscreenCommand(...args)\n\n/**\n * Fullscreen class.\n *\n * @public\n * @class FullscreenComand\n * @extends Command\n */\n\nexport class FullscreenCommand extends Command {\n\n  /**\n   * FullscreenCommand class constructor that toggles\n   * fullscreen view\n   *\n   * @constructor\n   * @param {Object} ctx\n   * @param {Object} [opts]\n   */\n\n  constructor(ctx) {\n    // set fullscreen to target canvas element\n    const fs = fullscreen(ctx.domElement)\n\n    // toggle fullscreen\n    super((_, {enabled}) => {\n      if (enabled) {\n        fs.request()\n      } else {\n        fs.release()\n      }\n    })\n  }\n}\n"
  },
  {
    "__docId__": 84,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FullscreenCommand",
    "memberof": "src/fullscreen.js",
    "longname": "src/fullscreen.js~FullscreenCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/fullscreen.js",
    "importStyle": "{FullscreenCommand}",
    "description": "Fullscreen class.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "FullscreenComand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 85,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/fullscreen.js~FullscreenCommand",
    "longname": "src/fullscreen.js~FullscreenCommand#constructor",
    "access": null,
    "description": "FullscreenCommand class constructor that toggles\nfullscreen view",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 86,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/geometry/box.js",
    "memberof": null,
    "longname": "src/geometry/box.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport PrimitiveBox from 'geo-3d-box'\nimport { Geometry } from '../geometry'\n\n/**\n * BoxGeometry class.\n *\n * @public\n * @class BoxGeometry\n * @extends Geometry\n * @see https://www.npmjs.com/package/geo-3d-box\n */\n\nexport class BoxGeometry extends Geometry {\n\n  /**\n   * BoxGeometry class constructor.\n   *\n   * @param {Object} opts\n   * @param {Number} opts.size\n   * @param {Number} opts.segments\n   * @param {Object} primitive\n   */\n\n  constructor({size = 1, segments = 2} = {}, primitive) {\n    primitive = primitive || PrimitiveBox({size, segments})\n    super({size, segments, primitive})\n  }\n\n  /**\n   * Updates BoxGeometry state\n   *\n   * @return {BoxGeometry}\n   */\n\n  update() {\n    const segments = this.segments\n    const size = this.size\n    this.primitive = PrimitiveBox({size, segments})\n    return this\n  }\n}\n"
  },
  {
    "__docId__": 87,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BoxGeometry",
    "memberof": "src/geometry/box.js",
    "longname": "src/geometry/box.js~BoxGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/geometry/box.js",
    "importStyle": "{BoxGeometry}",
    "description": "BoxGeometry class.",
    "see": [
      "https://www.npmjs.com/package/geo-3d-box"
    ],
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "BoxGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 88,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/geometry/box.js~BoxGeometry",
    "longname": "src/geometry/box.js~BoxGeometry#constructor",
    "access": null,
    "description": "BoxGeometry class constructor.",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.size",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "primitive",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 89,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/geometry/box.js~BoxGeometry",
    "longname": "src/geometry/box.js~BoxGeometry#update",
    "access": null,
    "description": "Updates BoxGeometry state",
    "lineNumber": 41,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "BoxGeometry"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 90,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "primitive",
    "memberof": "src/geometry/box.js~BoxGeometry",
    "longname": "src/geometry/box.js~BoxGeometry#primitive",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/geometry/plane.js",
    "memberof": null,
    "longname": "src/geometry/plane.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport PrimitivePlane from 'primitive-plane'\nimport { Geometry } from '../geometry'\n\n/**\n * PlaneGeometry class.\n *\n * @public\n * @class PlaneGeometry\n * @extends Geometry\n * @see https://www.npmjs.com/package/primitive-plane\n */\n\nexport class PlaneGeometry extends Geometry {\n\n  /**\n   * PlaneGeometry class constructor.\n   *\n   * @param {Object} opts\n   * @param {Object} opts.size\n   * @param {Number} opts.size.x\n   * @param {Number} opts.size.y\n   * @param {Object} opts.segments\n   * @param {Number} opts.segments.x\n   * @param {Number} opts.segments.y\n   * @param {Object} primitive\n   */\n\n  constructor({size = {x : 1, y: 1}, segments = {x: 1, y: 1}} = {}, primitive) {\n    primitive = primitive || PrimitivePlane(\n      size.x, size.y,\n      segments.x, segments.y,\n      { quad: false }\n    )\n    super({size, segments, primitive})\n  }\n\n  /**\n   * Updates PlaneGeometry state\n   *\n   * @return {PlaneGeometry}\n   */\n\n  update() {\n    const segments = this.segments\n    const size = this.size\n    this.primitive = PrimitivePlane({size, segments})\n    return this\n  }\n}\n"
  },
  {
    "__docId__": 92,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PlaneGeometry",
    "memberof": "src/geometry/plane.js",
    "longname": "src/geometry/plane.js~PlaneGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/geometry/plane.js",
    "importStyle": "{PlaneGeometry}",
    "description": "PlaneGeometry class.",
    "see": [
      "https://www.npmjs.com/package/primitive-plane"
    ],
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PlaneGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 93,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/geometry/plane.js~PlaneGeometry",
    "longname": "src/geometry/plane.js~PlaneGeometry#constructor",
    "access": null,
    "description": "PlaneGeometry class constructor.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.size",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.size.x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.size.y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments.x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments.y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "primitive",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 94,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/geometry/plane.js~PlaneGeometry",
    "longname": "src/geometry/plane.js~PlaneGeometry#update",
    "access": null,
    "description": "Updates PlaneGeometry state",
    "lineNumber": 49,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "PlaneGeometry"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 95,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "primitive",
    "memberof": "src/geometry/plane.js~PlaneGeometry",
    "longname": "src/geometry/plane.js~PlaneGeometry#primitive",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/geometry/sphere.js",
    "memberof": null,
    "longname": "src/geometry/sphere.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport PrimitiveSphere from 'primitive-sphere'\nimport { Geometry } from '../geometry'\n\n/**\n * SphereGeometry class.\n *\n * @public\n * @class SphereGeometry\n * @extends Geometry\n * @see https://www.npmjs.com/package/primitive-sphere\n */\n\nexport class SphereGeometry extends Geometry {\n\n  /**\n   * SphereGeometry class constructor.\n   *\n   * @param {Object} [opts]\n   * @param {Number} [opts.radius]\n   * @param {Number} [opts.segments]\n   * @param {Object} [primitive]\n   */\n\n  constructor({radius = 1, segments = 128} = {}, primitive) {\n    primitive = primitive || PrimitiveSphere(radius, {segments})\n    super({radius, segments, primitive})\n  }\n\n  /**\n   * Updates SphereGeometry state\n   *\n   * @return {SphereGeometry}\n   */\n\n  update() {\n    const segments = this.segments\n    const radius = this.radius\n    this.primitive = PrimitiveSphere(radius, {segments})\n    return this\n  }\n}\n"
  },
  {
    "__docId__": 97,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SphereGeometry",
    "memberof": "src/geometry/sphere.js",
    "longname": "src/geometry/sphere.js~SphereGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/geometry/sphere.js",
    "importStyle": "{SphereGeometry}",
    "description": "SphereGeometry class.",
    "see": [
      "https://www.npmjs.com/package/primitive-sphere"
    ],
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SphereGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 98,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/geometry/sphere.js~SphereGeometry",
    "longname": "src/geometry/sphere.js~SphereGeometry#constructor",
    "access": null,
    "description": "SphereGeometry class constructor.",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.radius",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.segments",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "primitive",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 99,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/geometry/sphere.js~SphereGeometry",
    "longname": "src/geometry/sphere.js~SphereGeometry#update",
    "access": null,
    "description": "Updates SphereGeometry state",
    "lineNumber": 41,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "SphereGeometry"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 100,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "primitive",
    "memberof": "src/geometry/sphere.js~SphereGeometry",
    "longname": "src/geometry/sphere.js~SphereGeometry#primitive",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/geometry/triangle.js",
    "memberof": null,
    "longname": "src/geometry/triangle.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Geometry } from '../geometry'\n\n/**\n * TriangleGeometry class.\n *\n * @public\n * @class TriangleGeometry\n * @see https://www.npmjs.com/package/primitive-sphere\n */\n\nexport class TriangleGeometry extends Geometry {\n\n  /**\n   * TriangleGeometry class constructor.\n   */\n\n  constructor(primitive) {\n    primitive = primitive || {\n      positions: [\n        [-0.0, +1.0],\n        [+1.0, -1.0],\n        [-1.0, -1.0],\n      ],\n\n      normals: [\n        [-0.00000, +0.57735],\n        [+0.57735, -0.57735],\n        [-0.57735, -0.57735],\n      ],\n\n      uvs: [\n        [-0.0, +1.0],\n        [+1.0, -1.0],\n        [-1.0, -1.0],\n      ],\n    }\n\n    super({primitive})\n  }\n}\n"
  },
  {
    "__docId__": 102,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TriangleGeometry",
    "memberof": "src/geometry/triangle.js",
    "longname": "src/geometry/triangle.js~TriangleGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/geometry/triangle.js",
    "importStyle": "{TriangleGeometry}",
    "description": "TriangleGeometry class.",
    "see": [
      "https://www.npmjs.com/package/primitive-sphere"
    ],
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TriangleGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "src/geometry.js~Geometry"
    ]
  },
  {
    "__docId__": 103,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/geometry/triangle.js~TriangleGeometry",
    "longname": "src/geometry/triangle.js~TriangleGeometry#constructor",
    "access": null,
    "description": "TriangleGeometry class constructor.",
    "lineNumber": 23,
    "params": [
      {
        "name": "primitive",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 104,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/geometry.js",
    "memberof": null,
    "longname": "src/geometry.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport Wireframe from 'screen-projected-lines'\n\n/**\n * Geometry class.\n *\n * @public\n * @class Geometry\n */\n\nexport class Geometry {\n\n  /**\n   * Geometry class constructor.\n   *\n   * @param {Object} [initialState]\n   */\n\n  constructor(initialState) {\n    Object.assign(this, initialState || {})\n    this.primitive = this.primitive || null\n    this.wireframe = this.primitive ? Wireframe(this.primitive) : null\n  }\n\n  /**\n   * An array of position values sourced from\n   * the geometry primitive.\n   *\n   * @getter\n   * @type {Array}\n   */\n\n  get positions() {\n    return this.primitive ? this.primitive.positions : null\n  }\n\n  /**\n   * An array of normal values sourced from\n   * the geometry primitive.\n   *\n   * @getter\n   * @type {Array}\n   */\n\n  get normals() {\n    return this.primitive ? this.primitive.normals : null\n  }\n\n  /**\n   * An array of uv values sourced from\n   * the geometry primitive.\n   *\n   * @getter\n   * @type {Array}\n   */\n\n  get uvs() {\n    return this.primitive ? this.primitive.uvs : null\n  }\n\n  /**\n   * An array of cell values sourced from\n   * the geometry primitive.\n   *\n   * @getter\n   * @type {Array}\n   */\n\n  get cells() {\n    return this.primitive ? this.primitive.cells : null\n  }\n\n  /**\n   * Abstract update method to be overloaded\n   */\n\n  update() {\n    return this\n  }\n}\n"
  },
  {
    "__docId__": 105,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Geometry",
    "memberof": "src/geometry.js",
    "longname": "src/geometry.js~Geometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/geometry.js",
    "importStyle": "{Geometry}",
    "description": "Geometry class.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Geometry"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 106,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/geometry.js~Geometry",
    "longname": "src/geometry.js~Geometry#constructor",
    "access": null,
    "description": "Geometry class constructor.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "initialState",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 107,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "primitive",
    "memberof": "src/geometry.js~Geometry",
    "longname": "src/geometry.js~Geometry#primitive",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "wireframe",
    "memberof": "src/geometry.js~Geometry",
    "longname": "src/geometry.js~Geometry#wireframe",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "positions",
    "memberof": "src/geometry.js~Geometry",
    "longname": "src/geometry.js~Geometry#positions",
    "access": null,
    "description": "An array of position values sourced from\nthe geometry primitive.",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 110,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "normals",
    "memberof": "src/geometry.js~Geometry",
    "longname": "src/geometry.js~Geometry#normals",
    "access": null,
    "description": "An array of normal values sourced from\nthe geometry primitive.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 111,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "uvs",
    "memberof": "src/geometry.js~Geometry",
    "longname": "src/geometry.js~Geometry#uvs",
    "access": null,
    "description": "An array of uv values sourced from\nthe geometry primitive.",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 112,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "cells",
    "memberof": "src/geometry.js~Geometry",
    "longname": "src/geometry.js~Geometry#cells",
    "access": null,
    "description": "An array of cell values sourced from\nthe geometry primitive.",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 113,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/geometry.js~Geometry",
    "longname": "src/geometry.js~Geometry#update",
    "access": null,
    "description": "Abstract update method to be overloaded",
    "lineNumber": 82,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 114,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/input/keyboard.js",
    "memberof": null,
    "longname": "src/input/keyboard.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Command } from '../command'\nimport { define } from '../utils'\nimport keycode from 'keycode'\nimport events from 'dom-events'\nimport raf from 'raf'\n\n/**\n * Keyboard function.\n *\n * @see KeyboardCommand\n */\n\nexport default (...args) => new KeyboardCommand(...args)\n\n/**\n * KeyboardCommand class\n *\n * @public\n * @class KeyboardCommand\n * @extends Command\n */\n\nexport class KeyboardCommand extends Command {\n\n  /**\n   * KeyboardCommand class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} [opts]\n   */\n\n  constructor(ctx, opts = {}) {\n    super((_, block) => {\n      if ('function' == typeof block) {\n        block(this)\n      }\n    })\n\n    ctx.on('blur', () => {\n      raf(() => this.reset())\n    })\n\n    /**\n     * Keyboard state.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    const state = {\n      keycodes: {},\n      keys: {}\n    }\n\n    /**\n     * Alias key mappings.\n     *\n     * @const\n     * @type {Object}\n     */\n\n    const mappings = {\n      up: ['up', 'w'],\n      down: ['down', 's'],\n      left: ['left', 'a'],\n      right: ['right', 'd'],\n      control: [\n        'control',\n        'right command', 'left command',\n        'right control', 'left control',\n        'super', 'ctrl', 'alt', 'fn',\n      ],\n\n      on(which, keys) { return this[which].map((key) => keys[key] = true) },\n      off(which, keys) { return this[which].map((key) => keys[key] = false) },\n      value(which, keys) { return this[which].some((key) => Boolean(keys[key])) },\n    }\n\n    /**\n     * State alias key mappings.\n     *\n     * @public\n     * @getter\n     * @type {Object}\n     */\n\n    define(this, 'aliasMappings', { get: () => mappings })\n\n    /**\n     * Key codes map getter.\n     *\n     * @getter\n     * @type {Object}\n     */\n\n    define(this, 'keycodes', { get: () => state.keycodes })\n\n    /**\n     * Key names map getter.\n     *\n     * @getter\n     * @type {Object}\n     */\n\n    define(this, 'keys', { get: () => state.keys })\n\n    /**\n     * Predicate to determine if\n     * any key is pressed.\n     *\n     * @getter\n     * @type {Boolean}\n     */\n\n    define(this, 'isKeydown', {\n      get: () => Object.keys(state.keys).some((key) => state.keys[key])\n    })\n\n    /**\n     * Resets keyboard state by setting all keycodes\n     * and keys to `false'.\n     *\n     * @public\n     * @return {KeyboardCommand}\n     */\n\n    this.reset = () => {\n      for (let code in state.keycodes) {\n        state.keycodes[code] = false\n      }\n\n      for (let key in state.keys) {\n        state.keys[key] = false\n      }\n      return this\n    }\n\n    // update keydown states\n    events.on(document, 'keydown', (e) => {\n      if (false == ctx.hasFocus) return\n      const code = e.which || e.keyCode || e.charCode\n      if (null != code) {\n        // set key code\n        state.keycodes[code] = true\n        // set key name\n        state.keys[keycode(code)] = true\n      }\n    }, false)\n\n    // update keyup states\n    events.on(document, 'keyup', (e) => {\n      if (false == ctx.hasFocus) return\n      const code = e.which || e.keyCode || e.charCode\n      if (null != code) {\n        // set key code\n        state.keycodes[code] = false\n        // set key name\n        state.keys[keycode(code)] = false\n      }\n    })\n  }\n}\n"
  },
  {
    "__docId__": 115,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "KeyboardCommand",
    "memberof": "src/input/keyboard.js",
    "longname": "src/input/keyboard.js~KeyboardCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/input/keyboard.js",
    "importStyle": "{KeyboardCommand}",
    "description": "KeyboardCommand class",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "KeyboardCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 116,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/input/keyboard.js~KeyboardCommand",
    "longname": "src/input/keyboard.js~KeyboardCommand#constructor",
    "access": null,
    "description": "KeyboardCommand class constructor.",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 117,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/input/keyboard.js~KeyboardCommand",
    "longname": "src/input/keyboard.js~KeyboardCommand#reset",
    "access": "public",
    "description": "Resets keyboard state by setting all keycodes\nand keys to `false'.",
    "lineNumber": 133,
    "return": {
      "nullable": null,
      "types": [
        "KeyboardCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/input/mouse.js",
    "memberof": null,
    "longname": "src/input/mouse.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport onMouseChange from 'mouse-change'\nimport onMouseWheel from 'mouse-wheel'\nimport { Command } from '../command'\nimport events from 'dom-events'\nimport raf from 'raf'\n\n/**\n * Mouse function.\n *\n * @see MouseCommand\n */\n\nexport default (...args) => new MouseCommand(...args)\n\n/**\n * MouseCommand class.\n *\n * @public\n * @class MouseCommand\n * @extends Command\n */\n\nexport class MouseCommand extends Command {\n\n  /**\n   * MouseCommand class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} [opts]\n   */\n\n  constructor(ctx, opts = {}) {\n    super((_, block) => {\n      if ('function' == typeof block) {\n        block(this)\n      }\n    })\n\n    ctx.on('blur', () => {\n      this.buttons = 0\n    })\n\n    // focus/blur context on mouse down\n    events.on(document, 'mousedown', (e) => {\n      if (e.target == ctx.domElement) {\n        ctx.focus()\n      } else {\n        ctx.blur()\n      }\n    })\n\n    /**\n     * Count of buttons currently pressed.\n     *\n     * @type {Number}\n     */\n\n    this.buttons = 0\n\n    /**\n     * Previous X coordinate.\n     *\n     * @type {Number}\n     */\n\n    this.prevX = 0\n\n    /**\n     * Previous Y coordinate.\n     *\n     * @type {Number}\n     */\n\n    this.prevY = 0\n\n    /**\n     * Current X coordinate.\n     *\n     * @type {Number}\n     */\n\n    this.currentX = 0\n\n    /**\n     * Current Y coordinate.\n     *\n     * @type {Number}\n     */\n\n    this.currentY = 0\n\n    /**\n     * Delta between previous and.\n     * current X coordinates.\n     *\n     * @type {Number}\n     */\n\n    this.deltaX = 0\n\n    /**\n     * Delta between previous and.\n     * current Y coordinates.\n     *\n     * @type {Number}\n     */\n\n    this.deltaY = 0\n\n    /**\n     * The amount of scrolling vertically,\n     * horizontally and depth-wise in pixels.\n     *\n     * @see https://www.npmjs.com/package/mouse-wheel\n     */\n\n    this.wheel = {\n      currentX: 0, currentY: 0,\n      deltaX: 0, deltaY: 0,\n      prevX: 0, prevY: 0,\n    }\n\n    // update state on mouse change and reset\n    // delta values on next animation frame\n    onMouseChange(ctx.domElement, (buttons, x, y) => {\n      Object.assign(this, {\n        buttons,\n        currentX: x,\n        currentY: y,\n        deltaX: x - this.currentX,\n        deltaY: y - this.currentY,\n        prevX: this.currentX,\n        prevY: this.currentY,\n      })\n\n      raf(() => Object.assign(this, {\n        deltaX: 0,\n        deltaY: 0,\n      }))\n    })\n\n    // update mouse wheel deltas and then\n    // reset them on the next animation frame\n    onMouseWheel(ctx.domElement, (dx, dy, dz) => {\n      if (false === opts.allowWheel) { return }\n      Object.assign(this.wheel, {\n        currentX: this.wheel.currentX + dx,\n        currentY: this.wheel.currentY + dy,\n        currentZ: this.wheel.currentZ + dz,\n        deltaX: dx,\n        deltaY: dy,\n        deltaZ: dz,\n        prevX: this.wheel.currentX,\n        prevY: this.wheel.currentY,\n        prevZ: this.wheel.currentZ,\n      })\n\n      raf(() => Object.assign(this.wheel, {\n        deltaX: 0,\n        deltaY: 0,\n        deltaZ: 0,\n      }))\n    })\n  }\n}\n"
  },
  {
    "__docId__": 119,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MouseCommand",
    "memberof": "src/input/mouse.js",
    "longname": "src/input/mouse.js~MouseCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/input/mouse.js",
    "importStyle": "{MouseCommand}",
    "description": "MouseCommand class.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MouseCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 120,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/input/mouse.js~MouseCommand",
    "longname": "src/input/mouse.js~MouseCommand#constructor",
    "access": null,
    "description": "MouseCommand class constructor.",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 121,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "buttons",
    "memberof": "src/input/mouse.js~MouseCommand",
    "longname": "src/input/mouse.js~MouseCommand#buttons",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "buttons",
    "memberof": "src/input/mouse.js~MouseCommand",
    "longname": "src/input/mouse.js~MouseCommand#buttons",
    "access": null,
    "description": "Count of buttons currently pressed.",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 123,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "prevX",
    "memberof": "src/input/mouse.js~MouseCommand",
    "longname": "src/input/mouse.js~MouseCommand#prevX",
    "access": null,
    "description": "Previous X coordinate.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 124,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "prevY",
    "memberof": "src/input/mouse.js~MouseCommand",
    "longname": "src/input/mouse.js~MouseCommand#prevY",
    "access": null,
    "description": "Previous Y coordinate.",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 125,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentX",
    "memberof": "src/input/mouse.js~MouseCommand",
    "longname": "src/input/mouse.js~MouseCommand#currentX",
    "access": null,
    "description": "Current X coordinate.",
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentY",
    "memberof": "src/input/mouse.js~MouseCommand",
    "longname": "src/input/mouse.js~MouseCommand#currentY",
    "access": null,
    "description": "Current Y coordinate.",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 127,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "deltaX",
    "memberof": "src/input/mouse.js~MouseCommand",
    "longname": "src/input/mouse.js~MouseCommand#deltaX",
    "access": null,
    "description": "Delta between previous and.\ncurrent X coordinates.",
    "lineNumber": 105,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 128,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "deltaY",
    "memberof": "src/input/mouse.js~MouseCommand",
    "longname": "src/input/mouse.js~MouseCommand#deltaY",
    "access": null,
    "description": "Delta between previous and.\ncurrent Y coordinates.",
    "lineNumber": 114,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "wheel",
    "memberof": "src/input/mouse.js~MouseCommand",
    "longname": "src/input/mouse.js~MouseCommand#wheel",
    "access": null,
    "description": "The amount of scrolling vertically,\nhorizontally and depth-wise in pixels.",
    "see": [
      "https://www.npmjs.com/package/mouse-wheel"
    ],
    "lineNumber": 123,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/input/orientation.js",
    "memberof": null,
    "longname": "src/input/orientation.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { define, radians, getScreenOrientation } from '../utils'\nimport { Quaternion } from '../math'\nimport { Command } from '../command'\nimport events from 'dom-events'\nimport quat from 'gl-quat'\nimport raf from 'raf'\n\n/**\n * Global orientation state object.\n *\n * @private\n */\n\nconst globalState = {\n  hasDeviceOrientation: false,\n  absolute: null,\n\n  currentAlpha: 0, // z\n  currentBeta: 0, // x\n  currentGamma: 0, // y\n\n  deltaAlpha: 0,\n  deltaBeta: 0,\n  deltaGamma: 0,\n\n  prevAlpha: 0,\n  prevBeta: 0,\n  prevGamma: 0,\n}\n\n// update global device orientation state\nevents.on(window, 'deviceorientation', (e) => {\n  // ZXY\n  const { alpha, beta, gamma, absolute } = e\n\n  if (alpha && beta && gamma) {\n    global.hasDeviceOrientation = true\n  }\n\n  if (false == global.hasDeviceOrientation) {\n    return\n  }\n\n  Object.assign(globalState, {\n    absolute,\n\n    currentAlpha: alpha,\n    currentBeta: beta,\n    currentGamma: gamma,\n\n    deltaAlpha: alpha - globalState.currentAlpha,\n    deltaBeta: beta - globalState.currentBeta,\n    deltaGamma: gamma - globalState.currentGamma,\n\n    prevAlpha: globalState.currentAlpha,\n    prevBeta: globalState.currentBeta,\n    prevGamma: globalState.currentGamma,\n  })\n\n  raf(() => Object.assign(globalState, {\n    deltaAlpha: 0,\n    deltaBeta: 0,\n    deltaGamma: 0,\n  }))\n})\n\n/**\n * Orientation function.\n *\n * @see OrientationCommand\n */\n\nexport default (...args) => new OrientationCommand(...args)\n\n/**\n * OrientationCommand class\n *\n * @public\n * @class OrientationCommand\n * @extends Command\n */\n\nexport class OrientationCommand extends Command {\n\n  /**\n   * OrientationCommand class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} [opts]\n   */\n\n  constructor(ctx, opts = {}) {\n\n    /**\n     * Orientation state.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    const state = {\n      absolute: null,\n\n      currentAlpha: 0, // z\n      currentBeta: 0, // x\n      currentGamma: 0, // y\n\n      deltaAlpha: 0,\n      deltaBeta: 0,\n      deltaGamma: 0,\n\n      prevAlpha: 0,\n      prevBeta: 0,\n      prevGamma: 0,\n    }\n\n    super((_, block) => {\n      Object.assign(state, { ...globalState }, {\n        rotation: (() => {\n          // borrowed from https://github.com/hawksley/eleVR-Web-Player/blob/master/js/phonevr.js\n          const {currentAlpha, currentBeta, currentGamma} = globalState\n          const z = radians(currentAlpha)/2.0\n          const x = radians(currentBeta)/2.0\n          const y = radians(currentGamma)/2.0\n          const cX = Math.cos(x)\n          const cY = Math.cos(y)\n          const cZ = Math.cos(z)\n          const sX = Math.sin(x)\n          const sY = Math.sin(y)\n          const sZ = Math.sin(z)\n\n          const deviceOrientation = new Quaternion(\n            (cX * cY * cZ - sX * sY * sZ),\n            (sX * cY * cZ - cX * sY * sZ),\n            (cX * sY * cZ + sX * cY * sZ),\n            (cX * cY * sZ + sX * sY * cZ)\n          )\n\n          const screenOrientation = radians(getScreenOrientation())/2.0\n          const screenTransform = new Quaternion(\n            0,\n            0,\n            -Math.sin(screenTransform),\n            Math.cos(screenTransform)\n          )\n\n          const deviceRotation = new Quaternion()\n          quat.multiply(deviceRotation, deviceOrientation, screenTransform)\n\n          // @see https://github.com/hawksley/eleVR-Web-Player/blob/master/js/phonevr.js#L53\n          const r22 = Math.sqrt(0.5);\n          quat.multiply(deviceRotation, quat.fromValues(-r22, 0, 0, r22), deviceRotation);\n\n          return deviceRotation\n        })()\n      })\n\n      if ('function' == typeof block) {\n        block(this)\n      }\n    })\n\n    for (let prop in state) {\n      define(this, prop, { get: () => state[prop] })\n    }\n\n    /**\n     * Resets current state\n     *\n     * @public\n     * @return {OrientationCommand}\n     */\n\n    this.reset = () => {\n      for (let prop in state) {\n        if ('number' == typeof state[prop]) {\n          state[prop] = 0\n        } else {\n          state[prop] = null\n        }\n      }\n      return this\n    }\n  }\n}\n"
  },
  {
    "__docId__": 131,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "globalState",
    "memberof": "src/input/orientation.js",
    "longname": "src/input/orientation.js~globalState",
    "access": "private",
    "export": false,
    "importPath": "axis3d/src/input/orientation.js",
    "importStyle": null,
    "description": "Global orientation state object.",
    "lineNumber": 20,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "OrientationCommand",
    "memberof": "src/input/orientation.js",
    "longname": "src/input/orientation.js~OrientationCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/input/orientation.js",
    "importStyle": "{OrientationCommand}",
    "description": "OrientationCommand class",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "OrientationCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 133,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/input/orientation.js~OrientationCommand",
    "longname": "src/input/orientation.js~OrientationCommand#constructor",
    "access": null,
    "description": "OrientationCommand class constructor.",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 134,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/input/orientation.js~OrientationCommand",
    "longname": "src/input/orientation.js~OrientationCommand#reset",
    "access": "public",
    "description": "Resets current state",
    "lineNumber": 180,
    "return": {
      "nullable": null,
      "types": [
        "OrientationCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/input/touch.js",
    "memberof": null,
    "longname": "src/input/touch.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { emitter as TouchPosition } from 'touch-position'\nimport { Command } from '../command'\nimport events from 'dom-events'\nimport raf from 'raf'\n\n/**\n * Touch function.\n *\n * @see TouchCommand\n */\n\nexport default (...args) => new TouchCommand(...args)\n\n/**\n * TouchCommand class.\n *\n * @public\n * @class TouchCommand\n * @extends Command\n */\n\nexport class TouchCommand extends Command {\n\n  /**\n   * TouchCommand class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} [opts]\n   */\n\n  constructor(ctx, opts = {}) {\n    super((_, block) => {\n      if ('function' == typeof block) {\n        block(this)\n      }\n    })\n\n    const touch = TouchPosition({element: ctx.domElement})\n\n    events.on(ctx.domElement, 'touchstart', (e) => {\n      const x = e.touches[0].clientX\n      const y = e.touches[0].clientY\n      e.preventDefault()\n      Object.assign(this, {\n        touches: e.targetTouches,\n\n        currentX: x,\n        currentY: y,\n\n        deltaX: 0,\n        deltaY: 0,\n\n        prevX: this.currentX,\n        prevY: this.currentY,\n      })\n\n    })\n\n    events.on(ctx.domElement, 'touchend', (e) => {\n      e.preventDefault()\n      Object.assign(this, {\n        touches: 0,\n\n        currentX: 0,\n        currentY: 0,\n\n        deltaX: 0,\n        deltaY: 0,\n\n        prevX: 0,\n        prevY: 0,\n      })\n    })\n\n    touch.on('move', (t) => {\n      const x = t.clientX\n      const y = t.clientY\n      Object.assign(this, {\n        deltaX: x - this.currentX,\n        deltaY: y - this.currentY,\n      })\n\n      raf(() => Object.assign(this, {\n        deltaX: 0,\n        deltaY: 0,\n      }))\n    })\n\n    /**\n     * Current active touches\n     *\n     * @type {Number}\n     */\n\n    this.touches = null\n\n    /**\n     * Previous X coordinate.\n     *\n     * @type {Number}\n     */\n\n    this.prevX = 0\n\n    /**\n     * Previous Y coordinate.\n     *\n     * @type {Number}\n     */\n\n    this.prevY = 0\n\n    /**\n     * Current X coordinate.\n     *\n     * @type {Number}\n     */\n\n    this.currentX = 0\n\n    /**\n     * Current Y coordinate.\n     *\n     * @type {Number}\n     */\n\n    this.currentY = 0\n\n    /**\n     * Delta between previous and.\n     * current X coordinates.\n     *\n     * @type {Number}\n     */\n\n    this.deltaX = 0\n\n    /**\n     * Delta between previous and.\n     * current Y coordinates.\n     *\n     * @type {Number}\n     */\n\n    this.deltaY = 0\n  }\n}\n"
  },
  {
    "__docId__": 136,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TouchCommand",
    "memberof": "src/input/touch.js",
    "longname": "src/input/touch.js~TouchCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/input/touch.js",
    "importStyle": "{TouchCommand}",
    "description": "TouchCommand class.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TouchCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 137,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/input/touch.js~TouchCommand",
    "longname": "src/input/touch.js~TouchCommand#constructor",
    "access": null,
    "description": "TouchCommand class constructor.",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 138,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "touches",
    "memberof": "src/input/touch.js~TouchCommand",
    "longname": "src/input/touch.js~TouchCommand#touches",
    "access": null,
    "description": "Current active touches",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 139,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "prevX",
    "memberof": "src/input/touch.js~TouchCommand",
    "longname": "src/input/touch.js~TouchCommand#prevX",
    "access": null,
    "description": "Previous X coordinate.",
    "lineNumber": 109,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 140,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "prevY",
    "memberof": "src/input/touch.js~TouchCommand",
    "longname": "src/input/touch.js~TouchCommand#prevY",
    "access": null,
    "description": "Previous Y coordinate.",
    "lineNumber": 117,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 141,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentX",
    "memberof": "src/input/touch.js~TouchCommand",
    "longname": "src/input/touch.js~TouchCommand#currentX",
    "access": null,
    "description": "Current X coordinate.",
    "lineNumber": 125,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 142,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentY",
    "memberof": "src/input/touch.js~TouchCommand",
    "longname": "src/input/touch.js~TouchCommand#currentY",
    "access": null,
    "description": "Current Y coordinate.",
    "lineNumber": 133,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 143,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "deltaX",
    "memberof": "src/input/touch.js~TouchCommand",
    "longname": "src/input/touch.js~TouchCommand#deltaX",
    "access": null,
    "description": "Delta between previous and.\ncurrent X coordinates.",
    "lineNumber": 142,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 144,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "deltaY",
    "memberof": "src/input/touch.js~TouchCommand",
    "longname": "src/input/touch.js~TouchCommand#deltaY",
    "access": null,
    "description": "Delta between previous and.\ncurrent Y coordinates.",
    "lineNumber": 151,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 145,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/math/index.js",
    "memberof": null,
    "longname": "src/math/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport { Quaternion } from './quaternion'\nexport { Vector } from './vector'\n"
  },
  {
    "__docId__": 146,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/math/quaternion.js",
    "memberof": null,
    "longname": "src/math/quaternion.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport coalesce from 'defined'\nimport quat from 'gl-quat'\n\nimport {\n  Vector,\n  XVector3,\n  YVector3,\n  ZVector3,\n} from './vector'\n\n\n/**\n * Quaternion class.\n *\n * @public\n * @class Quaternion\n * @extends Vector\n */\n\nexport class Quaternion extends Vector {\n\n  /**\n   * Quaternion class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} z\n   * @param {Number} w\n   */\n\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    super(coalesce(x, 0),\n          coalesce(y, 0),\n          coalesce(z, 0),\n          coalesce(w, 1))\n  }\n\n\n  /**\n   * Rotates target at given orientation.\n   *\n   * @public\n   * @param {Quaternion} target\n   * @param {Object} angles\n   * @param {Number} interpolationFactor\n   */\n\n  static slerpTargetFromAxisAngles(target,\n                                   angles,\n                                   interpolationFactor = 0.1) {\n    const multiply = (...args) => quat.multiply([], ...args)\n    const slerp = (t, ...args) => quat.slerp(t, t, ...args)\n    const set = (...args) => quat.setAxisAngle(...args)\n\n    const vx = XVector3, vy = YVector3, vz = ZVector3\n    const ax = angles.x, ay = angles.y, az = angles.z\n    const x = _scratchX, y = _scratchY, z = _scratchZ\n\n    const f = interpolationFactor\n    const t = target\n\n    set(x, vx, ax)\n    set(y, vy, ay)\n    set(z, vz, az)\n\n    slerp(t, multiply(multiply(x, y), z), f)\n  }\n}\n\nconst _scratchX = new Quaternion()\nconst _scratchY = new Quaternion()\nconst _scratchZ = new Quaternion()\n"
  },
  {
    "__docId__": 147,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Quaternion",
    "memberof": "src/math/quaternion.js",
    "longname": "src/math/quaternion.js~Quaternion",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/math/quaternion.js",
    "importStyle": "{Quaternion}",
    "description": "Quaternion class.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Quaternion"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 148,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/math/quaternion.js~Quaternion",
    "longname": "src/math/quaternion.js~Quaternion#constructor",
    "access": "public",
    "description": "Quaternion class constructor.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 149,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "slerpTargetFromAxisAngles",
    "memberof": "src/math/quaternion.js~Quaternion",
    "longname": "src/math/quaternion.js~Quaternion.slerpTargetFromAxisAngles",
    "access": "public",
    "description": "Rotates target at given orientation.",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "Quaternion"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "angles",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "interpolationFactor",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_scratchX",
    "memberof": "src/math/quaternion.js",
    "longname": "src/math/quaternion.js~_scratchX",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/math/quaternion.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "src/math/quaternion.js~Quaternion"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_scratchY",
    "memberof": "src/math/quaternion.js",
    "longname": "src/math/quaternion.js~_scratchY",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/math/quaternion.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "src/math/quaternion.js~Quaternion"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_scratchZ",
    "memberof": "src/math/quaternion.js",
    "longname": "src/math/quaternion.js~_scratchZ",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/math/quaternion.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "src/math/quaternion.js~Quaternion"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/math/vector.js",
    "memberof": null,
    "longname": "src/math/vector.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { define } from '../utils'\nimport coalesce from 'defined'\nimport vec4 from 'gl-vec4'\nimport vec3 from 'gl-vec3'\nimport vec2 from 'gl-vec2'\n\n/**\n * Vector class.\n *\n * @public\n * @class Vector\n */\n\nexport class Vector {\n\n  /**\n   * Vector class contructor.\n   *\n   * @param {...Mixed} input\n   */\n\n  constructor(...input) {\n    if (1 == input.length && 'object' == typeof input[0]) {\n      const tmp = input[0]\n      input[0] = tmp.x || tmp[0] || undefined\n      input[1] = tmp.y || tmp[1] || undefined\n      input[2] = tmp.z || tmp[2] || undefined\n      input[3] = tmp.w || tmp[3] || undefined\n      input = input.filter((x) => undefined !== x)\n    }\n\n    this.elements = new Float64Array([...input])\n\n    define(this, '0', {\n      get: () => this.elements[0],\n      set: (v) => this.elements[0] = v,\n    })\n\n    define(this, '1', {\n      get: () => this.elements[1],\n      set: (v) => this.elements[1] = v,\n    })\n\n    define(this, '2', {\n      get: () => this.elements[2],\n      set: (v) => this.elements[2] = v,\n    })\n\n    define(this, '3', {\n      get: () => this.elements[3],\n      set: (v) => this.elements[3] = v,\n    })\n\n    define(this, 'r', {\n      get: () => this.elements[0],\n      set: (v) => this.elements[0] = v,\n    })\n\n    define(this, 'g', {\n      get: () => this.elements[1],\n      set: (v) => this.elements[1] = v,\n    })\n\n    define(this, 'b', {\n      get: () => this.elements[2],\n      set: (v) => this.elements[2] = v,\n    })\n\n    define(this, 'a', {\n      get: () => this.elements[3],\n      set: (v) => this.elements[3] = v,\n    })\n  }\n\n  get length() {\n    return this.elements.length\n  }\n\n  set length(value) {\n    void value\n  }\n\n  /**\n   * Returns a reference to the underlying\n   * vector elements.\n   *\n   * @getter\n   * @type {Float64Array}\n   */\n\n  get ref() {\n    return this.elements\n  }\n\n  /**\n   * Returns the component count of the vector\n   *\n   * @getter\n   * @type {Number}\n   */\n\n  get componentLength() {\n    return this.elements.length\n  }\n\n  /**\n   * x component-wise getter.\n   *\n   * @getter\n   * @type {Number}\n   */\n\n  get x() { return this.elements[0] }\n\n  /**\n   * x component-wise setter.\n   *\n   * @setter\n   * @type {Number}\n   */\n\n  set x(x) { this.elements[0] = x }\n\n  /**\n   * y component-wise getter.\n   *\n   * @getter\n   * @type {Number}\n   */\n\n  get y() { return this.elements[1] }\n\n  /**\n   * y component-wise setter.\n   *\n   * @setter\n   * @type {Number}\n   */\n\n  set y(y) { this.elements[1] = y }\n\n  /**\n   * z component-wise getter.\n   *\n   * @getter\n   * @type {Number}\n   */\n\n  get z() { return this.elements[2] }\n\n  /**\n   * z component-wise setter.\n   *\n   * @setter\n   * @type {Number}\n   */\n\n  set z(z) { this.elements[2] = z }\n\n  /**\n   * w component-wise getter.\n   *\n   * @getter\n   * @type {Number}\n   */\n\n  get w() { return this[3] }\n\n  /**\n   * w component-wise setter.\n   *\n   * @setter\n   * @type {Number}\n   */\n\n  set w(w) { this.elements[3] = w }\n\n  /**\n   * Set components-wise values\n   *\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} z\n   * @param {Number} w\n   * @return {Vector}\n   */\n\n  set(x, y, z, w) {\n    if (x instanceof Vector) {\n      return this.set(x.x, x.y, x.z, x.w)\n    }\n\n    switch (arguments.length) {\n      case 4: this.elements[3] = coalesce(w, this.elements[3]);\n      case 3: this.elements[2] = coalesce(z, this.elements[2]);\n      case 2: this.elements[1] = coalesce(y, this.elements[1]);\n      case 1: this.elements[0] = coalesce(x, this.elements[0]);\n    }\n    return this\n  }\n\n  /**\n   * Converts the vector into\n   * a normal Array.\n   *\n   * @return {Array}\n   */\n\n  toArray() {\n    return [...this.elements]\n  }\n\n  /**\n   * Returns a JSON serializable value.\n   *\n   * @return {Array}\n   */\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  /**\n   * Returns the underlying vector\n   * array value.\n   *\n   * @return {Float64Array}\n   */\n\n  valueOf() {\n    return this.elements\n  }\n\n  /**\n   * Iterator protocol implementation.\n   */\n\n  [Symbol.iterator]() {\n    return this.toArray()[Symbol.iterator]()\n  }\n}\n\n/**\n * Instanced x, y, z vectors\n */\n\nexport const XVector3 = new Vector(1, 0, 0)\nexport const YVector3 = new Vector(0, 1, 0)\nexport const ZVector3 = new Vector(0, 0, 1)\n"
  },
  {
    "__docId__": 154,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Vector",
    "memberof": "src/math/vector.js",
    "longname": "src/math/vector.js~Vector",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/math/vector.js",
    "importStyle": "{Vector}",
    "description": "Vector class.",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Vector"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 155,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#constructor",
    "access": null,
    "description": "Vector class contructor.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Mixed"
        ],
        "spread": true,
        "optional": false,
        "name": "input",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 156,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "elements",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#elements",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "length",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#length",
    "access": null,
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 158,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "length",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#length",
    "access": null,
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 159,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "ref",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#ref",
    "access": null,
    "description": "Returns a reference to the underlying\nvector elements.",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Float64Array"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 160,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "componentLength",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#componentLength",
    "access": null,
    "description": "Returns the component count of the vector",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 161,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "x",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#x",
    "access": null,
    "description": "x component-wise getter.",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 162,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "x",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#x",
    "access": null,
    "description": "x component-wise setter.",
    "lineNumber": 128,
    "unknown": [
      {
        "tagName": "@setter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 163,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "y",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#y",
    "access": null,
    "description": "y component-wise getter.",
    "lineNumber": 137,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 164,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "y",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#y",
    "access": null,
    "description": "y component-wise setter.",
    "lineNumber": 146,
    "unknown": [
      {
        "tagName": "@setter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 165,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "z",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#z",
    "access": null,
    "description": "z component-wise getter.",
    "lineNumber": 155,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 166,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "z",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#z",
    "access": null,
    "description": "z component-wise setter.",
    "lineNumber": 164,
    "unknown": [
      {
        "tagName": "@setter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 167,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "w",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#w",
    "access": null,
    "description": "w component-wise getter.",
    "lineNumber": 173,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 168,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "w",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#w",
    "access": null,
    "description": "w component-wise setter.",
    "lineNumber": 182,
    "unknown": [
      {
        "tagName": "@setter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 169,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "set",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#set",
    "access": null,
    "description": "Set components-wise values",
    "lineNumber": 194,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 170,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toArray",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#toArray",
    "access": null,
    "description": "Converts the vector into\na normal Array.",
    "lineNumber": 215,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 171,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toJSON",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#toJSON",
    "access": null,
    "description": "Returns a JSON serializable value.",
    "lineNumber": 225,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 172,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "valueOf",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#valueOf",
    "access": null,
    "description": "Returns the underlying vector\narray value.",
    "lineNumber": 236,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Float64Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 173,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "[Symbol.iterator]",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#[Symbol.iterator]",
    "access": null,
    "description": "Iterator protocol implementation.",
    "lineNumber": 244,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 174,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "XVector3",
    "memberof": "src/math/vector.js",
    "longname": "src/math/vector.js~XVector3",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/math/vector.js",
    "importStyle": "{XVector3}",
    "description": "Instanced x, y, z vectors",
    "lineNumber": 253,
    "type": {
      "types": [
        "src/math/vector.js~Vector"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "YVector3",
    "memberof": "src/math/vector.js",
    "longname": "src/math/vector.js~YVector3",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/math/vector.js",
    "importStyle": "{YVector3}",
    "description": null,
    "lineNumber": 254,
    "undocument": true,
    "type": {
      "types": [
        "src/math/vector.js~Vector"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ZVector3",
    "memberof": "src/math/vector.js",
    "longname": "src/math/vector.js~ZVector3",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/math/vector.js",
    "importStyle": "{ZVector3}",
    "description": null,
    "lineNumber": 255,
    "undocument": true,
    "type": {
      "types": [
        "src/math/vector.js~Vector"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/media/audio.js",
    "memberof": null,
    "longname": "src/media/audio.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { debug, define } from '../utils'\nimport { MediaCommand } from '../media'\nimport events from 'dom-events'\n\n/**\n * AudioCommand constructor.\n * @see AudioCommand\n */\n\nexport default (...args) => new AudioCommand(...args)\n\n/**\n * AudioCommand class.\n *\n * @public\n * @extends MediaCommand\n */\n\nexport class AudioCommand extends MediaCommand {\n\n  /**\n   * AudioCommand class constructor.\n   *\n   * @constructor\n   * @param {Context} ctx\n   * @param {String} src\n   * @param {Object} [initialState]\n   */\n\n  constructor(ctx, src, initialState = {}) {\n    let source = null\n    let volume = 0\n    let isMuted = false\n    let isPaused = true\n    let isPlaying = false\n\n    const manifest = {\n      audio: {\n        stream: true,\n        type: 'audio',\n        src: src\n      }\n    }\n\n    /**\n     * Calls internal audio source method\n     * with arguments. This function is used\n     * to proxy a class method to a audio\n     * element method.\n     *\n     * @private\n     * @param {String} method\n     * @param {...Mixed} args\n     * @return {AudioCommand}\n     */\n\n    const call = (method, ...args) => {\n      if (source) {\n        debug('AudioCommand: call %s(%j)', method, args)\n        source[method](...args)\n      } else {\n        this.once('load', () => this[method](...args))\n      }\n      return this\n    }\n\n    /**\n     * Sets an internal audio source property\n     * value. This function is used\n     * to proxy a class method to a audio\n     * element property\n     *\n     * @private\n     * @param {String} method\n     * @param {...Mixed} args\n     * @return {AudioCommand|Mixed}\n     */\n\n    const set = (property, value) => {\n      if (source) {\n        if (undefined === value) {\n          return source[property]\n        } else {\n          debug('AudioCommand: set %s=%s', property, value)\n          source[property] = value\n        }\n      } else {\n        this.once('load', () => { this[property] = value })\n      }\n      return this\n    }\n\n    /**\n     * Emits an event on the instance.\n     *\n     * @private\n     * @param {String} event\n     * @param {...Mixed} args\n     * @return {AudioCommand}\n     */\n\n    const emit = (event, ...args) => {\n      this.emit(event, ...args)\n      return this\n    }\n\n    // sanitize initialState object\n    for (let key in initialState) {\n      if (undefined === initialState[key]) {\n        delete initialState[key]\n      }\n    }\n\n    super(ctx, manifest, initialState)\n\n    // set initial audio state\n    this.once('load', () => {\n      // set initial set on source\n      Object.assign(source, initialState)\n\n      const proxy = (event, override) => {\n        events.on(source, event, (...args) => {\n          emit(override || event, ...args)\n        })\n      }\n\n      // proxy source events\n      for (let key in HTMLAudioElement.prototype) {\n        if (key.match(/^on[a-z]/)) {\n          proxy(key.replace(/^on/, ''))\n          define(this, key, {\n            get: () => source[key],\n            set: (value) => source[key] = value\n          })\n        }\n      }\n\n      volume = source.volume\n      isMuted = source.muted\n      isPlaying = source.paused\n    })\n\n    // set to playing state\n    this.on('playing', () => {\n      isPlaying = true\n      isPaused = false\n    })\n\n    // set to paused state\n    this.on('pause', () => {\n      isPlaying = false\n      isPaused = true\n    })\n\n    // set volume mute state\n    this.on('mute', () => {\n      isMuted = true\n    })\n\n    this.on('unmute', () => {\n      isMuted = false\n    })\n\n    /**\n     * Source attribute accessor.\n     *\n     * @type {String}\n     */\n\n    define(this, 'src', {\n      get: () => {\n        return (source && source.src) ?\n          source.src :\n          (this.manifest && this.manifest.audio) ?\n            this.manifest.audio.src :\n            null\n      },\n\n      set: (value) => {\n        if (source && 'string' == typeof value) {\n          source.src = value\n          if (this.manifest && this.manifest.audio) {\n            this.manifest.audio.src = value\n            this.reset()\n            this.load()\n          }\n        }\n      }\n    })\n\n    // proxy all configurable audio properties that serve\n    // some kind of real purpose\n    // @TODO(werle) - support text tracks\n    ;[\n      'currentTime',\n      'crossOrigin',\n      'currentSrc',\n      'duration',\n      'seekable',\n      'volume',\n      'paused',\n      'played',\n      'prefix',\n      'muted',\n      'loop',\n    ].map((property) => define(this, property, {\n      get: () => source[property],\n      set: (value) => { source[property] = value }\n    }))\n\n    // expose DOM element\n    define(this, 'domElement', { get: () => source })\n\n    /**\n     * Plays the audio.\n     *\n     * @return {AudioCommand}\n     */\n\n    this.play = () => call('play')\n\n    /**\n     * Pauses the audio.\n     *\n     * @return {AudioCommand}\n     */\n\n    this.pause = () => call('pause')\n\n    /**\n     * Mutes the audio\n     *\n     * @return {AudioCommand}\n     */\n\n    this.mute = () => set('muted', true) && emit('mute')\n\n    /**\n     * Unutes the audio\n     *\n     * @return {AudioCommand}\n     */\n\n    this.unmute = () => set('muted', false) && emit('unmute')\n\n    /**\n     * Callback when audio has loaded.\n     *\n     * @type {Function}\n     */\n\n    this.onloaded = ({audio}) => {\n      source = audio\n    }\n  }\n}\n"
  },
  {
    "__docId__": 178,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AudioCommand",
    "memberof": "src/media/audio.js",
    "longname": "src/media/audio.js~AudioCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/media/audio.js",
    "importStyle": "{AudioCommand}",
    "description": "AudioCommand class.",
    "lineNumber": 25,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 179,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/media/audio.js~AudioCommand",
    "longname": "src/media/audio.js~AudioCommand#constructor",
    "access": null,
    "description": "AudioCommand class constructor.",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "initialState",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 180,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "play",
    "memberof": "src/media/audio.js~AudioCommand",
    "longname": "src/media/audio.js~AudioCommand#play",
    "access": null,
    "description": "Plays the audio.",
    "lineNumber": 226,
    "return": {
      "nullable": null,
      "types": [
        "AudioCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "pause",
    "memberof": "src/media/audio.js~AudioCommand",
    "longname": "src/media/audio.js~AudioCommand#pause",
    "access": null,
    "description": "Pauses the audio.",
    "lineNumber": 234,
    "return": {
      "nullable": null,
      "types": [
        "AudioCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mute",
    "memberof": "src/media/audio.js~AudioCommand",
    "longname": "src/media/audio.js~AudioCommand#mute",
    "access": null,
    "description": "Mutes the audio",
    "lineNumber": 242,
    "return": {
      "nullable": null,
      "types": [
        "AudioCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "unmute",
    "memberof": "src/media/audio.js~AudioCommand",
    "longname": "src/media/audio.js~AudioCommand#unmute",
    "access": null,
    "description": "Unutes the audio",
    "lineNumber": 250,
    "return": {
      "nullable": null,
      "types": [
        "AudioCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "onloaded",
    "memberof": "src/media/audio.js~AudioCommand",
    "longname": "src/media/audio.js~AudioCommand#onloaded",
    "access": null,
    "description": "Callback when audio has loaded.",
    "lineNumber": 258,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 185,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/media/image.js",
    "memberof": null,
    "longname": "src/media/image.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { debug, define } from '../utils'\nimport { MediaCommand } from '../media'\nimport isPowerOfTwo from 'is-power-of-two'\nimport raf from 'raf'\n\n/**\n * ImageCommand constructor.\n * @see ImageCommand\n */\n\nexport default (...args) => new ImageCommand(...args)\n\n/**\n * ImageCommand class.\n *\n * @public\n * @class ImageCommand\n * @extends MediaCommand\n */\n\nexport class ImageCommand extends MediaCommand {\n\n  /**\n   * ImageCommand class constructor.\n   *\n   * @constructor\n   * @param {Context} ctx\n   * @param {String} src\n   * @param {Object} [initialState]\n   */\n\n  constructor(ctx, src, initialState = {}) {\n    let source = null\n    let texture = null\n\n    const manifest = {\n      image: {\n        stream: true,\n        type: 'image',\n        src: 'string' == typeof src ? src : undefined\n      },\n\n      regl: {\n        blend: {\n          enable: true,\n          func: {src: 'src alpha', dst: 'one minus src alpha'},\n        },\n      }\n    }\n\n    const textureState = Object.assign({\n      wrap: ['clamp', 'clamp'],\n      mag: 'linear',\n      min: 'linear',\n    }, initialState.texture)\n\n    // sanitize initialState object\n    for (let key in initialState) {\n      if (undefined === initialState[key]) {\n        delete initialState[key]\n      }\n    }\n\n    super(ctx, manifest, initialState)\n\n    this.on('load', () => {\n      const needsMipmaps = (\n        isPowerOfTwo(source.height) &&\n        isPowerOfTwo(source.width)\n      )\n\n      if (needsMipmaps) {\n        textureState.mipmap = needsMipmaps\n        textureState.min = 'linear mipmap nearest'\n      }\n    })\n\n    this.once('load', () => {\n      if (source instanceof Image) {\n        // set initial set on source\n        Object.assign(source, initialState)\n      }\n    })\n\n    // dimensions\n    define(this, 'width', { get: () => source ? source.width || source.shape[0] || 0 : 0})\n    define(this, 'height', { get: () => source ? source.height || source.shape[1] || 0 : 0})\n    define(this, 'aspectRatio', { get: () => this.width/this.height || 1 })\n\n    // expose DOM element when available\n    define(this, 'domElement', {\n      get: () => source instanceof Node ? source : null\n    })\n\n    this.type = 'image'\n\n    /**\n     * Sets an internal image source property\n     * value. This function is used\n     * to proxy a class method to a image\n     * element property\n     *\n     * @private\n     * @param {String} method\n     * @param {...Mixed} args\n     * @return {ImageCommand|Mixed}\n     */\n\n    const set = (property, value) => {\n      if (source) {\n        if (undefined === value) {\n          return source[property]\n        } else {\n          debug('ImageCommand: set %s=%s', property, value)\n          source[property] = value\n        }\n      } else {\n        this.once('load', () => { this[property] = value })\n      }\n      return this\n    }\n\n    /**\n     * Source attribute accessor.\n     *\n     * @type {String}\n     */\n\n    define(this, 'src', {\n      get: () => {\n        return (source && source.src) ?\n          source.src :\n          (this.manifest && this.manifest.image) ?\n            this.manifest.image.src :\n            null\n      },\n\n      set: (value) => {\n        if (source && 'string' == typeof value) {\n          source.src = value\n          if (this.manifest && this.manifest.image) {\n            this.manifest.image.src = value\n            this.reset()\n            this.load()\n          }\n        }\n      }\n    })\n\n    /**\n     * Image texture target.\n     *\n     * @type {REGLTexture}\n     */\n\n    define(this, 'texture', {\n      get: () => texture,\n      set: (value) => {\n        if (texture && null === value) {\n          texture.destroy()\n          texture = ctx.regl.texture({ ...textureState })\n        } else {\n          texture = ctx.regl.texture({ ...textureState })\n        }\n\n        if (value && texture) {\n          texture.destroy()\n          texture = value\n        }\n      }\n    })\n\n    this.texture = initialState && initialState.texture ?\n      initialState.texture :\n        ctx.regl.texture({ ...textureState })\n\n    if ('object' == typeof src) {\n      source = src\n      Object.assign(textureState, src)\n      texture({ ...textureState, src})\n      raf(() => this.emit('load'))\n    }\n\n    /**\n     * Callback when image has loaded.\n     *\n     * @type {Function}\n     */\n\n    this.onloaded = ({image}) => {\n      source = image\n      textureState.data = source\n      texture({ ...textureState })\n      this.emit('load')\n    }\n\n    this.refresh = () => {\n      texture({ ...textureState })\n    }\n  }\n}\n"
  },
  {
    "__docId__": 186,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ImageCommand",
    "memberof": "src/media/image.js",
    "longname": "src/media/image.js~ImageCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/media/image.js",
    "importStyle": "{ImageCommand}",
    "description": "ImageCommand class.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ImageCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 187,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/media/image.js~ImageCommand",
    "longname": "src/media/image.js~ImageCommand#constructor",
    "access": null,
    "description": "ImageCommand class constructor.",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "initialState",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 188,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/media/image.js~ImageCommand",
    "longname": "src/media/image.js~ImageCommand#type",
    "access": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "texture",
    "memberof": "src/media/image.js~ImageCommand",
    "longname": "src/media/image.js~ImageCommand#texture",
    "access": null,
    "description": null,
    "lineNumber": 179,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "onloaded",
    "memberof": "src/media/image.js~ImageCommand",
    "longname": "src/media/image.js~ImageCommand#onloaded",
    "access": null,
    "description": "Callback when image has loaded.",
    "lineNumber": 196,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 191,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "refresh",
    "memberof": "src/media/image.js~ImageCommand",
    "longname": "src/media/image.js~ImageCommand#refresh",
    "access": null,
    "description": null,
    "lineNumber": 203,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/media/video.js",
    "memberof": null,
    "longname": "src/media/video.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\nimport { debug, define } from '../utils'\nimport { MediaCommand } from '../media'\nimport { ImageCommand } from './image'\nimport isPowerOfTwo from 'is-power-of-two'\nimport events from 'dom-events'\nimport clamp from 'clamp'\nimport raf from 'raf'\n\n/**\n * VideoCommand constructor.\n * @see Video\n */\n\nexport default (...args) => new VideoCommand(...args)\n\n/**\n * VideoCommand class.\n *\n * @public\n * @class VideoCommand\n * @extends MediaCommand\n */\n\nexport class VideoCommand extends MediaCommand {\n\n  /**\n   * VideoCommand class constructor.\n   *\n   * @constructor\n   * @param {Context} ctx\n   * @param {String} src\n   * @param {Object} [initialState]\n   */\n\n  constructor(ctx, src, initialState = {}) {\n    let source = null\n    let poster = null\n    let volume = 0\n    let texture = null\n    let isMuted = false\n    let isPaused = true\n    let isPlaying = false\n\n    /**\n     * Texture state used for regl texture updates.\n     *\n     * @private\n     */\n\n    const textureState = Object.assign({\n      format: 'rgba',\n      wrap: ['clamp', 'clamp'],\n      mag: 'linear',\n      min: 'linear',\n    }, initialState.texture)\n\n    delete initialState.texture\n\n    /**\n     * Video manifest for resl.\n     *\n     * @private\n     */\n\n    const manifest = {\n      video: Object.assign({\n        stream: true,\n        type: 'video',\n        src: src\n      }, initialState.manifest)\n    }\n\n    delete initialState.manifest\n\n    /**\n     * Calls internal video source method\n     * with arguments. This function is used\n     * to proxy a class method to a video\n     * element method.\n     *\n     * @private\n     * @param {String} method\n     * @param {...Mixed} args\n     * @return {VideoCommand}\n     */\n\n    const call = (method, ...args) => {\n      if (source) {\n        debug('Video: call %s(%j)', method, args)\n        source[method](...args)\n      } else {\n        this.once('load', () => this[method](...args))\n      }\n      return this\n    }\n\n    /**\n     * Sets an internal video source property\n     * value. This function is used\n     * to proxy a class method to a video\n     * element property\n     *\n     * @private\n     * @param {String} method\n     * @param {...Mixed} args\n     * @return {VideoCommand|Mixed}\n     */\n\n    const set = (property, value) => {\n      if (source) {\n        if (undefined === value) {\n          return source[property]\n        } else {\n          debug('VideoCommand: set %s=%s', property, value)\n          source[property] = value\n        }\n      } else {\n        this.once('load', () => { this[property] = value })\n      }\n      return this\n    }\n\n    /**\n     * Emits an event on the instance.\n     *\n     * @private\n     * @param {String} event\n     * @param {...Mixed} args\n     * @return {VideoCommand}\n     */\n\n    const emit = (event, ...args) => {\n      this.emit(event, ...args)\n      return this\n    }\n\n    // sanitize initialState object\n    for (let key in initialState) {\n      if (undefined === initialState[key]) {\n        delete initialState[key]\n      }\n    }\n\n    super(ctx, manifest, initialState)\n\n    // set mesh type\n    this.type = 'video'\n\n    this.on('load', () => {\n      const needsMipmaps = (\n        isPowerOfTwo(source.videoHeight) &&\n        isPowerOfTwo(source.videoWidth)\n      )\n\n      if (needsMipmaps) {\n        textureState.mipmap = needsMipmaps\n        textureState.min = 'linear mipmap nearest'\n      }\n    })\n\n    this.once('load', () => {\n      // set initial set on source\n      Object.assign(source, initialState)\n\n      const proxy = (event, override) => {\n        events.on(source, event, (...args) => {\n          emit(override || event, ...args)\n        })\n      }\n\n      // proxy source events\n      for (let key in HTMLVideoElement.prototype) {\n        if (key.match(/^on[a-z]/)) {\n          proxy(key.replace(/^on/, ''))\n          define(this, key, {\n            get: () => source[key],\n            set: (value) => source[key] = value\n          })\n        }\n      }\n\n      volume = source.volume\n      isMuted = source.muted\n      isPaused = source.paused\n      isPlaying = !isPaused\n    })\n\n    // set to playing state\n    this.on('playing', () => {\n      isPlaying = true\n      isPaused = false\n    })\n\n    // set to paused state\n    this.on('pause', () => {\n      isPlaying = false\n      isPaused = true\n    })\n\n    // set volume mute state\n    this.on('mute', () => { isMuted = true })\n    this.on('unmute', () => { isMuted = false })\n\n    /**\n     * Source attribute accessor.\n     *\n     * @type {String}\n     */\n\n    define(this, 'src', {\n      get: () => {\n        return (source && source.src) ?\n          source.src :\n          (this.manifest && this.manifest.video) ?\n            this.manifest.video.src :\n            null\n      },\n\n      set: (value) => {\n        if (source && 'string' == typeof value) {\n          source.src = value\n          if (this.manifest && this.manifest.video) {\n            this.manifest.video.src = value\n            this.reset()\n            this.load()\n          }\n        }\n      }\n    })\n\n    // proxy all configurable video properties that serve\n    // some kind of real purpose\n    // @TODO(werle) - support text tracks\n    ;[\n      'playbackRate',\n      'currentTime',\n      'crossOrigin',\n      'currentSrc',\n      'duration',\n      'seekable',\n      'volume',\n      'paused',\n      'played',\n      'prefix',\n      'title',\n      'muted',\n      'loop',\n    ].map((property) => define(this, property, {\n      get: () => source ? source[property] : null,\n      set: (value) => {\n        if (source) {\n          source[property] = value\n        } else {\n          this.once('load', () => { source[property] = value })\n        }\n      }\n    }))\n\n    // proxy dimensions\n    define(this, 'width', { get: () => source ? source.videoWidth : 0})\n    define(this, 'height', { get: () => source ? source.videoHeight : 0})\n    define(this, 'aspectRatio', {\n      get: () => {\n        if (source) {\n          return source.videoWidth/source.videoHeight\n        } else if (poster) {\n          return poster.aspectRatio\n        }\n\n        return 1\n      }\n    })\n\n    // expose DOM element\n    define(this, 'domElement', { get: () => source })\n\n    /**\n     * Plays the video.\n     *\n     * @return {VideoCommand}\n     */\n\n    this.play = () => call('play')\n\n    /**\n     * Pauses the video.\n     *\n     * @return {VideoCommand}\n     */\n\n    this.pause = () => call('pause')\n\n    /**\n     * Mutes the video\n     *\n     * @return {VideoCommand}\n     */\n\n    this.mute = () => set('muted', true) && emit('mute')\n\n    /**\n     * Unutes the video\n     *\n     * @return {VideoCommand}\n     */\n\n    this.unmute = () => set('muted', false) && emit('unmute')\n\n    /**\n     * Callback when video  has loaded.\n     *\n     * @type {Function}\n     */\n\n    this.onloaded = ({video}) => {\n      source = video\n\n      this.emit('load')\n\n      if (null == poster) {\n        textureState.data = video\n        texture({ ...textureState })\n      }\n\n      let lastRead = 0\n      this._read = (done) => {\n        const now = Date.now()\n        if (isPlaying && (now - lastRead >= 64) && this.isDoneLoading && video.readyState >= video.HAVE_ENOUGH_DATA) {\n          lastRead = now\n          debug('VideoCommand: read')\n          textureState.data = source\n          texture({ ...textureState })\n          done()\n        }\n      }\n    }\n\n    /**\n     * Image texture target.\n     *\n     * @type {REGLTexture}\n     */\n\n    define(this, 'texture', {\n      get: () => texture,\n      set: (value) => {\n        if (texture && null === value) {\n          texture.destroy()\n          texture = ctx.regl.texture({ ...textureState })\n        } else {\n          texture = ctx.regl.texture({ ...textureState })\n        }\n\n        if (value && texture) {\n          texture.destroy()\n          texture = value\n        }\n      }\n    })\n\n    /**\n     * Video poster image.\n     *\n     * @type {ImageCommand|String}\n     */\n\n    define(this, 'poster', {\n      get: () => source ? source.poster : null,\n      set: (value) => {\n        if (value) {\n          if (source) {\n            source.poster = value.src || value\n          } else {\n            this.once('load', () => { source.poster = value.src || value })\n          }\n\n          if (null == poster) {\n            if (value) {\n              poster = new ImageCommand(ctx, value.src || value, {texture})\n            }\n          }\n        }\n      },\n    })\n\n    this.texture = initialState && initialState.texture ?\n      initialState.texture :\n        ctx.regl.texture({ ...textureState })\n\n    // set poster if applicable\n    if (initialState && initialState.poster) {\n      this.poster = initialState.poster\n    }\n  }\n}\n"
  },
  {
    "__docId__": 193,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "VideoCommand",
    "memberof": "src/media/video.js",
    "longname": "src/media/video.js~VideoCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/media/video.js",
    "importStyle": "{VideoCommand}",
    "description": "VideoCommand class.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "VideoCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 194,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#constructor",
    "access": null,
    "description": "VideoCommand class constructor.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "initialState",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 195,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#type",
    "access": null,
    "description": null,
    "lineNumber": 152,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "play",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#play",
    "access": null,
    "description": "Plays the video.",
    "lineNumber": 288,
    "return": {
      "nullable": null,
      "types": [
        "VideoCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "pause",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#pause",
    "access": null,
    "description": "Pauses the video.",
    "lineNumber": 296,
    "return": {
      "nullable": null,
      "types": [
        "VideoCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mute",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#mute",
    "access": null,
    "description": "Mutes the video",
    "lineNumber": 304,
    "return": {
      "nullable": null,
      "types": [
        "VideoCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "unmute",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#unmute",
    "access": null,
    "description": "Unutes the video",
    "lineNumber": 312,
    "return": {
      "nullable": null,
      "types": [
        "VideoCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "onloaded",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#onloaded",
    "access": null,
    "description": "Callback when video  has loaded.",
    "lineNumber": 320,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 201,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_read",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#_read",
    "access": null,
    "description": null,
    "lineNumber": 331,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "texture",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#texture",
    "access": null,
    "description": null,
    "lineNumber": 391,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "poster",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#poster",
    "access": null,
    "description": null,
    "lineNumber": 397,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/media.js",
    "memberof": null,
    "longname": "src/media.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { debug, define } from './utils'\nimport { EventEmitter } from 'events'\nimport { MeshCommand } from './mesh'\nimport resl from 'resl'\nimport raf from 'raf'\n\n/**\n * reload timeout in milliseconds.\n *\n * @private\n * @type {Number}\n */\n\nconst RELOAD_TIMEOUT = 1000\n\n/**\n * No-op to return undefined\n *\n * @private\n * @type {Function}\n */\n\nconst noop = () => void 0\n\n/**\n * MediaCommand constructor.\n * @see MediaCommand\n */\n\nexport default (...args) => new MediaCommand(...args)\n\n/**\n * MediaCommand class.\n *\n * @public\n * @class MediaCommand\n * @extends Command\n */\n\nexport class MediaCommand extends MeshCommand {\n\n  /**\n   * MediaCommand class constructor that loads\n   * resources from a given manifest using resl\n   *\n   * @constructor\n   * @param {Object} ctx\n   * @param {Object} manifest\n   * @param {Object} [initialState]\n   */\n\n  constructor(ctx, manifest, initialState = {}) {\n    let timeout = RELOAD_TIMEOUT\n\n    let isDoneLoading = false\n    let isCancelled = false\n    let hasProgress = false\n    let isLoading = false\n    let hasError = false\n\n    // load when called as a function\n    super(ctx, {\n      type: 'media',\n      render: (_, state, next) => this.read(next),\n      draw: () => this.read(),\n    })\n\n    // mixin and initialize EventEmitter\n    EventEmitter.call(this)\n    Object.assign(this, EventEmitter.prototype)\n    this.setMaxListeners(Infinity)\n\n    // preload unless otherwise specified\n    if (initialState && false !== initialState.preload) {\n      raf(() => this.load())\n    }\n\n    /**\n     * Manifest object getter.\n     *\n     * @type {Object}\n     */\n\n    define(this, 'manifest', { get: () => manifest })\n\n    /**\n     * Boolean predicate to indicate if media has\n     * completed loaded enough data. All data may not be\n     * loaded if media is a streaming source.\n     *\n     * @public\n     * @getter\n     * @type {Boolean}\n     */\n\n    define(this, 'isDoneLoading', { get: () => isDoneLoading })\n\n    /**\n     * Boolean predicate to indicate if media has\n     * load progress.\n     *\n     * @public\n     * @getter\n     * @type {Boolean}\n     */\n\n    define(this, 'hasProgress', { get: () => hasProgress })\n\n    /**\n     * Boolean predicate to indicate if media has\n     * begun loading.\n     *\n     * @public\n     * @getter\n     * @type {Boolean}\n     */\n\n    define(this, 'isLoading', { get: () => isLoading })\n\n    /**\n     * Boolean predicate to indicate if media loading\n     * encountered an error.\n     *\n     * @public\n     * @getter\n     * @type {Boolean}\n     */\n\n    define(this, 'hasError', { get: () => hasError })\n\n    /**\n     * Boolean predicate to indicate if media enough\n     * has data to read from.\n     *\n     * @public\n     * @getter\n     * @type {Boolean}\n     */\n\n    define(this, 'hasData', {\n      get: () => !hasError && (isDoneLoading || hasProgress)\n    })\n\n    /**\n     * Boolean predicate to indicate if media loading has\n     * been cancelled.\n     *\n     * @public\n     * @getter\n     * @type {Boolean}\n     */\n\n    define(this, 'isCancelled', { get: () => isCancelled })\n\n    /**\n     * Updates media state with\n     * new manifest object. This function\n     * merges an input manifest with the existing.\n     *\n     * @param {Object} newManifest\n     * @return {MediaCommand}\n     */\n\n    this.update = (newManifest) => {\n      Object.assign(manifest, newManifest)\n      return this\n    }\n\n    /**\n     * Calls an abstract _read() method.\n     *\n     * @return {MediaCommand}\n     */\n\n    this.read = (done = () => void 0) => {\n      this._read(done)\n      return this\n    }\n\n    /**\n     * Abstract reader method.\n     *\n     * @return {MediaCommand}\n     */\n\n    this._read = (done = () => void 0) => {\n      done()\n      return this\n    }\n\n    /**\n     * Begins loading of resources described in\n     * the manifest object.\n     *\n     * @public\n     * @return {Boolean}\n     */\n\n    this.load = () => {\n      const requested = {}\n\n      if (isCancelled || isLoading || hasProgress || hasError || isDoneLoading) {\n        return false\n      }\n\n      for (let key in manifest) {\n        if ('object' == typeof manifest[key]) {\n          if ('string' == typeof manifest[key].src) {\n            requested[key] = manifest[key]\n          }\n        }\n      }\n\n      if (0 == Object.keys(requested).length) {\n        return false\n      }\n\n      // retry timeout\n      setTimeout(() => {\n        if (hasError || ((hasProgress || isLoading) && !isDoneLoading)) {\n          debug('retrying....')\n          this.reload()\n        }\n      }, RELOAD_TIMEOUT)\n\n      isLoading = true\n      raf(() => resl({\n        manifest: requested,\n\n        onDone: (...args) => {\n          isDoneLoading = true\n          void (this.onloaded || noop)(...args)\n          this.emit('load', ...args)\n        },\n\n        onError: (...args) => {\n          hasError = true\n          isDoneLoading = true\n          void (this.onerror || noop)(...args)\n          this.emit('error', ...args)\n        },\n\n        onProgress: (...args) => {\n          hasProgress = true\n          isDoneLoading = false\n          void (this.onprogress || noop)(...args)\n          this.emit('progress', ...args)\n        },\n      }))\n\n      return true\n    }\n\n    /**\n     * Resets state and reloads resources.\n     *\n     * @public\n     * @return {MediaCommand}\n     */\n\n    this.reload = () => {\n      this.reset()\n      this.load()\n      return this\n    }\n\n    /**\n     * Resets state.\n     *\n     * @public\n     * @return {MediaCommand}\n     */\n\n    this.reset = () => {\n      isDoneLoading = false\n      isCancelled = false\n      hasProgress = false\n      isLoading = false\n      hasError = false\n      return this\n    }\n\n    /**\n     * Cancels loading.\n     *\n     * @public\n     * @return {MediaCommand}\n     */\n\n    this.cancel = () => {\n      this.reset()\n      isCancelled = true\n      return this\n    }\n\n    /**\n     * Sets the timeout for loading of the media.\n     *\n     * @public\n     * @param {Number} timeout\n     * @return {MediaCommand}\n     */\n\n    this.setTimeout = (value) => {\n      timeout = value\n      return this\n    }\n  }\n}\n"
  },
  {
    "__docId__": 205,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "RELOAD_TIMEOUT",
    "memberof": "src/media.js",
    "longname": "src/media.js~RELOAD_TIMEOUT",
    "access": "private",
    "export": false,
    "importPath": "axis3d/src/media.js",
    "importStyle": null,
    "description": "reload timeout in milliseconds.",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 206,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "noop",
    "memberof": "src/media.js",
    "longname": "src/media.js~noop",
    "access": "private",
    "export": false,
    "importPath": "axis3d/src/media.js",
    "importStyle": null,
    "description": "No-op to return undefined",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 207,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MediaCommand",
    "memberof": "src/media.js",
    "longname": "src/media.js~MediaCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/media.js",
    "importStyle": "{MediaCommand}",
    "description": "MediaCommand class.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MediaCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 208,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/media.js~MediaCommand",
    "longname": "src/media.js~MediaCommand#constructor",
    "access": null,
    "description": "MediaCommand class constructor that loads\nresources from a given manifest using resl",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "manifest",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "initialState",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 209,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/media.js~MediaCommand",
    "longname": "src/media.js~MediaCommand#update",
    "access": null,
    "description": "Updates media state with\nnew manifest object. This function\nmerges an input manifest with the existing.",
    "lineNumber": 170,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newManifest",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MediaCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "read",
    "memberof": "src/media.js~MediaCommand",
    "longname": "src/media.js~MediaCommand#read",
    "access": null,
    "description": "Calls an abstract _read() method.",
    "lineNumber": 181,
    "return": {
      "nullable": null,
      "types": [
        "MediaCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_read",
    "memberof": "src/media.js~MediaCommand",
    "longname": "src/media.js~MediaCommand#_read",
    "access": null,
    "description": "Abstract reader method.",
    "lineNumber": 192,
    "return": {
      "nullable": null,
      "types": [
        "MediaCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "load",
    "memberof": "src/media.js~MediaCommand",
    "longname": "src/media.js~MediaCommand#load",
    "access": "public",
    "description": "Begins loading of resources described in\nthe manifest object.",
    "lineNumber": 205,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "reload",
    "memberof": "src/media.js~MediaCommand",
    "longname": "src/media.js~MediaCommand#reload",
    "access": "public",
    "description": "Resets state and reloads resources.",
    "lineNumber": 267,
    "return": {
      "nullable": null,
      "types": [
        "MediaCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/media.js~MediaCommand",
    "longname": "src/media.js~MediaCommand#reset",
    "access": "public",
    "description": "Resets state.",
    "lineNumber": 280,
    "return": {
      "nullable": null,
      "types": [
        "MediaCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "cancel",
    "memberof": "src/media.js~MediaCommand",
    "longname": "src/media.js~MediaCommand#cancel",
    "access": "public",
    "description": "Cancels loading.",
    "lineNumber": 296,
    "return": {
      "nullable": null,
      "types": [
        "MediaCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "setTimeout",
    "memberof": "src/media.js~MediaCommand",
    "longname": "src/media.js~MediaCommand#setTimeout",
    "access": "public",
    "description": "Sets the timeout for loading of the media.",
    "lineNumber": 310,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeout",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MediaCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mesh/box.js",
    "memberof": null,
    "longname": "src/mesh/box.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { BoxGeometry } from '../geometry/box'\nimport { MeshCommand } from '../mesh'\nimport mat4 from 'gl-mat4'\nimport glsl from 'glslify'\n\n/**\n * Box function.\n *\n * @see BoxCommand\n */\n\nexport default (...args) => new BoxCommand(...args)\n\n/**\n * BoxCommand class.\n *\n * @public\n * @class BoxCommand\n * @extends MeshCommand\n */\n\nexport class BoxCommand extends MeshCommand {\n  constructor(ctx, opts = {}) {\n    const geometry = new BoxGeometry(opts.geometry)\n    super(ctx, { ...opts, type: 'box', geometry })\n  }\n}\n"
  },
  {
    "__docId__": 218,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BoxCommand",
    "memberof": "src/mesh/box.js",
    "longname": "src/mesh/box.js~BoxCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/mesh/box.js",
    "importStyle": "{BoxCommand}",
    "description": "BoxCommand class.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "BoxCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 219,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/mesh/box.js~BoxCommand",
    "longname": "src/mesh/box.js~BoxCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "opts",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 220,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mesh/plane.js",
    "memberof": null,
    "longname": "src/mesh/plane.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { PlaneGeometry } from '../geometry/plane'\nimport { MeshCommand } from '../mesh'\nimport mat4 from 'gl-mat4'\nimport glsl from 'glslify'\n\n/**\n * Plane function.\n *\n * @see PlaneCommand\n */\n\nexport default (...args) => new PlaneCommand(...args)\n\n/**\n * PlaneCommand class.\n *\n * @public\n * @class PlaneCommand\n * @extends MeshCommand\n */\n\nexport class PlaneCommand extends MeshCommand {\n  constructor(ctx, opts = {}) {\n    const geometry = new PlaneGeometry(opts.geometry)\n    super(ctx, { ...opts, type: 'plane', geometry })\n  }\n}\n"
  },
  {
    "__docId__": 221,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PlaneCommand",
    "memberof": "src/mesh/plane.js",
    "longname": "src/mesh/plane.js~PlaneCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/mesh/plane.js",
    "importStyle": "{PlaneCommand}",
    "description": "PlaneCommand class.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PlaneCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 222,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/mesh/plane.js~PlaneCommand",
    "longname": "src/mesh/plane.js~PlaneCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "opts",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 223,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mesh/sphere.js",
    "memberof": null,
    "longname": "src/mesh/sphere.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { SphereGeometry } from '../geometry/sphere'\nimport { MeshCommand } from '../mesh'\nimport mat4 from 'gl-mat4'\nimport glsl from 'glslify'\n\n/**\n * SphereCommand constructor.\n * @see SphereCommand\n */\n\nexport default (...args) => new SphereCommand(...args)\n\n/**\n * SphereCommand class.\n *\n * @public\n * @class SphereCommand\n * @extends MeshCommand\n */\n\nexport class SphereCommand extends MeshCommand {\n  constructor(ctx, opts = {}) {\n    const geometry = new SphereGeometry(opts)\n    super(ctx, { ...opts, type: 'sphere', geometry })\n  }\n}\n"
  },
  {
    "__docId__": 224,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SphereCommand",
    "memberof": "src/mesh/sphere.js",
    "longname": "src/mesh/sphere.js~SphereCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/mesh/sphere.js",
    "importStyle": "{SphereCommand}",
    "description": "SphereCommand class.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SphereCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 225,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/mesh/sphere.js~SphereCommand",
    "longname": "src/mesh/sphere.js~SphereCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "opts",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 226,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mesh/triangle.js",
    "memberof": null,
    "longname": "src/mesh/triangle.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { TriangleGeometry } from '../geometry/triangle'\nimport { MeshCommand } from '../mesh'\nimport glsl from 'glslify'\n\n// @TODO(werle) - move this into a glsl file\nconst vert = `\nprecision mediump float;\n\nuniform mat4 projection;\nuniform mat4 model;\nuniform mat4 view;\n\nattribute vec2 position;\nvoid main() {\n  gl_Position = projection * view * model * vec4(position, 0.0, 1.0);\n}\n`\n\n/**\n * TriangleCommand constructor.\n * @see TriangleCommand\n */\n\nexport default (...args) => new TriangleCommand(...args)\n\n/**\n * TriangleCommand class.\n *\n * @public\n * @class TriangleCommand\n * @extends Command\n */\n\nexport class TriangleCommand extends MeshCommand {\n  constructor(ctx, opts = {}) {\n    const geometry = new TriangleGeometry(opts.geometry)\n    super(ctx, { ...opts, count: 3, type: 'triangle', geometry, vert })\n  }\n}\n"
  },
  {
    "__docId__": 227,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "vert",
    "memberof": "src/mesh/triangle.js",
    "longname": "src/mesh/triangle.js~vert",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/mesh/triangle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TriangleCommand",
    "memberof": "src/mesh/triangle.js",
    "longname": "src/mesh/triangle.js~TriangleCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/mesh/triangle.js",
    "importStyle": "{TriangleCommand}",
    "description": "TriangleCommand class.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TriangleCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 229,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/mesh/triangle.js~TriangleCommand",
    "longname": "src/mesh/triangle.js~TriangleCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "opts",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 230,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mesh.js",
    "memberof": null,
    "longname": "src/mesh.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Quaternion, Vector } from './math'\nimport { $reglContext } from './symbols'\nimport getBoundingBox from 'bound-points'\nimport injectDefines from 'glsl-inject-defines'\nimport { Command } from './command'\nimport { define } from './utils'\nimport glslify from 'glslify'\nimport mat4 from 'gl-mat4'\nimport vec4 from 'gl-vec4'\nimport vec3 from 'gl-vec3'\nimport vec2 from 'gl-vec2'\nimport quat from 'gl-quat'\n\n/**\n * Default vertex shader for a mesh.\n *\n * @public\n * @const\n * @type {String}\n */\n\nexport const DEFAULT_VERTEX_SHADER = glslify(__dirname + '/glsl/mesh/vert.glsl')\n\n/**\n * Default fragment shader for a mesh.\n *\n * @public\n * @const\n * @type {String}\n */\n\nexport const DEFAULT_FRAGMENT_SHADER = glslify(__dirname + '/glsl/mesh/frag.glsl')\n\n/**\n * Current mesh command counter.\n *\n * @type {Number}\n */\n\nlet MESH_COMMAND_COUNTER = 0\n\n/**\n * MeshCommand constructor.\n * @see MeshCommand\n */\n\nexport default (...args) => new MeshCommand(...args)\n\n/**\n * MeshCommand class.\n *\n * @public\n * @class MeshCommand\n * @extends Command\n */\n\nexport class MeshCommand extends Command {\n\n  /**\n   * Returns the next mesh D\n   *\n   * @public\n   * @static\n   * @return {Number}\n   */\n\n  static id() {\n    return MESH_COMMAND_COUNTER ++\n  }\n\n  /**\n   * MeshCommand class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} opts\n   */\n\n  constructor(ctx, opts = {}) {\n    const reglOptions = { ...opts.regl }\n    const defaults = { ...opts.defaults }\n    const model = mat4.identity([])\n\n    let hasInitialUpdate = false\n    let boundingBox = null\n    let blending = opts.blending || null\n    let render = null\n    let envmap = null\n    let depth = opts.depth || null\n    let draw = opts.draw || null\n    let map = opts.map || null\n\n    const previous = {\n      rotation: new Quaternion(0, 0, 0, 1),\n      position: new Vector(0, 0, 0),\n      opacity: 1,\n      scale: new Vector(1, 1, 1),\n      color: new Vector(0, 0, 0, 0),\n    }\n\n    /**\n     * Sets mesh map.\n     *\n     * @private\n     * @param {Media|null} value\n     */\n\n    const setMap = (value) => {\n      if (value && value != map) {\n        if (value) {\n          map = value\n          configure()\n        }\n      } else if (null === value && null != map) {\n        map = null\n        configure()\n      }\n    }\n\n    /**\n     * Updates state and internal matrices.\n     *\n     * @private\n     * @param {Object} [state]\n     */\n\n    const update = (state) => {\n      let needsUpdate = !hasInitialUpdate\n\n      if ('scale' in state) {\n        vec3.copy(this.scale, state.scale)\n        needsUpdate = true\n      }\n\n      if ('position' in state) {\n        vec3.copy(this.position, state.position)\n      }\n\n      if ('rotation' in state) {\n        quat.copy(this.rotation, state.rotation)\n      }\n\n      if ('color' in state) {\n        vec4.copy(this.color, state.color)\n        needsUpdate = true\n      }\n\n      if ('wireframe' in state) {\n        this.wireframe = Boolean(state.wireframe)\n        needsUpdate = true\n      }\n\n      if ('opacity' in state) {\n        this.opacity = state.opacity\n        needsUpdate = true\n      }\n\n      if ('blending' in state) {\n        this.blending = state.blending\n        needsUpdate = true\n      }\n\n      if (ctx.previous && ctx.previous.id != this.id) {\n        needsUpdate = true\n      }\n\n      if ('map' in state && map != state.map) {\n        setMap(state.map)\n        needsUpdate = true\n      } else if ('envmap' in state && envmap != state.envmap) {\n        needsUpdate = true\n        this.envmap = state.map\n      }\n\n      if (false == needsUpdate) {\n        return\n      }\n\n      hasInitialUpdate = true\n\n      if (envmap) {\n        this.scale.x = -1\n        // @TODO(werle) flipY should be exposed from texture constructor\n        if (envmap.texture && envmap.texture._texture.flipY) {\n          this.scale.y = -1\n        }\n      }\n\n      // update uniform model matrix\n      mat4.identity(model)\n      mat4.scale(model, model, this.scale)\n      mat4.translate(model, model, this.position)\n      mat4.multiply(model, model, mat4.fromQuat([], this.rotation))\n\n      // apply and set contextual transform\n      if (ctx.previous && ctx.previous.id != this.id) {\n        mat4.multiply(this.transform, ctx.previous.transform, model)\n        mat4.copy(model, this.transform)\n      } else {\n        mat4.copy(this.transform, model)\n      }\n    }\n\n    /**\n     * Configures mesh state. This function\n     * may create a new render function from regl\n     *\n     * @private\n     */\n\n    const configure = () => {\n      const self = this\n      if (!self) { return }\n      // reset draw function\n      if (!opts.draw) { draw = null }\n      // use regl draw command if draw() function\n      // was not provided\n      if (false !== draw && 'function' != typeof draw) {\n        const geometry = opts.geometry || null\n        const elements = geometry ? geometry.primitive.cells : undefined\n        const attributes = {...opts.attributes}\n        const shaderDefines = {}\n\n        const uniforms = {\n          ...opts.uniforms,\n          opacity() {\n            return null != self.opacity ? parseFloat(self.opacity) : 1\n          },\n          color() { return self.color ? self.color.elements : [0, 0, 0, 0]},\n          model() { return model },\n        }\n\n        defaults.primitive = opts.primitive || 'triangles'\n\n        if (geometry && !this.geometry) {\n          this.geometry = geometry\n        }\n\n        if (geometry) {\n          if (geometry.primitive.positions) {\n            shaderDefines.HAS_POSITIONS = ''\n            attributes.position = geometry.primitive.positions\n          }\n\n          if (geometry.primitive.normals) {\n            shaderDefines.HAS_NORMALS = ''\n            attributes.normal = geometry.primitive.normals\n          }\n\n          if (geometry.primitive.uvs) {\n            shaderDefines.HAS_UVS = ''\n            attributes.uv = geometry.primitive.uvs\n          }\n        }\n\n        if (map && map.texture) {\n          uniforms.map = () => {\n            if (map && map.texture) {\n              if ('function' == typeof map) { map() }\n              return map.texture\n            }\n\n            return null\n          }\n        } else if (map) {\n          map.once('load', () => configure())\n        }\n\n        if (!opts.primitive && opts.wireframe) {\n          opts.primitive = 'lines'\n        }\n\n        Object.assign(reglOptions, {\n          context: {\n            ...reglOptions.context,\n            color: uniforms.color(),\n            model: uniforms.model(),\n          },\n\n          uniforms, attributes,\n          vert: undefined !== opts.vert ? opts.vert : DEFAULT_VERTEX_SHADER,\n          frag: undefined !== opts.frag ? opts.frag : DEFAULT_FRAGMENT_SHADER,\n          depth: null != depth ? depth : {enable: true},\n          blend: null != blending ? blending : {\n            enable: true,\n            func: {\n              src: 'src alpha',\n              dst: 'one minus src alpha'\n            },\n          },\n          primitive: null == geometry ? undefined : () => {\n            if (this.wireframe) { return 'lines' }\n            else if (opts.primitive) { return opts.primitive }\n            else { return defaults.primitive }\n          }\n        })\n\n        if (geometry) {\n          Object.assign(reglOptions, {\n            elements: geometry && geometry.cells || function (ctx, props) {\n              props = props || {}\n              return props.elements || geometry ? geometry.cells : null\n            },\n\n          })\n\n          if (opts.count) {\n            reglOptions.count = opts.count\n          } else if (geometry && geometry.primitive) {\n            reglOptions.count = geometry.primitive.count\n          }\n        }\n\n        if (uniforms.map) {\n          shaderDefines.HAS_MAP = ''\n        }\n\n        if (reglOptions.frag) {\n          reglOptions.frag = injectDefines(reglOptions.frag, shaderDefines)\n        }\n\n        if (reglOptions.vert) {\n          reglOptions.vert = injectDefines(reglOptions.vert, shaderDefines)\n        }\n\n        for (let key in reglOptions) {\n          if (undefined === reglOptions[key]) {\n            delete reglOptions[key]\n          }\n        }\n\n        for (let key in defaults) {\n          if (undefined === defaults[key]) {\n            delete defaults[key]\n          }\n        }\n\n        if (reglOptions.vert && reglOptions.frag) {\n          draw = ctx.regl(reglOptions)\n        }\n      }\n\n      // configure render command\n      render = opts.render || ((_, state = {}, next = () => void 0) => {\n        let args = null\n\n        ctx.push(this)\n\n        if ('function' == typeof state) {\n          args = [{...defaults}]\n          next = state\n          state = {}\n        } else if (Array.isArray(state)) {\n          args = [state.map((o) => Object.assign({...defaults}, o))]\n        } else {\n          args = [{...defaults, ...state}]\n        }\n\n        const props = Array.isArray(state)\n          ? state.map((o) => ({ ...defaults, ...o }))\n          : ({...defaults, ...state})\n\n        const block = () => {\n          next({...(ctx[$reglContext] || {}), ...reglOptions.context })\n        }\n\n        opts.before && opts.before(...args)\n        update(...args)\n        draw(props)\n        block()\n        opts.after && opts.after({...defaults, ...state}, block)\n        ctx.pop()\n      })\n    }\n\n    // calls current target  render function\n    super((...args) => render(...args))\n\n    /**\n     * Mesh ID.\n     *\n     * @type {Number}\n     */\n\n    this.id = opts.id || MeshCommand.id()\n\n    /**\n     * Mesh type name.\n     *\n     * @type {String}\n     */\n\n    this.type = opts.type || 'object'\n\n    /**\n     * Mesh scale vector.\n     *\n     * @type {Vector}\n     */\n\n    this.scale = opts.scale ?\n      new Vector(...opts.scale) :\n      new Vector(1, 1, 1)\n\n    /**\n     * Mesh position vector.\n     *\n     * @type {Vector}\n     */\n\n    this.position = opts.position ?\n      new Vector(...opts.position) :\n      new Vector(0, 0, 0)\n\n    /**\n     * Mesh rotation quaternion\n     *\n     * @type {Quaternion}\n     */\n\n    this.rotation = opts.rotation ?\n      new Quaternion(...opts.rotation) :\n      new Quaternion()\n\n    /**\n     * Mesh transform matrix\n     *\n     * @type {Array}\n     */\n\n    this.transform = mat4.identity([])\n\n    /**\n     * Boolean to indicate if mesh should be drawn\n     * with a line primitive.\n     *\n     * @type {Boolean}\n     */\n\n    this.wireframe = false\n\n    /**\n     * Mesh color property.\n     *\n     * @type {Vector}\n     */\n\n    this.color = opts.color ?\n      new Vector(...opts.color) :\n      new Vector(197/255, 148/255, 149/255, 1.0)\n\n    /**\n     * Mesh opacity.\n     *\n     * @type {Number}\n     */\n\n    this.opacity = opts.opacity || 1\n\n    /**\n     * Computed bounding\n     *\n     * @type {Array<Vector>}\n     */\n\n    define(this, 'boundingBox', {\n      get() {\n        if (null == this.geometry) {\n          return null\n        } else if (boundingBox) {\n          return boundingBox\n        }\n\n        boundingBox =\n          getBoundingBox(this.geometry.positions).map((p) => new Vector(...p))\n        return boundingBox\n      }\n    })\n\n    /**\n     * Computed size.\n     *\n     * @type {Vector}\n     */\n\n    define(this, 'size', {\n      get() {\n        // trigger compute with getter\n        if (null == this.boundingBox) {\n          return null\n        }\n\n        const min = boundingBox[0]\n        const max = boundingBox[1]\n        const dimension = boundingBox[0].length\n\n        switch (dimension) {\n          case 3: return vec3.subtract(new Vector(0, 0, 0), max, min)\n          case 2: return vec2.subtract(new Vector(0, 0, 0), max, min)\n          default: return null\n        }\n      }\n    })\n\n    /**\n     * Mesh texture map if given.\n     *\n     * @type {Media}\n     */\n\n    define(this, 'map', {\n      get: () => map,\n      set: (value) => setMap(value)\n    })\n\n    /**\n     * Mesh texture environment map if given.\n     *\n     * @type {Media}\n     */\n\n    define(this, 'envmap', {\n      get: () => envmap,\n      set: (value) => {\n        if (null == value) {\n          envmap = null\n        } else if (value != envmap) {\n          envmap = value\n          setMap(value)\n        }\n      }\n    })\n\n    // set envmap from input\n    this.envmap = opts.envmap\n\n    /**\n     * Toggles blending.\n     *\n     * @type {Boolean|Object}\n     */\n\n    define(this, 'blending', {\n      get: () => blending,\n      set: (value) => {\n        blending = value\n        configure()\n      }\n    })\n\n    /**\n     * Toggles depth.\n     *\n     * @type {Boolean|Object}\n     */\n\n    define(this, 'depth', {\n      get: () => depth,\n      set: (value) => {\n        depth = value\n        configure()\n      }\n    })\n\n    // initial configuration\n    configure()\n  }\n}\n"
  },
  {
    "__docId__": 231,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_VERTEX_SHADER",
    "memberof": "src/mesh.js",
    "longname": "src/mesh.js~DEFAULT_VERTEX_SHADER",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/mesh.js",
    "importStyle": "{DEFAULT_VERTEX_SHADER}",
    "description": "Default vertex shader for a mesh.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 232,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_FRAGMENT_SHADER",
    "memberof": "src/mesh.js",
    "longname": "src/mesh.js~DEFAULT_FRAGMENT_SHADER",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/mesh.js",
    "importStyle": "{DEFAULT_FRAGMENT_SHADER}",
    "description": "Default fragment shader for a mesh.",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 233,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "MESH_COMMAND_COUNTER",
    "memberof": "src/mesh.js",
    "longname": "src/mesh.js~MESH_COMMAND_COUNTER",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/mesh.js",
    "importStyle": null,
    "description": "Current mesh command counter.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 234,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MeshCommand",
    "memberof": "src/mesh.js",
    "longname": "src/mesh.js~MeshCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/mesh.js",
    "importStyle": "{MeshCommand}",
    "description": "MeshCommand class.",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MeshCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 235,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "id",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand.id",
    "access": "public",
    "description": "Returns the next mesh D",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@static",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 236,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#constructor",
    "access": null,
    "description": "MeshCommand class constructor.",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 237,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "wireframe",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#wireframe",
    "access": null,
    "description": null,
    "lineNumber": 154,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "opacity",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#opacity",
    "access": null,
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "blending",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#blending",
    "access": null,
    "description": null,
    "lineNumber": 164,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "envmap",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#envmap",
    "access": null,
    "description": null,
    "lineNumber": 177,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "geometry",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#geometry",
    "access": null,
    "description": null,
    "lineNumber": 241,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#id",
    "access": null,
    "description": "Mesh ID.",
    "lineNumber": 390,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 243,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#type",
    "access": null,
    "description": "Mesh type name.",
    "lineNumber": 398,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 244,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "scale",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#scale",
    "access": null,
    "description": "Mesh scale vector.",
    "lineNumber": 406,
    "type": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 245,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "position",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#position",
    "access": null,
    "description": "Mesh position vector.",
    "lineNumber": 416,
    "type": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 246,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "rotation",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#rotation",
    "access": null,
    "description": "Mesh rotation quaternion",
    "lineNumber": 426,
    "type": {
      "nullable": null,
      "types": [
        "Quaternion"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 247,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "transform",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#transform",
    "access": null,
    "description": "Mesh transform matrix",
    "lineNumber": 436,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 248,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "wireframe",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#wireframe",
    "access": null,
    "description": "Boolean to indicate if mesh should be drawn\nwith a line primitive.",
    "lineNumber": 445,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 249,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "color",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#color",
    "access": null,
    "description": "Mesh color property.",
    "lineNumber": 453,
    "type": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 250,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "opacity",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#opacity",
    "access": null,
    "description": "Mesh opacity.",
    "lineNumber": 463,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 251,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "envmap",
    "memberof": "src/mesh.js~MeshCommand",
    "longname": "src/mesh.js~MeshCommand#envmap",
    "access": null,
    "description": null,
    "lineNumber": 540,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/ray.js",
    "memberof": null,
    "longname": "src/ray.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": ""
  },
  {
    "__docId__": 253,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/symbols.js",
    "memberof": null,
    "longname": "src/symbols.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * 'current' command symbol.\n *\n * @public\n * @const\n * @type {Symbol}\n */\n\nexport const $current = Symbol('current')\n\n/**\n * 'previous' command symbol.\n *\n * @public\n * @const\n * @type {Symbol}\n */\n\nexport const $previous = Symbol('previous')\n\n/**\n * 'element' symbol.\n *\n * @public\n * @const\n * @type {Symbol}\n */\n\nexport const $domElement = Symbol('element')\n\n/**\n * regl context symbol.\n *\n * @public\n * @const\n * @type {Symbol}\n */\n\nexport const $regl = Symbol('regl')\n\n/**\n * 'hasFocus' boolean symbol.\n *\n * @public\n * @const\n * @type {Symbol}\n */\n\nexport const $hasFocus = Symbol('hasFocus')\n\n/**\n * Symbol for an internal run method.\n *\n * @public\n * @const\n * @symbol nun\n */\n\nexport const $run = Symbol('run')\n\n/**\n * Symbol for an internal reference\n *\n * @public\n * @const\n * @symbol ref\n */\n\nexport const $ref = Symbol('ref')\n\n/**\n * Symbol for an internal context\n *\n * @public\n * @const\n * @symbol ctx\n */\n\nexport const $ctx = Symbol('ctx')\n\n/**\n * Symbol for an internal stack.\n *\n * @public\n * @const\n * @symbol stack\n */\n\nexport const $stack = Symbol('stack')\n\n/**\n * Symbol for an internal state.\n *\n * @public\n * @const\n * @symbol state\n */\n\nexport const $state = Symbol('state')\n\n/**\n * Symbol for a regl context.\n *\n * @public\n * @const\n * @symbol reglContext\n */\n\nexport const $reglContext = Symbol('reglContext')\n"
  },
  {
    "__docId__": 254,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$current",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$current",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$current}",
    "description": "'current' command symbol.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Symbol"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 255,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$previous",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$previous",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$previous}",
    "description": "'previous' command symbol.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Symbol"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 256,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$domElement",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$domElement",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$domElement}",
    "description": "'element' symbol.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Symbol"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 257,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$regl",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$regl",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$regl}",
    "description": "regl context symbol.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Symbol"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 258,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$hasFocus",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$hasFocus",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$hasFocus}",
    "description": "'hasFocus' boolean symbol.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Symbol"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 259,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$run",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$run",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$run}",
    "description": "Symbol for an internal run method.",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      },
      {
        "tagName": "@symbol",
        "tagValue": "nun"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 260,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$ref",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$ref",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$ref}",
    "description": "Symbol for an internal reference",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      },
      {
        "tagName": "@symbol",
        "tagValue": "ref"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$ctx",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$ctx",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$ctx}",
    "description": "Symbol for an internal context",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      },
      {
        "tagName": "@symbol",
        "tagValue": "ctx"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$stack",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$stack",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$stack}",
    "description": "Symbol for an internal stack.",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      },
      {
        "tagName": "@symbol",
        "tagValue": "stack"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$state",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$state",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$state}",
    "description": "Symbol for an internal state.",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      },
      {
        "tagName": "@symbol",
        "tagValue": "state"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$reglContext",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$reglContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$reglContext}",
    "description": "Symbol for a regl context.",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      },
      {
        "tagName": "@symbol",
        "tagValue": "reglContext"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils.js",
    "memberof": null,
    "longname": "src/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { version } from './package'\nimport createDebug from 'debug'\n\n/**\n * Define property helper.\n *\n * @public\n * @param {Object} a\n * @param {String} b\n * @param {Object} c\n */\n\nexport const define = (a, b, c) => Object.defineProperty(a, b, { ...c })\n\n/**\n * Converts input degrees to radians\n *\n * @public\n * @param {Number} n\n * @return {Number}\n */\n\nexport const radians = (n) => n == n ? (n*Math.PI/180.0) : 0\n\n/**\n * Utility debug output\n *\n * @public\n * @param {String} fmt\n * @param {...Mixed} args\n */\n\nexport const debug = createDebug(`[axis@${version}]`)\n\n/**\n * Simple linear inerpolation function.\n *\n * @public\n * @param {Number} v0\n * @param {Number} v1\n * @param {Number} t\n * @return {Number}\n */\n\nexport const lerp = (v0, v1, t) => v0*(1 - t) + v1*t\n\n/**\n * Predicate function to determine if a given DOM\n * element is in the window's viewport.\n *\n * @public\n * @param {Element} domElement\n * @return {Boolean}\n */\n\nexport const isDOMElementInViewport = (domElement) => {\n  const {clientWidth, clientHeight} = document.documentElement\n  const {top, left, bottom, right} = domElement.getBoundingClientRect()\n  const {innerWidth, innerHeight} = window\n  const height = innerHeight || clientHeight\n  const width = innerWidth || clientWidth\n  return bottom > 0 && right > 0 && left < width && top < height\n}\n\n/**\n * Returns the screen orientation angle.\n * Borrowed from https://github.com/hawksley/eleVR-Web-Player/blob/master/lib/util.js\n *\n * @return {Number}\n */\n\nexport const getScreenOrientation = () => {\n  switch (window.screen.orientation || window.screen.mozOrientation) {\n    case 'landscape-primary': return 90\n    case 'landscape-secondary': return -90\n    case 'portrait-secondary': return 180\n    case 'portrait-primary': return 0\n  }\n\n  return window.orientation || 0\n}\n"
  },
  {
    "__docId__": 266,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "define",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~define",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{define}",
    "description": "Define property helper.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "radians",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~radians",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{radians}",
    "description": "Converts input degrees to radians",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "debug",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~debug",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{debug}",
    "description": "Utility debug output",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fmt",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "...Mixed"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 269,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "lerp",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~lerp",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{lerp}",
    "description": "Simple linear inerpolation function.",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "v0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "v1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isDOMElementInViewport",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~isDOMElementInViewport",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{isDOMElementInViewport}",
    "description": "Predicate function to determine if a given DOM\nelement is in the window's viewport.",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "domElement",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 271,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "getScreenOrientation",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~getScreenOrientation",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{getScreenOrientation}",
    "description": "Returns the screen orientation angle.\nBorrowed from https://github.com/hawksley/eleVR-Web-Player/blob/master/lib/util.js",
    "lineNumber": 78,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 274,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 275,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 276,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 277,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 278,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 279,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 280,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 281,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 282,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 283,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 284,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 285,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 286,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 287,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 288,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 289,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 290,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 291,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 292,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 293,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 294,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 295,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 296,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 297,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 298,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 299,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 300,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 301,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 302,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 303,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 304,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 305,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 306,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 307,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 308,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 309,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 310,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 311,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 312,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 313,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 314,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 315,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 316,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 317,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 318,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 319,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 321,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 322,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 323,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 324,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 325,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 326,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 327,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 328,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  }
]