[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/backgrounds/color.js",
    "memberof": null,
    "longname": "src/backgrounds/color.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module depdendencies.\n */\n\nimport { Command } from '../command'\nimport { Vector } from '../math/vector'\nimport glslify from 'glslify'\n\nconst vert = glslify(__dirname + '/../glsl/backgrounds/color/vert.glsl')\nconst frag = glslify(__dirname + '/../glsl/backgrounds/color/frag.glsl')\n\nexport const DEFAULT_COLOR = new Vector(121/255.0, 117/255.0, 114/255.0, 1)\n\n/**\n * ColorBackgroundCommand constructor.\n * @see ColorBackgroundCommand\n */\n\nmodule.exports = exports = (...args) => new ColorBackgroundCommand(...args)\n\n/**\n * ColorBackgroundCommand class.\n *\n * @public\n * @class ColorBackgroundCommand\n */\n\nexport class ColorBackgroundCommand extends Command {\n  constructor(ctx, {\n    reduction = 1.0,\n    boost = 1.0,\n    color = DEFAULT_COLOR,\n  } = {}) {\n    let draw = null\n    const {regl} = ctx\n    const configure = () => draw = regl({\n      vert, frag,\n      uniforms: {\n        height: regl.context('viewportHeight'),\n        width: regl.context('viewportWidth'),\n        color: [...color],\n      },\n      attributes: {position: [-4, -4, 4, -4, 0, 4]},\n      depth: {enable: false, mask: false},\n      count: 3\n    })\n\n    configure()\n    super((_, block, scope) => {\n      let needsConfiguration = false\n      if ('object' == typeof block) {\n        if ('color' in block) {\n          if ('object' == typeof block.color &&\n             block.color == block.color &&\n             color != block.color) {\n             if (color[0] != block.color[0] ||\n                 color[1] != block.color[1] ||\n                 color[2] != block.color[2] ||\n                 color[3] != block.color[3]) {\n              color = block.color\n              needsConfiguration = true\n            }\n          }\n        }\n      }\n\n      if (needsConfiguration) {\n        configure()\n      }\n\n      draw(block, scope)\n    })\n  }\n}\n"
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "vert",
    "memberof": "src/backgrounds/color.js",
    "longname": "src/backgrounds/color.js~vert",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/backgrounds/color.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "frag",
    "memberof": "src/backgrounds/color.js",
    "longname": "src/backgrounds/color.js~frag",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/backgrounds/color.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_COLOR",
    "memberof": "src/backgrounds/color.js",
    "longname": "src/backgrounds/color.js~DEFAULT_COLOR",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/backgrounds/color.js",
    "importStyle": "{DEFAULT_COLOR}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "src/math/vector.js~Vector"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ColorBackgroundCommand",
    "memberof": "src/backgrounds/color.js",
    "longname": "src/backgrounds/color.js~ColorBackgroundCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/backgrounds/color.js",
    "importStyle": "{ColorBackgroundCommand}",
    "description": "ColorBackgroundCommand class.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ColorBackgroundCommand"
      }
    ],
    "interface": false,
    "extends": [
      "src/command.js~Command"
    ]
  },
  {
    "__docId__": 5,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/backgrounds/color.js~ColorBackgroundCommand",
    "longname": "src/backgrounds/color.js~ColorBackgroundCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "optional": true,
        "types": [
          "{\"reduction\": *, \"boost\": *, \"color\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 6,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/backgrounds/image.js",
    "memberof": null,
    "longname": "src/backgrounds/image.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": ""
  },
  {
    "__docId__": 7,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/backgrounds/vignette.js",
    "memberof": null,
    "longname": "src/backgrounds/vignette.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module depdendencies.\n */\n\nimport injectDefines from 'glsl-inject-defines'\nimport { Command } from '../command'\nimport { Vector } from '../math/vector'\nimport glslify from 'glslify'\n\nconst vert = glslify(__dirname + '/../glsl/backgrounds/vignette/vert.glsl')\nconst frag = glslify(__dirname + '/../glsl/backgrounds/vignette/frag.glsl')\n\nexport const DEFAULT_COLOR = new Vector(121/255.0, 117/255.0, 114/255.0, 1)\n\n/**\n * VignetteBackgroundCommand constructor.\n * @see VignetteBackgroundCommand\n */\n\nmodule.exports = exports = (...args) => new VignetteBackgroundCommand(...args)\n\n/**\n * VignetteBackgroundCommand class.\n *\n * @public\n * @class VignetteBackgroundCommand\n */\n\nexport class VignetteBackgroundCommand extends Command {\n  constructor(ctx, {\n    reduction = 1.0,\n    scale = [1.0, 1.0, 1.-1],\n    noise = 0.05,\n    boost = 1.0,\n    color = DEFAULT_COLOR,\n    mix = 1.0,\n    map = null\n  } = {}) {\n    let draw = null\n    let hasMap = false\n    const {regl} = ctx\n    const configure = () => {\n      const defines = {}\n      const uniforms = {\n        interpolation: () => mix,\n        resolution: ({resolution}) => resolution,\n        reduction: () => reduction,\n        height: regl.context('viewportHeight'),\n        width: regl.context('viewportWidth'),\n        color: () => [...color],\n        scale: () => [...scale],\n        boost: () => boost,\n        noise: () => noise,\n      }\n\n      if (null == map) {\n        delete defines.HAS_MAP\n        delete uniforms.isMapLoaded\n        delete uniforms.map\n      } else if (null !== map.texture) {\n        hasMap = true\n        defines.HAS_MAP = ''\n        uniforms.isMapLoaded = () => {\n          if ('function' == typeof map && map.texture) {\n            map()\n          }\n\n          if (null != map.isDoneLoading && null != map.hasProgress) {\n            return Boolean(map.isDoneLoading || map.hasProgress)\n          } else {\n            return true\n          }\n        }\n\n        uniforms.map = () => {\n          if ('function' == typeof map) { map() }\n          return map.texture || map\n        }\n      }\n\n      draw = regl({\n        vert: injectDefines(vert, defines),\n        frag: injectDefines(frag, defines),\n        uniforms,\n        attributes: {position: [-4, -4, 4, -4, 0, 4]},\n        depth: {enable: false, mask: false},\n        count: 3\n      })\n    }\n\n    super((_, block, scope) => {\n      let needsConfiguration = draw ? false : true\n      const isNumber = (n) => n == n && 'number' == typeof n\n      if ('object' == typeof block) {\n        if ('reduction' in block) {\n          if (isNumber(block.reduction) && reduction != block.reduction) {\n            reduction = block.reduction\n          }\n        }\n\n        if ('boost' in block) {\n          if (isNumber(block.boost) && boost != block.boost) {\n            boost = block.boost\n          }\n        }\n\n        if ('noise' in block) {\n          if (isNumber(block.noise) && noise != block.noise) {\n            noise = block.noise\n          }\n        }\n\n        if ('mix' in block) {\n          if (isNumber(block.mix) && mix != block.mix) {\n            mix = block.mix\n          }\n        }\n\n        if ('map' in block) {\n          if (map != block.map) {\n            map = block.map\n            needsConfiguration = true\n          }\n        }\n\n        if ('color' in block) {\n          if ('object' == typeof block.color) {\n            if (color[0] != block.color[0] ||\n                color[1] != block.color[1] ||\n                color[2] != block.color[2] ||\n                color[3] != block.color[3]) {\n              color = block.color\n            }\n          }\n        }\n\n        if ('scale' in block) {\n          if ('object' == typeof block.scale) {\n            if (scale[0] != block.scale[0] ||\n                scale[1] != block.scale[1] ||\n                scale[2] != block.scale[2]) {\n              scale = block.scale\n            }\n          }\n        }\n      }\n\n      if (map && false == hasMap) {\n        needsConfiguration = true\n      }\n\n      if (needsConfiguration) {\n        configure()\n      }\n\n      draw(block, scope)\n    })\n  }\n}\n"
  },
  {
    "__docId__": 8,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "vert",
    "memberof": "src/backgrounds/vignette.js",
    "longname": "src/backgrounds/vignette.js~vert",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/backgrounds/vignette.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "frag",
    "memberof": "src/backgrounds/vignette.js",
    "longname": "src/backgrounds/vignette.js~frag",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/backgrounds/vignette.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 10,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_COLOR",
    "memberof": "src/backgrounds/vignette.js",
    "longname": "src/backgrounds/vignette.js~DEFAULT_COLOR",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/backgrounds/vignette.js",
    "importStyle": "{DEFAULT_COLOR}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "src/math/vector.js~Vector"
      ]
    }
  },
  {
    "__docId__": 11,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "VignetteBackgroundCommand",
    "memberof": "src/backgrounds/vignette.js",
    "longname": "src/backgrounds/vignette.js~VignetteBackgroundCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/backgrounds/vignette.js",
    "importStyle": "{VignetteBackgroundCommand}",
    "description": "VignetteBackgroundCommand class.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "VignetteBackgroundCommand"
      }
    ],
    "interface": false,
    "extends": [
      "src/command.js~Command"
    ]
  },
  {
    "__docId__": 12,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/backgrounds/vignette.js~VignetteBackgroundCommand",
    "longname": "src/backgrounds/vignette.js~VignetteBackgroundCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "optional": true,
        "types": [
          "{\"reduction\": *, \"scale\": *, \"noise\": *, \"boost\": *, \"color\": *, \"mix\": *, \"map\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 13,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/camera.js",
    "memberof": null,
    "longname": "src/camera.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { define, radians } from './utils'\nimport { Object3DCommand } from './object'\nimport { Vector } from './math'\nimport coalesce from 'defined'\nimport mat4 from 'gl-mat4'\nimport vec3 from 'gl-vec3'\nimport quat from 'gl-quat'\n\n// Scratch matrix\nconst scratch = mat4.identity([])\n\nexport const DEFAULT_CAMERA_FAR = 1000.0\nexport const DEFAULT_CAMERA_NEAR = 0.01\nexport const DEFAULT_CAMERA_FIELD_OF_VIEW = radians(60)\nexport const DEFAULT_CAMERA_ORIENTATION_ORIGIN =\n  // pitch, yaw, roll\n  new Vector(radians(90), 0, 0)\n\n/**\n * CameraCommand constructor.\n * @see CameraCommand\n */\n\nmodule.exports = exports = (...args) => new CameraCommand(...args)\n\n/**\n * CameraCommand class.\n *\n * @public\n * @class CameraCommand\n * @extends Command\n */\n\nexport class CameraCommand extends Object3DCommand {\n\n  /**\n   * Camera class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} opts\n   */\n\n  constructor(ctx, opts = {}) {\n    const worldUp = new Vector(0, 1, 0)\n    const target = opts.target || new Vector(0, 0, 0)\n    const front = new Vector(0, 0, -1)\n    const right = new Vector(1, 0, 0)\n    const eye = new Vector(0, 0, 0)\n    const up = new Vector(0, 0, 0)\n\n    const orientation = Object.create(DEFAULT_CAMERA_ORIENTATION_ORIGIN)\n    const projection = mat4.identity([])\n    const view = mat4.identity([])\n\n    let viewportHeight = coalesce(opts.viewportHeight, 1)\n    let viewportWidth = coalesce(opts.viewportWidth, 1)\n    let near = coalesce(opts.near, DEFAULT_CAMERA_NEAR)\n    let far = coalesce(opts.far, DEFAULT_CAMERA_FAR)\n    let fov = coalesce(opts.fov, opts.fieldOfView, DEFAULT_CAMERA_FIELD_OF_VIEW)\n\n    const context = {\n      projection: () => projection,\n      transform: () => mat4.identity([]),\n      aspect: () => viewportWidth/viewportHeight,\n      view: () => view,\n    }\n\n    const injectContext = ctx.regl({context})\n    const update = (state) => {\n      state = state || {}\n\n      if (ctx.reglContext) {\n        viewportHeight = coalesce(ctx.reglContext.viewportHeight, 1)\n        viewportWidth = coalesce(ctx.reglContext.viewportWidth, 1)\n      }\n\n      if ('fov' in state) {\n        fov = state.fov\n      }\n\n      if ('far' in state) {\n        far = state.far\n      }\n\n      if ('near' in state) {\n        near = state.near\n      }\n\n      if ('viewportWidth' in state) {\n        viewportWidth = state.viewportWidth\n      }\n\n      if ('viewportHeight' in state) {\n        viewportHeight = state.viewportHeight\n      }\n\n      if ('orientation' in state) {\n        quat.copy(orientation, state.orientation)\n      }\n\n      if ('target' in state) {\n        vec3.copy(target, state.target)\n      }\n\n      const aspect = viewportWidth/viewportHeight\n      const vector = new Vector(0, 0, 0)\n      const {\n        position,\n        rotation,\n        scale,\n      } = this\n\n      // compute front vector from orientation euler\n      vec3.set(front,\n        Math.cos(orientation[0]) * Math.cos(orientation[1]),\n        Math.sin(orientation[1]),\n        Math.sin(orientation[0]) * Math.sin(orientation[1])\n      )\n\n      // normalize front vector and compute\n      // corresponding right and worldUp vectors\n      vec3.normalize(front, front)\n      vec3.copy(right, vec3.normalize([], vec3.cross([], front, worldUp)))\n      vec3.copy(up, vec3.normalize([], vec3.cross([], right, front)))\n\n      // set projection\n      // @TODO(werle) - mat4.orhto()\n      mat4.perspective(projection, fov, aspect, near, far)\n\n      // update view matrix with scaled\n      // position and target vectors\n      const center = vec3.multiply([], position || [0, 0, 0], scale)\n      mat4.lookAt(view, center, vec3.multiply([], target, scale), up)\n\n      // scale and rotate view matrix\n      mat4.multiply(view, view, mat4.fromQuat([], rotation))\n      mat4.scale(view, view, scale)\n\n      // compute eye vector from the inverse view matrix\n      mat4.invert(scratch, view)\n      vec3.set(eye, scratch[12], scratch[13], scratch[14])\n    }\n\n    super(ctx, {\n      ...opts,\n      draw(state, block) {\n        let needsUpdate = false\n        if ('function' == typeof state) {\n          block = state\n          state = {}\n        } else if ('object' == typeof state) {\n          needsUpdate = true\n        }\n\n\t\t\t\tif (needsUpdate) {\n          update(state)\n        }\n\n        injectContext(block)\n      }\n    })\n\n    // initial update\n    update({})\n\n    //\n    // Public properties\n    //\n    define(this, 'target', { get() { return target } })\n    define(this, 'fov', { get() { return fov } })\n  }\n}\n"
  },
  {
    "__docId__": 14,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "scratch",
    "memberof": "src/camera.js",
    "longname": "src/camera.js~scratch",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/camera.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_CAMERA_FAR",
    "memberof": "src/camera.js",
    "longname": "src/camera.js~DEFAULT_CAMERA_FAR",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/camera.js",
    "importStyle": "{DEFAULT_CAMERA_FAR}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 16,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_CAMERA_NEAR",
    "memberof": "src/camera.js",
    "longname": "src/camera.js~DEFAULT_CAMERA_NEAR",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/camera.js",
    "importStyle": "{DEFAULT_CAMERA_NEAR}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 17,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_CAMERA_FIELD_OF_VIEW",
    "memberof": "src/camera.js",
    "longname": "src/camera.js~DEFAULT_CAMERA_FIELD_OF_VIEW",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/camera.js",
    "importStyle": "{DEFAULT_CAMERA_FIELD_OF_VIEW}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_CAMERA_ORIENTATION_ORIGIN",
    "memberof": "src/camera.js",
    "longname": "src/camera.js~DEFAULT_CAMERA_ORIENTATION_ORIGIN",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/camera.js",
    "importStyle": "{DEFAULT_CAMERA_ORIENTATION_ORIGIN}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "src/math.js~Vector"
      ]
    }
  },
  {
    "__docId__": 19,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "CameraCommand",
    "memberof": "src/camera.js",
    "longname": "src/camera.js~CameraCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/camera.js",
    "importStyle": "{CameraCommand}",
    "description": "CameraCommand class.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CameraCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 20,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/camera.js~CameraCommand",
    "longname": "src/camera.js~CameraCommand#constructor",
    "access": null,
    "description": "Camera class constructor.",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 21,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/command.js",
    "memberof": null,
    "longname": "src/command.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module symbols.\n */\n\nimport {\n  $ctx,\n  $run,\n  $ref,\n} from './symbols'\n\nconst encode = (fn) => `(${String(fn)})`\nconst noop = () => this\n\nfunction commandRunnerWrap(ctx, run, ...args) {\n  if (this && 'function' == typeof run) {\n    return run.apply(run, [ctx, ...args])\n  }\n  return this\n}\n\n/**\n * Command class.\n *\n * @public\n */\n\nexport class Command extends Function {\n\n  /**\n   * Generates code executed in an\n   * isolated context.\n   *\n   * @static\n   * @param {Function} fn\n   * @return {String}\n   */\n\n  static codegen(fn) {\n    return `\n    var fn = ${encode(fn)};\n    return fn.apply(this, arguments);\n    `\n  }\n\n  /**\n   * Command class constructor.\n   * Assigns a command runner and returns\n   * a command function.\n   *\n   * @constructor\n   * @param {Function} run\n   */\n\n  constructor(run) {\n    super(Command.codegen(commandRunnerWrap))\n    run = 'function' == typeof run ? run : noop\n    const state = {[$run]: run}\n    const ctx = this[$ctx] = new CommandContext(this, state)\n    const exec = (...args) => this(ctx, run, ...args)\n    const self = this\n    return (...args) => exec.call(self, ...args)\n  }\n}\n\n/**\n * CommandContext class.\n *\n * @public\n */\n\nexport class CommandContext {\n  constructor(cmd, state) {\n    this[$ref] = cmd\n    Object.assign(this, state || {})\n  }\n\n  get ref() {\n    return this[$ref]\n  }\n}\n"
  },
  {
    "__docId__": 22,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "encode",
    "memberof": "src/command.js",
    "longname": "src/command.js~encode",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/command.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 23,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "noop",
    "memberof": "src/command.js",
    "longname": "src/command.js~noop",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/command.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 24,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "commandRunnerWrap",
    "memberof": "src/command.js",
    "longname": "src/command.js~commandRunnerWrap",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/command.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "run",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Command",
    "memberof": "src/command.js",
    "longname": "src/command.js~Command",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/command.js",
    "importStyle": "{Command}",
    "description": "Command class.",
    "lineNumber": 29,
    "interface": false,
    "extends": [
      "Function"
    ]
  },
  {
    "__docId__": 26,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "codegen",
    "memberof": "src/command.js~Command",
    "longname": "src/command.js~Command.codegen",
    "access": null,
    "description": "Generates code executed in an\nisolated context.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@static",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 27,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/command.js~Command",
    "longname": "src/command.js~Command#constructor",
    "access": null,
    "description": "Command class constructor.\nAssigns a command runner and returns\na command function.",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "run",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 28,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "CommandContext",
    "memberof": "src/command.js",
    "longname": "src/command.js~CommandContext",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/command.js",
    "importStyle": "{CommandContext}",
    "description": "CommandContext class.",
    "lineNumber": 73,
    "interface": false
  },
  {
    "__docId__": 29,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/command.js~CommandContext",
    "longname": "src/command.js~CommandContext#constructor",
    "access": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [
      {
        "name": "cmd",
        "types": [
          "*"
        ]
      },
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 30,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "ref",
    "memberof": "src/command.js~CommandContext",
    "longname": "src/command.js~CommandContext#ref",
    "access": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/context.js",
    "memberof": null,
    "longname": "src/context.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { EventEmitter } from 'events'\nimport events from 'dom-events'\nimport glsl from 'glslify'\nimport regl from 'regl'\n\nimport {\n  $isDestroyed,\n  $reglContext,\n  $domElement,\n  $hasFocus,\n  $scope,\n  $caller,\n  $stack,\n  $state,\n  $regl\n} from './symbols'\n\nexport const defaults = {\n  clear: {\n    // @TODO(werle) - use a color module\n    color: [17/255, 17/255, 17/255, 1],\n    depth: 1,\n  },\n}\n\n/**\n * Creates a new Context instance with\n * sane defaults.\n *\n * @param {Object} opts\n */\n\nmodule.exports = exports = (state, opts) =>\n  new Context({...defaults, ...state}, opts)\n\n/**\n * Context class.\n *\n * @public\n * @class Context\n * @extends EventEmitter\n */\n\nexport class Context extends EventEmitter {\n\n  /**\n   * Context class constructor.\n   *\n   * @param {Objects} [initialState]\n   * @param {Object} [opts]\n   */\n\n  constructor(initialState = {}, opts = {}, createRegl = regl) {\n    super()\n\n    this[$stack] = []\n    this[$state] = initialState\n    this[$caller] = null\n    this[$scope] = null\n    this[$hasFocus] = false\n    this[$reglContext] = null\n\n    this.setMaxListeners(Infinity)\n    opts.regl = opts.regl || opts.gl || {}\n    createRegl({\n      ...(opts.regl),\n      attributes: {\n        ...(opts.regl.attributes || {}),\n        premultipliedAlpha: true,\n      },\n      extensions: [\n        ...(opts.regl.extensions || []),\n        'OES_texture_float',\n        'webgl_draw_buffers',\n      ],\n\n      optionalExtensions: [\n        ...(opts.regl.optionalExtensions || []),\n      ],\n\n      onDone: (err, regl) => {\n        if (err) {\n          return this.emit('error', err)\n        }\n\n        this[$regl] = regl\n        this[$domElement] = this[$regl]._gl.canvas\n        this[$isDestroyed] = false\n      }\n    })\n\n    if (opts.element && 'CANVAS' == opts.element.nodeName) {\n      reglOptions.canvas = opts.element\n    } else if (opts.element && opts.element.nodeName) {\n      reglOptions.container = opts.element\n    } else if ('string' == typeof opts.element) {\n      reglOptions.container = opts.element\n    }\n\n\n    // DOM events\n    events.on(this[$domElement], 'focus', () => this.focus())\n    events.on(this[$domElement], 'blur', () => this.blur())\n    events.on(window, 'blur', () => this.blur())\n  }\n\n  get reglContext() { return this[$reglContext] }\n  get domElement() { return this[$domElement] }\n  get hasFocus() { return this[$hasFocus] }\n  get caller() { return this[$caller] }\n  get scope() { return this[$scope] }\n  get depth() { return this[$stack].length }\n  get state() { return this[$stack] }\n  get regl() { return this[$regl] }\n\n  /**\n   * Focuses context.\n   *\n   * @return {Context}\n   */\n\n  focus() {\n    this[$hasFocus] = true\n    this.emit('focus')\n    return this\n  }\n\n  /**\n   * Blurs context.\n   *\n   * @return {Context}\n   */\n\n  blur() {\n    this[$hasFocus] = false\n    this.emit('blur')\n    return this\n  }\n\n  /**\n   * Pushes command to context stack.\n   *\n   * @param {Command} command\n   * @return {Context}\n   */\n\n  push(command) {\n    if ('function' == typeof command) {\n      this[$scope] = this[$stack][this[$stack].length - 1]\n      this[$stack].push(command)\n      this[$caller] = command\n    }\n    return this\n  }\n\n  /**\n   * Pops tail of context command stack.\n   *\n   * @return {Context}\n   */\n\n  pop() {\n    let command = this[$stack].pop()\n    this[$caller] = this[$stack][this[$stack].length - 1]\n    this[$scope] = command\n    return command\n  }\n\n  /**\n   * Updates command context state.\n   *\n   * @param {Function|Object} block\n   * @return {Context}\n   */\n\n  update(block) {\n    if (block && 'object' == typeof block) {\n      Object.assign(this[$state], block)\n    }\n    return this\n  }\n\n  /**\n   * Resets context state.\n   *\n   * @return {Context}\n   */\n\n  reset() {\n    this[$caller] = null\n    this[$scope] = null\n    this[$stack].splice(0, this[$stack].length)\n  }\n\n  /**\n   * Clears the clear buffers in regl.\n   *\n   * @return {Context}\n   */\n\n  clear() {\n    if (this[$regl] && this[$state]) {\n      this[$regl].clear(this[$state].clear)\n    }\n    return this\n  }\n\n  /**\n   * Destroys the context and the\n   * regl context associated with it.\n   *\n   * @return {Context}\n   */\n\n  destroy() {\n    this.clear()\n\n    if (this[$regl] && 'function' == typeof this[$regl].destroy) {\n      this[$regl].destroy()\n    }\n\n    this[$state] = {}\n    this[$stack] = []\n    this[$hasFocus] = false\n\n    delete this[$regl]\n    delete this[$scope]\n    delete this[$caller]\n    delete this[$domElement]\n    delete this[$reglContext]\n    return this\n  }\n}\n"
  },
  {
    "__docId__": 32,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "defaults",
    "memberof": "src/context.js",
    "longname": "src/context.js~defaults",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/context.js",
    "importStyle": "{defaults}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Context",
    "memberof": "src/context.js",
    "longname": "src/context.js~Context",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/context.js",
    "importStyle": "{Context}",
    "description": "Context class.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Context"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 34,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#constructor",
    "access": null,
    "description": "Context class constructor.",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "Objects"
        ],
        "spread": false,
        "optional": true,
        "name": "initialState",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 35,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "reglContext",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#reglContext",
    "access": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 36,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "domElement",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#domElement",
    "access": null,
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 37,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "hasFocus",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#hasFocus",
    "access": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 38,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "caller",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#caller",
    "access": null,
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 39,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "scope",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#scope",
    "access": null,
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "depth",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#depth",
    "access": null,
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 41,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "state",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#state",
    "access": null,
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 42,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "regl",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#regl",
    "access": null,
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "focus",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#focus",
    "access": null,
    "description": "Focuses context.",
    "lineNumber": 128,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 44,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "blur",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#blur",
    "access": null,
    "description": "Blurs context.",
    "lineNumber": 140,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "push",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#push",
    "access": null,
    "description": "Pushes command to context stack.",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "Command"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "pop",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#pop",
    "access": null,
    "description": "Pops tail of context command stack.",
    "lineNumber": 168,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 47,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#update",
    "access": null,
    "description": "Updates command context state.",
    "lineNumber": 182,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "block",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 48,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#reset",
    "access": null,
    "description": "Resets context state.",
    "lineNumber": 195,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#clear",
    "access": null,
    "description": "Clears the clear buffers in regl.",
    "lineNumber": 207,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 50,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "destroy",
    "memberof": "src/context.js~Context",
    "longname": "src/context.js~Context#destroy",
    "access": null,
    "description": "Destroys the context and the\nregl context associated with it.",
    "lineNumber": 221,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Context"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 51,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controller/abstract-controller.js",
    "memberof": null,
    "longname": "src/controller/abstract-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Quaternion, Vector } from '../math'\nimport { Command } from '../command'\nimport { define } from '../utils'\nimport vec3 from 'gl-vec3'\nimport quat from 'gl-quat'\n\n//\n// Static vectors used for reference in\n// quaternion axis rotations.\n//\nconst XVECTOR = new Vector(1, 0, 0)\nconst YVECTOR = new Vector(0, 1, 0)\nconst ZVECTOR = new Vector(0, 0, 1)\n\n/**\n * AbstractControllerCommand class.\n *\n * @public\n * @abstract\n * @class AbstractControllerCommand\n * @extends Command\n */\n\nexport class AbstractControllerCommand extends Command {\n  constructor(ctx, {\n    interpolationFactor = 1,\n    orientation = new Vector(0, 0, 0),\n    rotation = new Quaternion(),\n    update = (_, f) => f(void 0),\n    source = null,\n    sloppy = false, // @TODO(werle) - find a better name for this\n  } = {}) {\n    const slerp = (...args) => {\n      if (sloppy) {\n        Quaternion.sloppySlerpTargetFromAxisAngles(...args)\n      } else {\n        Quaternion.slerpTargetFromAxisAngles(...args)\n      }\n    }\n\n    super((_, state, block) => {\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      state = state || {}\n      block = block || function() {}\n\n      if ('interpolationFactor' in state) {\n        interpolationFactor = state.interpolationFactor\n      }\n\n      if ('orientation' in state) {\n        Object.assign(orientation, state.orientation)\n      }\n\n      if ('update' in state) {\n        update = state.update\n      }\n\n      if ('source' in state) {\n        source = state.source\n      }\n\n      if ('sloppy' in state) {\n        sloppy = state.sloppy\n      }\n\n      // slerp rotation quaternion from orientation\n      // angles and a given interpolation factor\n      slerp(rotation, orientation, interpolationFactor)\n      update({\n        ...state,\n        interpolationFactor,\n        orientation,\n        rotation,\n        source,\n        sloppy,\n      }, block)\n    })\n  }\n}\n"
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "XVECTOR",
    "memberof": "src/controller/abstract-controller.js",
    "longname": "src/controller/abstract-controller.js~XVECTOR",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/controller/abstract-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "src/math.js~Vector"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "YVECTOR",
    "memberof": "src/controller/abstract-controller.js",
    "longname": "src/controller/abstract-controller.js~YVECTOR",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/controller/abstract-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "src/math.js~Vector"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ZVECTOR",
    "memberof": "src/controller/abstract-controller.js",
    "longname": "src/controller/abstract-controller.js~ZVECTOR",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/controller/abstract-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "src/math.js~Vector"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AbstractControllerCommand",
    "memberof": "src/controller/abstract-controller.js",
    "longname": "src/controller/abstract-controller.js~AbstractControllerCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/controller/abstract-controller.js",
    "importStyle": "{AbstractControllerCommand}",
    "description": "AbstractControllerCommand class.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AbstractControllerCommand"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 56,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controller/abstract-controller.js~AbstractControllerCommand",
    "longname": "src/controller/abstract-controller.js~AbstractControllerCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "optional": true,
        "types": [
          "{\"interpolationFactor\": *, \"orientation\": *, \"rotation\": *, \"update\": *, \"source\": *, \"sloppy\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 57,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controller/ambisonic-audio/index.js",
    "memberof": null,
    "longname": "src/controller/ambisonic-audio/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Omnitone as omnitone } from 'omnitone'\nimport defaultAudioContext from 'audio-context'\nimport clamp from 'clamp'\nimport quat from 'gl-quat'\nimport vec3 from 'gl-vec3'\nimport mat3 from 'gl-mat3'\nimport raf from 'raf'\n\nimport {\n  XVector3,\n  YVector3,\n  ZVector3,\n} from '../../math/vector'\n\nimport {\n  Quaternion,\n  Vector,\n} from '../../math'\n\nimport { AbstractControllerCommand } from '../abstract-controller'\nimport { define, radians } from '../../utils'\n\n/**\n * AmbisonicAudioControllerCommand function.\n *\n * @see AmbisonicAudioControllerCommand\n */\n\nmodule.exports = exports = (...args) => new AmbisonicAudioControllerCommand(...args)\n\n/**\n * AmbisonicAudioControllerCommand class\n *\n * @public\n * @class AmbisonicAudioControllerCommand\n * @extends AbstractControllerCommand\n */\n\nexport class AmbisonicAudioControllerCommand extends AbstractControllerCommand {\n  constructor(ctx, {\n    audioContext = defaultAudioContext,\n    media = null,\n  } = {}) {\n    let isFoaDecoderInitialized = false\n    let foaDecoder = null\n\n    const {regl} = ctx\n    const injectContext = regl({\n      context: {\n        foaDecoder: () => foaDecoder,\n        audioContext: ({audioContext: currentAudioContext}) => {\n          return currentAudioContext || audioContext\n        },\n      }\n    })\n\n    super(ctx)\n\n    audio && audio.on('load', () => {\n      const source = this.source\n\n      if (!audio || !source) {\n        // @TODO(werle) - log error\n        return\n      } else if (null != foaDecoder) {\n        // @TODO(werle) - log error\n        return\n      }\n\n      foaDecoder = omnitone.createFOADecoder(\n        audioContext,\n        audio.domElement,\n        Object.assign({ channelMap: [0, 1, 2, 3] }, opts)\n      )\n\n      foaDecoder.initialize()\n      .then(() => { isFoaDecoderInitialized = true })\n      .catch((err) => { emit('error', err) })\n\n      let foaDecoderLoopFrame = null\n      let foaDecoderLoop = () => {\n        if (foaDecoderLoopFrame) {\n          foaDecoderLoopFrame = raf(foaDecoderLoop)\n        }\n\n        const mat = []\n        mat3.fromQuat(mat, source.rotation)\n        mat3.translate(mat, mat, vec3.negate([], audio.position))\n        foaDecoder.setRotationMatrix(mat)\n      }\n\n      audio.on('playing', () => {\n        if (foaDecoderLoopFrame) {\n          raf.cancel(foaDecoderLoopFrame)\n          foaDecoderLoopFrame = null\n        }\n\n        foaDecoderLoopFrame = raf(foaDecoderLoop)\n      })\n\n      audio.on('pause', () => {\n        if (foaDecoderLoopFrame) {\n          raf.cancel(foaDecoderLoopFrame)\n          foaDecoderLoopFrame = null\n        }\n      })\n    })\n  }\n}\n"
  },
  {
    "__docId__": 58,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AmbisonicAudioControllerCommand",
    "memberof": "src/controller/ambisonic-audio/index.js",
    "longname": "src/controller/ambisonic-audio/index.js~AmbisonicAudioControllerCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/controller/ambisonic-audio/index.js",
    "importStyle": "{AmbisonicAudioControllerCommand}",
    "description": "AmbisonicAudioControllerCommand class",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AmbisonicAudioControllerCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 59,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controller/ambisonic-audio/index.js~AmbisonicAudioControllerCommand",
    "longname": "src/controller/ambisonic-audio/index.js~AmbisonicAudioControllerCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "optional": true,
        "types": [
          "{\"audioContext\": *, \"media\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 60,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controller/index.js",
    "memberof": null,
    "longname": "src/controller/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport { AbstractControllerCommand } from './abstract-controller'\nexport AmbisonicAudioController from './ambisonic-audio'\nexport OrbitCameraController from './orbit-camera'\n"
  },
  {
    "__docId__": 61,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controller/orbit-camera/index.js",
    "memberof": null,
    "longname": "src/controller/orbit-camera/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport clamp from 'clamp'\nimport quat from 'gl-quat'\nimport vec3 from 'gl-vec3'\n\nimport { AbstractControllerCommand } from '../abstract-controller'\nimport applyOrientationInput from './orientation'\nimport applyKeyboardInput from './keyboard'\nimport { lerp, radians } from '../../utils'\nimport applyMouseInput from './mouse'\nimport applyTouchInput from './touch'\n\nexport const DEFAULT_FRICTION = 0.68\n\n/**\n * OrbitCameraController function.\n *\n * @see OrbitCameraController\n */\n\nmodule.exports = exports = (...args) => new OrbitCameraController(...args)\n\n/**\n * OrbitCameraController class\n *\n * @public\n * @class OrbitCameraController\n * @extends AbstractControllerCommand\n */\n\nexport class OrbitCameraController extends AbstractControllerCommand {\n\n  /**\n   * OrbitCameraController class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} opts\n   */\n\n  constructor(ctx, opts = {}) {\n    let {\n      camera,\n      inputs = {},\n    } = opts\n    super(ctx, {\n      ...opts,\n      update({\n        interpolationFactor,\n        orientation,\n        rotation = camera.rotation,\n        position = camera.position,\n        friction = opts.friction || DEFAULT_FRICTION,\n        target = camera.target,\n        invert = opts.invert,\n        scale = camera.scale,\n        zoom = opts.zoom || true,\n      } = {}, block) {\n        if (zoom && true === zoom.fov) {\n          zoom.fov = camera.fov\n        } else if (zoom && 'number' != typeof zoom.fov) {\n          delete zoom.fov\n        }\n\n        if (ctx.hasFocus) {\n          // supported inputs\n          const {\n            orientation: orientationInput,\n            keyboard: keyboardInput,\n            mouse: mouseInput,\n            touch: touchInput,\n          } = inputs\n\n\n          friction = clamp(friction, 0, 1)\n\n          keyboardInput && applyKeyboardInput({\n            keyboardInput,\n            orientation,\n            friction,\n          })\n\n          mouseInput && applyMouseInput({\n            orientation,\n            mouseInput,\n            position,\n            friction,\n            invert,\n            camera,\n            zoom,\n          })\n\n          touchInput && applyTouchInput({\n            orientation,\n            touchInput,\n            friction,\n            invert,\n            camera,\n            zoom,\n          })\n\n          // @TODO(werle) -\n          // * device orientation\n          // * webvr\n          // * joystick\n        }\n\n        let fov = camera.fov\n        if (zoom && zoom.fov) {\n          fov = clamp(zoom.fov, radians(1.1) , radians(120))\n        }\n        // clamp at north/south poles\n        orientation[0] = clamp(orientation[0], radians(-90), radians(90))\n        camera({fov, rotation, position, target}, () => {\n          block()\n        })\n      }\n    })\n  }\n}\n"
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_FRICTION",
    "memberof": "src/controller/orbit-camera/index.js",
    "longname": "src/controller/orbit-camera/index.js~DEFAULT_FRICTION",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/controller/orbit-camera/index.js",
    "importStyle": "{DEFAULT_FRICTION}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "OrbitCameraController",
    "memberof": "src/controller/orbit-camera/index.js",
    "longname": "src/controller/orbit-camera/index.js~OrbitCameraController",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/controller/orbit-camera/index.js",
    "importStyle": "{OrbitCameraController}",
    "description": "OrbitCameraController class",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "OrbitCameraController"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 64,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controller/orbit-camera/index.js~OrbitCameraController",
    "longname": "src/controller/orbit-camera/index.js~OrbitCameraController#constructor",
    "access": null,
    "description": "OrbitCameraController class constructor.",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 65,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controller/orbit-camera/keyboard.js",
    "memberof": null,
    "longname": "src/controller/orbit-camera/keyboard.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { radians } from '../../utils'\n\n/**\n * Applies orientation changes to orbit orbitCamera from\n * keyboard input\n *\n * @param {Object} opts\n * @param {OrbitorbitCameraController} orbitCamera\n * @param {KeyboardCommand} keyboard\n */\n\nmodule.exports = exports = ({\n  keyboardInput: keyboard,\n  orientation,\n  friction,\n} = {}) => {\n  keyboard && keyboard(({mappings}) => {\n    let dx = 0\n    let dy = 0\n    let c = 0.02\n    const step = c/friction\n\n    // @TODO(werle) - should we reset keyboard state ?\n    if (mappings.value('control')) {\n      return\n    }\n\n    if (mappings.value('up')) {\n      dx = dx + step\n      orientation[0] -= 0.9*step\n      mappings.off('down')\n    } else if (mappings.value('down')) {\n      dx = dx - step\n      orientation[0] += 0.9*step\n      mappings.off('up')\n    }\n\n    if (mappings.value('left')) {\n      dy = dy + step\n      orientation[1] -= step\n      mappings.off('right')\n    } else if (mappings.value('right')) {\n      dy = dy - step\n      orientation[1] += step\n      mappings.off('left')\n    }\n\n    c = 0.25\n    dx *= c\n    dy *= c\n\n    if (dx) { orientation[0] += dx }\n    if (dy) { orientation[1] += dy }\n  })\n}\n"
  },
  {
    "__docId__": 66,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controller/orbit-camera/mouse.js",
    "memberof": null,
    "longname": "src/controller/orbit-camera/mouse.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport clamp from 'clamp'\n\n/**\n * Local friction applied to rotations around\n * the x axis for mouse inputs.\n */\n\nconst X_AXIS_MOUSE_FRICTION = 0.0033\n\n/**\n * Local friction applied to rotations around\n * the y axis for mouse inputs.\n */\n\nconst Y_AXIS_MOUSE_FRICTION = 0.004\n\n/**\n * Applies orientation changes to orbit orbitCamera from\n * mouse input\n *\n */\n\nmodule.exports = exports = ({\n  mouseInput: mouse,\n  orientation,\n  position,\n  friction,\n  invert = false,\n  zoom = true,\n} = {}) => {\n  // update orientation from coordinates\n  mouse && mouse(({\n    buttons,\n    deltaX: dx,\n    deltaY: dy,\n  }) => {\n    const xf = 0.001\n    const yf = 0.0012\n\n    // update if a singled button is pressed\n    if (1 == buttons && (dy || dx)) {\n      orientation[0] += ((false == invert ? 1 : -1)*xf*dy)/(friction || 0.01)\n      orientation[1] += ((false == invert ? 1 : -1)*yf*dx)/(friction || 0.01)\n    }\n  })\n\n  // update field of view from mouse wheel\n  mouse && mouse(({wheel}) => {\n    const c = 0.033\n    const dv = c*friction*wheel.deltaY\n    if (zoom && 'number' == typeof zoom.fov) {\n      zoom.fov = (zoom.fov || 0) + dv\n    } else if (false !== zoom) {\n      position[2] = clamp(position[2] + dv, 0, Infinity)\n    }\n  })\n}\n"
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "X_AXIS_MOUSE_FRICTION",
    "memberof": "src/controller/orbit-camera/mouse.js",
    "longname": "src/controller/orbit-camera/mouse.js~X_AXIS_MOUSE_FRICTION",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/controller/orbit-camera/mouse.js",
    "importStyle": null,
    "description": "Local friction applied to rotations around\nthe x axis for mouse inputs.",
    "lineNumber": 14,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Y_AXIS_MOUSE_FRICTION",
    "memberof": "src/controller/orbit-camera/mouse.js",
    "longname": "src/controller/orbit-camera/mouse.js~Y_AXIS_MOUSE_FRICTION",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/controller/orbit-camera/mouse.js",
    "importStyle": null,
    "description": "Local friction applied to rotations around\nthe y axis for mouse inputs.",
    "lineNumber": 21,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controller/orbit-camera/orientation.js",
    "memberof": null,
    "longname": "src/controller/orbit-camera/orientation.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { radians } from '../../utils'\n\n/**\n * Applies orientation changes to OrbitCameraController from\n * orientation input\n */\n\nmodule.exports = exports = ({\n} = {}) => {\n  // @TODO(werle)\n}\n"
  },
  {
    "__docId__": 70,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controller/orbit-camera/touch.js",
    "memberof": null,
    "longname": "src/controller/orbit-camera/touch.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { radians } from '../../utils'\nimport clamp from 'clamp'\n\nmodule.exports = exports = ({\n  touchInput: touch,\n  orientation,\n  friction = 1,\n    invert = false,\n} = {}) => {\n  touch(({\n    hasTouch,\n    deltaX: dx,\n    deltaY: dy,\n  }) => {\n    const z = 0.003\n    if (hasTouch) {\n      orientation[0] += ((false == invert ? 1 : -1)*(0.75*z)*dy)/(friction || 0.01)\n      orientation[1] += ((false == invert ? 1 : -1)*z*dx)/(friction || 0.01)\n    }\n  })\n}\n"
  },
  {
    "__docId__": 71,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/extra/fullscreen.js",
    "memberof": null,
    "longname": "src/extra/fullscreen.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\n/**\n * Module dependencies.\n */\n\nimport { Command } from './command'\nimport fullscreen from 'fullscreen'\n\n/**\n * FullscreenCommand constructor.\n * @see FullscreenCommand\n */\n\nmodule.exports = exports = (...args) => new FullscreenCommand(...args)\n\n/**\n * Fullscreen class.\n *\n * @public\n * @class FullscreenComand\n * @extends Command\n */\n\nexport class FullscreenCommand extends Command {\n\n  /**\n   * FullscreenCommand class constructor that toggles\n   * fullscreen view\n   *\n   * @constructor\n   * @param {Object} ctx\n   * @param {Object} [opts]\n   */\n\n  constructor(ctx) {\n    // set fullscreen to target canvas element\n    const fs = fullscreen(ctx.domElement)\n\n    // toggle fullscreen\n    super((_, {enabled}) => {\n      if (enabled) {\n        fs.request()\n      } else {\n        fs.release()\n      }\n    })\n  }\n}\n"
  },
  {
    "__docId__": 72,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FullscreenCommand",
    "memberof": "src/extra/fullscreen.js",
    "longname": "src/extra/fullscreen.js~FullscreenCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/extra/fullscreen.js",
    "importStyle": "{FullscreenCommand}",
    "description": "Fullscreen class.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "FullscreenComand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 73,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/extra/fullscreen.js~FullscreenCommand",
    "longname": "src/extra/fullscreen.js~FullscreenCommand#constructor",
    "access": null,
    "description": "FullscreenCommand class constructor that toggles\nfullscreen view",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 74,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/frame.js",
    "memberof": null,
    "longname": "src/frame.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { $reglContext } from './symbols'\nimport { Command } from './command'\nimport { define } from './utils'\nimport glslify from 'glslify'\n\nconst vert = glslify(__dirname + '/glsl/frame/vert.glsl')\nconst frag = glslify(__dirname + '/glsl/frame/frag.glsl')\n\n/**\n * FrameCommand constructor.\n * @see FrameCommand\n */\n\nmodule.exports = exports = (...args) => new FrameCommand(...args)\n\n/**\n * FrameCommand class.\n *\n * @public\n * @class FrameCommand\n * @extends Command\n */\n\nexport class FrameCommand extends Command {\n\n  /**\n   * FrameCommand class constructor.\n   *\n   * @param {Context} ctx\n   */\n\n  constructor(ctx, opts = {}) {\n    const {regl} = ctx\n    const queue = []\n\n    const texture = regl.texture()\n    let reglContext = null\n    let isRunning = false\n    let tick = null\n\n    const injectContext = regl({\n      context: {\n        resolution: ({viewportWidth: w, viewportHeight: h}) => ([w, h]),\n      }\n    })\n\n    super((_, refresh) => {\n      queue.push(refresh)\n      frame()\n      return cancel\n    })\n\n    //\n    // cancels regl animation frame loop,\n    // resets state, and removes the caputured\n    // regl context from the axis context\n    //\n    function cancel() {\n      if (tick) {\n        queue.splice(0, -1)\n        tick.cancel()\n        ctx[$reglContext] =\n        reglContext =\n        tick = null\n      }\n    }\n\n    //\n    // Function to handle regl animation\n    // frame loop logic that captures the regl context\n    // and stores it on the axis context. It also\n    // clears the drawing canvas, resets the axis context,\n    // and calls all queued frame refresh functions\n    //\n    function frame() {\n      if (false == isRunning) {\n        isRunning = true\n        tick = regl.frame((_, ...args) => {\n          reglContext = _\n          ctx[$reglContext] = reglContext\n          const {\n            viewportWidth: width,\n            viewportHeight: height,\n          } = reglContext\n\n          try {\n            injectContext((_) => {\n              // clear\n              ctx.reset()\n              ctx.clear()\n\n              // draw\n              for (let refresh of queue) {\n                if ('function' == typeof refresh) {\n                  refresh(reglContext, ...args)\n                }\n              }\n\n            })\n\n          } catch (e) {\n            ctx.emit('error', e)\n            cancel()\n          }\n        })\n      }\n    }\n  }\n}\n"
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "vert",
    "memberof": "src/frame.js",
    "longname": "src/frame.js~vert",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/frame.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "frag",
    "memberof": "src/frame.js",
    "longname": "src/frame.js~frag",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/frame.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FrameCommand",
    "memberof": "src/frame.js",
    "longname": "src/frame.js~FrameCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/frame.js",
    "importStyle": "{FrameCommand}",
    "description": "FrameCommand class.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "FrameCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 78,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/frame.js~FrameCommand",
    "longname": "src/frame.js~FrameCommand#constructor",
    "access": null,
    "description": "FrameCommand class constructor.",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 79,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/gbuffer.js",
    "memberof": null,
    "longname": "src/gbuffer.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport injectDefines from 'glsl-inject-defines'\nimport { Command } from './command'\nimport { Vector } from './math/vector'\nimport glslify from 'glslify'\n\nconst frag = glslify(__dirname + '/glsl/gbuffer/frag.glsl')\n\nmodule.exports = exports = (...args) => new GBufferComand(...args)\n\nexport class GBufferComand extends Command {\n  constructor(ctx, {fbo = null} = {}) {\n    const {regl} = ctx\n\n    if (!regl.hasExtension('webgl_draw_buffers')) {\n      throw new Error(\"GbufferCommand needs the 'webgl_draw_buffers' extension.\")\n    }\n\n    fbo = fbo || regl.framebuffer({\n      color: [\n        regl.texture({type: 'float'}), // albedo\n        regl.texture({type: 'float'}), // normal\n        regl.texture({type: 'float'}) // position\n      ]\n    })\n\n    const defines = {}\n\n    if (fbo.color && fbo.color[0]) {\n      defines.HAS_ALBEDO = ''\n    }\n\n    if (fbo.color && fbo.color[1]) {\n      defines.HAS_NORMALS = ''\n    }\n\n    if (fbo.color && fbo.color[2]) {\n      defines.HAS_POSITIONS = ''\n    }\n\n    const captureGeometryBuffer = regl({\n      framebuffer: fbo,\n      frag: injectDefines(frag, defines),\n    })\n\n    let viewportHeight = 0\n    let viewportWidth = 0\n    super((_, block, scope) => {\n      let needsResize = false\n\n      if ('function' == typeof block) {\n        scope = block\n        block = {}\n      }\n\n      block = block || {}\n      scope = scope || (() => void 0)\n\n      if (viewportWidth != ctx.reglContext.viewportWidth) {\n        viewportWidth = ctx.reglContext.viewportWidth\n        needsResize = true\n      }\n\n      if (viewportHeight != ctx.reglContext.viewportHeight) {\n        viewportHeight = ctx.reglContext.viewportHeight\n        needsResize = true\n      }\n\n      if (needsResize) {\n        try { fbo.resize(viewportWidth, viewportHeight) }\n        catch(e) {console.error(e)}\n      }\n\n      captureGeometryBuffer((...args) => {\n        ctx.clear()\n        scope(...args)\n      })\n    })\n  }\n}\n"
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "frag",
    "memberof": "src/gbuffer.js",
    "longname": "src/gbuffer.js~frag",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/gbuffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "GBufferComand",
    "memberof": "src/gbuffer.js",
    "longname": "src/gbuffer.js~GBufferComand",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/gbuffer.js",
    "importStyle": "{GBufferComand}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/command.js~Command"
    ]
  },
  {
    "__docId__": 82,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/gbuffer.js~GBufferComand",
    "longname": "src/gbuffer.js~GBufferComand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "optional": true,
        "types": [
          "{\"fbo\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 83,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/geometry/box.js",
    "memberof": null,
    "longname": "src/geometry/box.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport PrimitiveBox from 'geo-3d-box'\nimport { Geometry } from './geometry'\n\n/**\n * BoxGeometry class.\n *\n * @public\n * @class BoxGeometry\n * @extends Geometry\n * @see https://www.npmjs.com/package/geo-3d-box\n */\n\nexport class BoxGeometry extends Geometry {\n\n  /**\n   * BoxGeometry class constructor.\n   *\n   * @param {Object} opts\n   * @param {Number} opts.size\n   * @param {Number} opts.segments\n   * @param {Object} primitive\n   */\n\n  constructor({size = 1, segments = 2} = {}, primitive) {\n    primitive = primitive || PrimitiveBox({size, segments})\n    super({size, segments, primitive})\n  }\n\n  /**\n   * Updates BoxGeometry state\n   *\n   * @return {BoxGeometry}\n   */\n\n  update() {\n    const segments = this.segments\n    const size = this.size\n    this.primitive = PrimitiveBox({size, segments})\n    return this\n  }\n}\n"
  },
  {
    "__docId__": 84,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BoxGeometry",
    "memberof": "src/geometry/box.js",
    "longname": "src/geometry/box.js~BoxGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/geometry/box.js",
    "importStyle": "{BoxGeometry}",
    "description": "BoxGeometry class.",
    "see": [
      "https://www.npmjs.com/package/geo-3d-box"
    ],
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "BoxGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 85,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/geometry/box.js~BoxGeometry",
    "longname": "src/geometry/box.js~BoxGeometry#constructor",
    "access": null,
    "description": "BoxGeometry class constructor.",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.size",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "primitive",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 86,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/geometry/box.js~BoxGeometry",
    "longname": "src/geometry/box.js~BoxGeometry#update",
    "access": null,
    "description": "Updates BoxGeometry state",
    "lineNumber": 41,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "BoxGeometry"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 87,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "primitive",
    "memberof": "src/geometry/box.js~BoxGeometry",
    "longname": "src/geometry/box.js~BoxGeometry#primitive",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/geometry/capsule.js",
    "memberof": null,
    "longname": "src/geometry/capsule.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": ""
  },
  {
    "__docId__": 89,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/geometry/geometry.js",
    "memberof": null,
    "longname": "src/geometry/geometry.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport Wireframe from 'screen-projected-lines'\nimport normals from 'angle-normals'\n\nexport class Geometry {\n  constructor(initialState) {\n    Object.assign(this, initialState || {})\n    this.primitive = this.primitive || null\n    this.wireframe = null == this.primitive ? null : Wireframe(this.primitive, {\n      attributes: {\n        normals: normals(\n          this.primitive.cells,\n          this.primitive.positions\n        )\n      }\n    })\n\n    if (this.wireframe) {\n      this.wireframe.normals = this.wireframe.attributes.normals\n    }\n  }\n\n  /**\n   * An array of position values sourced from\n   * the geometry primitive.\n   */\n\n  get positions() {\n    return this.primitive ? this.primitive.positions : null\n  }\n\n  /**\n   * An array of normal values sourced from\n   * the geometry primitive.\n   */\n\n  get normals() {\n    return this.primitive ? this.primitive.normals : null\n  }\n\n  /**\n   * An array of uv values sourced from\n   * the geometry primitive.\n   */\n\n  get uvs() {\n    return this.primitive ? this.primitive.uvs : null\n  }\n\n  /**\n   * An array of cell values sourced from\n   * the geometry primitive.\n   */\n\n  get cells() {\n    return this.primitive ? this.primitive.cells : null\n  }\n\n  /**\n   * Abstract update method to be overloaded\n   */\n\n  update() {\n    return this\n  }\n}\n"
  },
  {
    "__docId__": 90,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Geometry",
    "memberof": "src/geometry/geometry.js",
    "longname": "src/geometry/geometry.js~Geometry",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/geometry/geometry.js",
    "importStyle": "{Geometry}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 91,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/geometry/geometry.js~Geometry",
    "longname": "src/geometry/geometry.js~Geometry#constructor",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "initialState",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 92,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "primitive",
    "memberof": "src/geometry/geometry.js~Geometry",
    "longname": "src/geometry/geometry.js~Geometry#primitive",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "wireframe",
    "memberof": "src/geometry/geometry.js~Geometry",
    "longname": "src/geometry/geometry.js~Geometry#wireframe",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "positions",
    "memberof": "src/geometry/geometry.js~Geometry",
    "longname": "src/geometry/geometry.js~Geometry#positions",
    "access": null,
    "description": "An array of position values sourced from\nthe geometry primitive.",
    "lineNumber": 33,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 95,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "normals",
    "memberof": "src/geometry/geometry.js~Geometry",
    "longname": "src/geometry/geometry.js~Geometry#normals",
    "access": null,
    "description": "An array of normal values sourced from\nthe geometry primitive.",
    "lineNumber": 42,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 96,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "uvs",
    "memberof": "src/geometry/geometry.js~Geometry",
    "longname": "src/geometry/geometry.js~Geometry#uvs",
    "access": null,
    "description": "An array of uv values sourced from\nthe geometry primitive.",
    "lineNumber": 51,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 97,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "cells",
    "memberof": "src/geometry/geometry.js~Geometry",
    "longname": "src/geometry/geometry.js~Geometry#cells",
    "access": null,
    "description": "An array of cell values sourced from\nthe geometry primitive.",
    "lineNumber": 60,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 98,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/geometry/geometry.js~Geometry",
    "longname": "src/geometry/geometry.js~Geometry#update",
    "access": null,
    "description": "Abstract update method to be overloaded",
    "lineNumber": 68,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 99,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/geometry/index.js",
    "memberof": null,
    "longname": "src/geometry/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport { TriangleGeometry } from './sphere'\nexport { SphereGeometry } from './sphere'\nexport { PlaneGeometry } from './plane'\nexport { BoxGeometry } from './box'\nexport { Geometry } from './geometry'\n"
  },
  {
    "__docId__": 100,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/geometry/plane.js",
    "memberof": null,
    "longname": "src/geometry/plane.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport PrimitivePlane from 'primitive-plane'\nimport { Geometry } from './geometry'\n\n/**\n * PlaneGeometry class.\n *\n * @public\n * @class PlaneGeometry\n * @extends Geometry\n * @see https://www.npmjs.com/package/primitive-plane\n */\n\nexport class PlaneGeometry extends Geometry {\n\n  /**\n   * PlaneGeometry class constructor.\n   *\n   * @param {Object} opts\n   * @param {Object} opts.size\n   * @param {Number} opts.size.x\n   * @param {Number} opts.size.y\n   * @param {Object} opts.segments\n   * @param {Number} opts.segments.x\n   * @param {Number} opts.segments.y\n   * @param {Object} primitive\n   */\n\n  constructor({size = {x : 1, y: 1}, segments = {x: 1, y: 1}} = {}, primitive) {\n    primitive = primitive || PrimitivePlane(\n      size.x, size.y,\n      segments.x, segments.y,\n      { quad: false }\n    )\n    super({size, segments, primitive})\n  }\n\n  /**\n   * Updates PlaneGeometry state\n   *\n   * @return {PlaneGeometry}\n   */\n\n  update() {\n    const segments = this.segments\n    const size = this.size\n    this.primitive = PrimitivePlane({size, segments})\n    return this\n  }\n}\n"
  },
  {
    "__docId__": 101,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PlaneGeometry",
    "memberof": "src/geometry/plane.js",
    "longname": "src/geometry/plane.js~PlaneGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/geometry/plane.js",
    "importStyle": "{PlaneGeometry}",
    "description": "PlaneGeometry class.",
    "see": [
      "https://www.npmjs.com/package/primitive-plane"
    ],
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PlaneGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 102,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/geometry/plane.js~PlaneGeometry",
    "longname": "src/geometry/plane.js~PlaneGeometry#constructor",
    "access": null,
    "description": "PlaneGeometry class constructor.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.size",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.size.x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.size.y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments.x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.segments.y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "primitive",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 103,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/geometry/plane.js~PlaneGeometry",
    "longname": "src/geometry/plane.js~PlaneGeometry#update",
    "access": null,
    "description": "Updates PlaneGeometry state",
    "lineNumber": 49,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "PlaneGeometry"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 104,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "primitive",
    "memberof": "src/geometry/plane.js~PlaneGeometry",
    "longname": "src/geometry/plane.js~PlaneGeometry#primitive",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/geometry/sphere.js",
    "memberof": null,
    "longname": "src/geometry/sphere.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport PrimitiveSphere from 'primitive-sphere'\nimport { Geometry } from './geometry'\n\n/**\n * SphereGeometry class.\n *\n * @public\n * @class SphereGeometry\n * @extends Geometry\n * @see https://www.npmjs.com/package/primitive-sphere\n */\n\nexport class SphereGeometry extends Geometry {\n  constructor({radius = 1, segments = 28} = {}) {\n    const primitive = PrimitiveSphere(radius, {segments})\n    super({radius, segments, primitive})\n  }\n\n  /**\n   * Updates SphereGeometry state\n   *\n   * @return {SphereGeometry}\n   */\n\n  update() {\n    const segments = this.segments\n    const radius = this.radius\n    this.primitive = PrimitiveSphere(radius, {segments})\n    return this\n  }\n}\n"
  },
  {
    "__docId__": 106,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SphereGeometry",
    "memberof": "src/geometry/sphere.js",
    "longname": "src/geometry/sphere.js~SphereGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/geometry/sphere.js",
    "importStyle": "{SphereGeometry}",
    "description": "SphereGeometry class.",
    "see": [
      "https://www.npmjs.com/package/primitive-sphere"
    ],
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SphereGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 107,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/geometry/sphere.js~SphereGeometry",
    "longname": "src/geometry/sphere.js~SphereGeometry#constructor",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "optional": true,
        "types": [
          "{\"radius\": *, \"segments\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 108,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/geometry/sphere.js~SphereGeometry",
    "longname": "src/geometry/sphere.js~SphereGeometry#update",
    "access": null,
    "description": "Updates SphereGeometry state",
    "lineNumber": 31,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "SphereGeometry"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 109,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "primitive",
    "memberof": "src/geometry/sphere.js~SphereGeometry",
    "longname": "src/geometry/sphere.js~SphereGeometry#primitive",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/geometry/torus.js",
    "memberof": null,
    "longname": "src/geometry/torus.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": ""
  },
  {
    "__docId__": 111,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/geometry/triangle.js",
    "memberof": null,
    "longname": "src/geometry/triangle.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Geometry } from './geometry'\n\n/**\n * TriangleGeometry class.\n *\n * @public\n * @class TriangleGeometry\n * @see https://www.npmjs.com/package/primitive-sphere\n */\n\nexport class TriangleGeometry extends Geometry {\n\n  /**\n   * TriangleGeometry class constructor.\n   */\n\n  constructor() {\n    const primitive = {\n      positions: [\n        [-0.0, +0.5],\n        [+0.5, -0.5],\n        [-0.5, -0.5],\n      ],\n\n      normals: [\n        [-0.0, +1.0],\n        [+1.0, -1.0],\n        [-1.0, -1.0],\n      ],\n\n      uvs: [\n        [-0.0, +0.5],\n        [+0.5, -0.5],\n        [-0.5, -0.5],\n      ],\n    }\n\n    super({primitive})\n  }\n}\n"
  },
  {
    "__docId__": 112,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TriangleGeometry",
    "memberof": "src/geometry/triangle.js",
    "longname": "src/geometry/triangle.js~TriangleGeometry",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/geometry/triangle.js",
    "importStyle": "{TriangleGeometry}",
    "description": "TriangleGeometry class.",
    "see": [
      "https://www.npmjs.com/package/primitive-sphere"
    ],
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TriangleGeometry"
      }
    ],
    "interface": false,
    "extends": [
      "src/geometry/geometry.js~Geometry"
    ]
  },
  {
    "__docId__": 113,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/geometry/triangle.js~TriangleGeometry",
    "longname": "src/geometry/triangle.js~TriangleGeometry#constructor",
    "access": null,
    "description": "TriangleGeometry class constructor.",
    "lineNumber": 23,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 114,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/index.js",
    "memberof": null,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport { Command } from './command'\nexport GBuffer from './gbuffer'\nexport Context from './context'\nexport Camera from './camera'\nexport Frame from './frame'\n\n/*export * as Backgrounds from './backgrounds'*/\nexport * as Controller from './controller'\nexport * as Geometry from './geometry'\nexport * as Symbols from './symbols'\n/*export * as Light from './light'*/\nexport * as Utils from './utils'\nexport * as Input from './input'\nexport * as Media from './media'\nexport * as Mesh from './mesh'\nexport * as Math from './math'\n"
  },
  {
    "__docId__": 115,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/input/index.js",
    "memberof": null,
    "longname": "src/input/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport Orientation from './orientation'\nexport Keyboard from './keyboard'\nexport Mouse from './mouse'\nexport Touch from './touch'\n"
  },
  {
    "__docId__": 116,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/input/keyboard.js",
    "memberof": null,
    "longname": "src/input/keyboard.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\n'use strict'\n/**\n * Module dependencies.\n */\n\nimport { Command } from '../command'\nimport { define } from '../utils'\nimport keycode from 'keycode'\nimport events from 'dom-events'\nimport raf from 'raf'\n\n/**\n * Keyboard function.\n *\n * @see KeyboardCommand\n */\n\nmodule.exports = exports = (...args) => new KeyboardCommand(...args)\n\n/**\n * KeyboardCommand class\n *\n * @public\n * @class KeyboardCommand\n * @extends Command\n */\n\nexport class KeyboardCommand extends Command {\n\n  /**\n   * KeyboardCommand class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} [opts]\n   */\n\n  constructor(ctx, opts = {}) {\n    const keycodes = {}\n    const keys = {}\n\n    const mappings = {\n      up: ['up', 'w'],\n      down: ['down', 's'],\n      left: ['left', 'a'],\n      right: ['right', 'd'],\n      control: [\n        'control',\n        'right command', 'left command',\n        'right control', 'left control',\n        'super', 'ctrl', 'alt', 'fn',\n      ],\n\n      on(which) {\n        return this[which].map((key) => keys[key] = true)\n      },\n\n      off(which) {\n        return this[which].map((key) => keys[key] = false)\n      },\n\n      value(which) {\n        return this[which].some((key) => Boolean(keys[key]))\n      },\n    }\n\n    // update keydown states\n    events.on(document, 'keydown', (e) => {\n      if (false == ctx.hasFocus) return\n      const code = e.which || e.keyCode || e.charCode\n      if (null != code) {\n        // set key code\n        keycodes[code] = true\n        // set key name\n        keys[keycode(code)] = true\n      }\n    }, false)\n\n    // update keyup states\n    events.on(document, 'keyup', (e) => {\n      if (false == ctx.hasFocus) return\n      const code = e.which || e.keyCode || e.charCode\n      if (null != code) {\n        // set key code\n        keycodes[code] = false\n        // set key name\n        keys[keycode(code)] = false\n      }\n    }, false)\n\n    ctx.on('blur', () => { reset() })\n    super((_, state, block) => {\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      state = state || {}\n      block = block || function() {}\n      block({\n        ...state,\n        mappings,\n        keycodes,\n        keys,\n      })\n    })\n\n    function reset() {\n      for (let code in keycodes) {\n        keycodes[code] = false\n      }\n\n      for (let key in keys) {\n        keys[key] = false\n      }\n    }\n\n    //\n    // Public properties.\n    //\n    define(this, 'aliasMappings', { get: () => mappings })\n    define(this, 'keycodes', { get: () => keycodes })\n    define(this, 'keys', { get: () => keys })\n    define(this, 'isKeydown', {\n      get: () => Object.keys(keys).some((key) => keys[key])\n    })\n  }\n}\n"
  },
  {
    "__docId__": 117,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "KeyboardCommand",
    "memberof": "src/input/keyboard.js",
    "longname": "src/input/keyboard.js~KeyboardCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/input/keyboard.js",
    "importStyle": "{KeyboardCommand}",
    "description": "KeyboardCommand class",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "KeyboardCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 118,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/input/keyboard.js~KeyboardCommand",
    "longname": "src/input/keyboard.js~KeyboardCommand#constructor",
    "access": null,
    "description": "KeyboardCommand class constructor.",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 119,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/input/mouse.js",
    "memberof": null,
    "longname": "src/input/mouse.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport onMouseChange from 'mouse-change'\nimport onMouseWheel from 'mouse-wheel'\nimport { Command } from '../command'\nimport events from 'dom-events'\nimport raf from 'raf'\n\n/**\n * Mouse function.\n *\n * @see MouseCommand\n */\n\nmodule.exports = exports = (...args) => new MouseCommand(...args)\n\n/**\n * MouseCommand class.\n *\n * @public\n * @class MouseCommand\n * @extends Command\n */\n\nexport class MouseCommand extends Command {\n\n  /**\n   * MouseCommand class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} [opts]\n   */\n\n  constructor(ctx, {\n    allowWheel = true,\n    currentX = 0,\n    currentY = 0,\n    buttons = 0,\n    deltaX = 0,\n    deltaY = 0,\n    prevX = 0,\n    prevY = 0,\n  } = {}) {\n    const wheel = {\n      currentX: 0, currentY: 0,\n      deltaX: 0, deltaY: 0,\n      prevX: 0, prevY: 0,\n    }\n\n    ctx.on('blur', () => { buttons = 0 })\n\n    // focus/blur context on mouse down\n    events.on(document, 'mousedown', (e) => {\n      if (e.target == ctx.domElement) {\n        ctx.focus()\n      } else {\n        ctx.blur()\n      }\n    })\n\n    // update state on mouse change and reset\n    // delta values on next animation frame\n    onMouseChange(ctx.domElement, (b, x, y) => {\n      synchronizeMouse(b, x, y)\n    })\n\n    // update mouse wheel deltas and then\n    // reset them on the next animation frame\n    onMouseWheel(ctx.domElement, (dx, dy, dz) => {\n      if (false === allowWheel) { return }\n      Object.assign(wheel, {\n        currentX: wheel.currentX + dx,\n        currentY: wheel.currentY + dy,\n        currentZ: wheel.currentZ + dz,\n        deltaX: dx,\n        deltaY: dy,\n        deltaZ: dz,\n        prevX: wheel.currentX,\n        prevY: wheel.currentY,\n        prevZ: wheel.currentZ,\n      })\n\n      raf(() => Object.assign(wheel, {\n        deltaX: 0,\n        deltaY: 0,\n        deltaZ: 0,\n      }))\n    })\n\n    super((_, state, block) => {\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      state = state || {}\n      block = block || function() {}\n\n      if ('allowWheel' in state) { allowWheel = state.allowWheel }\n      if ('currentX' in state) { currentX = state.currentX }\n      if ('currentY' in state) { currentY = state.currentY }\n\n      synchronizeMouse(buttons, currentX, currentY)\n\n      block({\n        ...state,\n        allowWheel,\n        currentX,\n        currentY,\n        buttons,\n        deltaX,\n        deltaY,\n        prevX,\n        prevY,\n        wheel,\n      })\n    })\n\n    function synchronizeMouse(b, x, y) {\n      buttons = b\n\n      if (currentX == x && currentY == y) {\n        return\n      }\n\n      prevX = currentX\n      prevY = currentY\n      deltaX = x - currentX\n      deltaY = y - currentY\n      currentX = x\n      currentY = y\n\n      raf(() => {\n        deltaX = 0\n        deltaY = 0\n      })\n    }\n  }\n}\n"
  },
  {
    "__docId__": 120,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MouseCommand",
    "memberof": "src/input/mouse.js",
    "longname": "src/input/mouse.js~MouseCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/input/mouse.js",
    "importStyle": "{MouseCommand}",
    "description": "MouseCommand class.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MouseCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 121,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/input/mouse.js~MouseCommand",
    "longname": "src/input/mouse.js~MouseCommand#constructor",
    "access": null,
    "description": "MouseCommand class constructor.",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 122,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/input/orientation.js",
    "memberof": null,
    "longname": "src/input/orientation.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Quaternion } from '../math'\nimport { Command } from '../command'\nimport events from 'dom-events'\nimport quat from 'gl-quat'\nimport raf from 'raf'\n\nimport {\n  getScreenOrientation,\n  radians,\n  define,\n} from '../utils'\n\n//\n// Global orientation state object.\n//\nconst globalState = {\n  hasDeviceOrientation: false,\n  absolute: null,\n\n  currentAlpha: 0, // z\n  currentBeta: 0, // x\n  currentGamma: 0, // y\n\n  deltaAlpha: 0,\n  deltaBeta: 0,\n  deltaGamma: 0,\n\n  prevAlpha: 0,\n  prevBeta: 0,\n  prevGamma: 0,\n}\n\n// update global device orientation state\nevents.on(window, 'deviceorientation', (e) => {\n  // ZXY\n  const { alpha, beta, gamma, absolute } = e\n\n  if (alpha && beta && gamma) {\n    global.hasDeviceOrientation = true\n  }\n\n  if (false == global.hasDeviceOrientation) {\n    return\n  }\n\n  Object.assign(globalState, {\n    absolute,\n\n    currentAlpha: alpha,\n    currentBeta: beta,\n    currentGamma: gamma,\n\n    deltaAlpha: alpha - globalState.currentAlpha,\n    deltaBeta: beta - globalState.currentBeta,\n    deltaGamma: gamma - globalState.currentGamma,\n\n    prevAlpha: globalState.currentAlpha,\n    prevBeta: globalState.currentBeta,\n    prevGamma: globalState.currentGamma,\n  })\n\n  raf(() => Object.assign(globalState, {\n    deltaAlpha: 0,\n    deltaBeta: 0,\n    deltaGamma: 0,\n  }))\n})\n\n/**\n * Orientation function.\n *\n * @see OrientationCommand\n */\n\nmodule.exports = exports = (...args) => new OrientationCommand(...args)\n\n/**\n * OrientationCommand class\n *\n * @public\n * @class OrientationCommand\n * @extends Command\n */\n\nexport class OrientationCommand extends Command {\n\n  /**\n   * OrientationCommand class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} [opts]\n   */\n\n  constructor(ctx, {\n  } = {}) {\n    const deviceOrientation = new Quaternion()\n    const screenTransform = new Quaternion()\n    const deviceRotation = new Quaternion()\n\n    super((_, state, block) => {\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      state = state || {}\n      block = block || function() {}\n\n      computeDeviceRotation()\n\n      const {\n        absolute = null,\n        currentAlpha = 0,\n        currentBeta = 0,\n        currentGamma = 0,\n        deltaAlpha = 0,\n        deltaBeta = 0,\n        deltaGamma = 0,\n        prevAlpha = 0,\n        prevBeta = 0,\n        prevGamma = 0,\n      } = globalState\n\n      block({\n        absolute,\n        currentAlpha,\n        currentBeta,\n        currentGamma,\n        deltaAlpha,\n        deltaBeta,\n        deltaGamma,\n        prevAlpha,\n        prevBeta,\n        prevGamma,\n        rotation: deviceRotation,\n      })\n    })\n\n    function computeDeviceRotation() {\n      // borrowed from https://github.com/hawksley/eleVR-Web-Player/blob/master/js/phonevr.js\n      const {\n        currentAlpha,\n        currentBeta,\n        currentGamma\n      } = globalState\n\n      const screenOrientation = 0.5*radians(getScreenOrientation())\n      const z = 0.5*radians(currentAlpha)\n      const x = 0.5*radians(currentBeta)\n      const y = 0.5*radians(currentGamma)\n      const cX = Math.cos(x)\n      const cY = Math.cos(y)\n      const cZ = Math.cos(z)\n      const sX = Math.sin(x)\n      const sY = Math.sin(y)\n      const sZ = Math.sin(z)\n\n      deviceOrientation.set(\n        (cX * cY * cZ - sX * sY * sZ),\n        (sX * cY * cZ - cX * sY * sZ),\n        (cX * sY * cZ + sX * cY * sZ),\n        (cX * cY * sZ + sX * sY * cZ)\n      )\n\n      screenTransform.set(\n        0,\n        0,\n        -Math.sin(screenTransform),\n        Math.cos(screenTransform)\n      )\n\n      quat.multiply(\n        deviceRotation,\n        deviceOrientation,\n        screenTransform)\n\n      // @see https://github.com/hawksley/eleVR-Web-Player/blob/master/js/phonevr.js#L53\n      const r22 = Math.sqrt(0.5);\n      quat.multiply(\n        deviceRotation,\n        quat.fromValues(-r22, 0, 0, r22),\n        deviceRotation);\n    }\n }\n}\n"
  },
  {
    "__docId__": 123,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "globalState",
    "memberof": "src/input/orientation.js",
    "longname": "src/input/orientation.js~globalState",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/input/orientation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "OrientationCommand",
    "memberof": "src/input/orientation.js",
    "longname": "src/input/orientation.js~OrientationCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/input/orientation.js",
    "importStyle": "{OrientationCommand}",
    "description": "OrientationCommand class",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "OrientationCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 125,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/input/orientation.js~OrientationCommand",
    "longname": "src/input/orientation.js~OrientationCommand#constructor",
    "access": null,
    "description": "OrientationCommand class constructor.",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 126,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/input/touch.js",
    "memberof": null,
    "longname": "src/input/touch.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { emitter as TouchPosition } from 'touch-position'\nimport { Command } from '../command'\nimport events from 'dom-events'\nimport raf from 'raf'\n\n/**\n * Touch function.\n *\n * @see TouchCommand\n */\n\nmodule.exports = exports = (...args) => new TouchCommand(...args)\n\n/**\n * TouchCommand class.\n *\n * @public\n * @class TouchCommand\n * @extends Command\n */\n\nexport class TouchCommand extends Command {\n\n  /**\n   * TouchCommand class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} [opts]\n   */\n\n  constructor(ctx, {\n    touches = null,\n    currentX = 0,\n    currentY = 0,\n    deltaX = 0,\n    deltaY = 0,\n    prevX = 0,\n    prevY = 0,\n    touch = TouchPosition({element: ctx.domElement}),\n  } = {}) {\n    let hasMovement = false\n    let hasTouch = false\n    events.on(ctx.domElement, 'touchstart', (e) => {\n      const x = e.touches[0].clientX\n      const y = e.touches[0].clientY\n      e.preventDefault()\n      hasTouch = true\n      touches = e.targetTouches\n      currentX = x\n      currentY = y\n      deltaX = 0\n      deltaY = 0\n      prevX = 0\n      prevY = 0\n    })\n\n    events.on(ctx.domElement, 'touchend', (e) => {\n      e.preventDefault()\n      raf(() => {\n        hasMovement = false\n        hasTouch = false\n        touches = null\n        currentX = 0\n        currentY = 0\n        deltaX = 0\n        deltaY = 0\n        prevX = 0\n        prevY = 0\n      })\n    })\n\n    touch.on('move', ({clientX, clientY}) => {\n      hasMovement = true\n      synchronizeTouch(touches, clientX, clientY)\n    })\n\n    super((_, state, block) => {\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      state = state || {}\n      block = block || function() {}\n\n      if ('currentX' in state) { currentX = state.currentX }\n      if ('currentY' in state) { currentY = state.currentY }\n\n      synchronizeTouch(touches, currentX, currentY)\n\n      block({\n        ...state,\n        hasMovement,\n        hasTouch,\n        currentX,\n        currentY,\n        touches,\n        deltaX,\n        deltaY,\n        prevX,\n        prevY,\n      })\n    })\n\n    function synchronizeTouch(t, x, y) {\n      touches = t\n\n      if (currentX == x && currentY == y) {\n        return\n      }\n\n      prevX = currentX\n      prevY = currentY\n      deltaX = x - currentX\n      deltaY = y - currentY\n      currentX = x\n      currentY = y\n\n      raf(() => {\n        deltaX = 0\n        deltaY = 0\n      })\n    }\n  }\n}\n"
  },
  {
    "__docId__": 127,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TouchCommand",
    "memberof": "src/input/touch.js",
    "longname": "src/input/touch.js~TouchCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/input/touch.js",
    "importStyle": "{TouchCommand}",
    "description": "TouchCommand class.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TouchCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 128,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/input/touch.js~TouchCommand",
    "longname": "src/input/touch.js~TouchCommand#constructor",
    "access": null,
    "description": "TouchCommand class constructor.",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 129,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/light/ambient.js",
    "memberof": null,
    "longname": "src/light/ambient.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Command } from '../command'\nimport { Vector } from '../math/vector'\nimport GBuffer from '../gbuffer'\nimport glslify from 'glslify'\nimport clamp from 'clamp'\n\nconst vert = glslify(__dirname + '/../glsl/light/ambient/vert.glsl')\nconst frag = glslify(__dirname + '/../glsl/light/ambient/frag.glsl')\n\n/**\n * AmbientLightCommand class constructor alias.\n * @see AmbientLightCommand\n */\n\nmodule.exports = exports = (...args) => new AmbientLightCommand(...args)\n\n/**\n * AmbientLightCommand class.\n *\n * @public\n * @class AmbientLightCommand\n * @extends Command\n */\n\nexport class AmbientLightCommand extends Command {\n  constructor(ctx, {\n    intensity = 1.0,\n    color = new Vector(1.0, 1.0, 1.0, 1.0),\n  } = {}) {\n    const {regl} = ctx\n    const textures = {albedo: regl.texture({type: 'float'})}\n    const fbo = regl.framebuffer({color: [textures.albedo]})\n    const gbuffer = GBuffer(ctx, {fbo})\n    const draw = regl({\n      vert, frag,\n      uniforms: {\n        albedoTexture: () => textures.albedo,\n        intensity: () => clamp(intensity, -1, 1),\n        color: () => [...color],\n      },\n\n      attributes: {position: [[-4, -4], [4, -4], [0, 4]]},\n      depth: {enable: false},\n      count: 3,\n    })\n\n    super((_, block, scope) => {\n      if ('function' == typeof block) {\n        scope = block\n        block = {}\n      }\n\n      block = block || {}\n      scope = scope || (() => void 0)\n\n      if ('color' in block) {\n        if ('object' == typeof block.color) {\n          if (color[0] != block.color[0] ||\n              color[1] != block.color[1] ||\n              color[2] != block.color[2] ||\n              color[3] != block.color[3]) {\n            Object.assign(color, block.color)\n          }\n        }\n      }\n\n      if ('intensity' in block) {\n        if ('number' == typeof block.intensity &&\n            block.intensity == block.intensity) {\n          intensity = block.intensity\n        }\n      }\n\n      gbuffer((...args) => {\n        scope(...args)\n      })\n      draw()\n    })\n  }\n}\n"
  },
  {
    "__docId__": 130,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "vert",
    "memberof": "src/light/ambient.js",
    "longname": "src/light/ambient.js~vert",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/light/ambient.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "frag",
    "memberof": "src/light/ambient.js",
    "longname": "src/light/ambient.js~frag",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/light/ambient.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AmbientLightCommand",
    "memberof": "src/light/ambient.js",
    "longname": "src/light/ambient.js~AmbientLightCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/light/ambient.js",
    "importStyle": "{AmbientLightCommand}",
    "description": "AmbientLightCommand class.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AmbientLightCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 133,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/light/ambient.js~AmbientLightCommand",
    "longname": "src/light/ambient.js~AmbientLightCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "optional": true,
        "types": [
          "{\"intensity\": *, \"color\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 134,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/light/directional.js",
    "memberof": null,
    "longname": "src/light/directional.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Command } from '../command'\nimport { Vector } from '../math/vector'\nimport GBuffer from '../gbuffer'\nimport glslify from 'glslify'\nimport clamp from 'clamp'\n\nconst vert = glslify(__dirname + '/../glsl/light/ambient/vert.glsl')\nconst frag = glslify(__dirname + '/../glsl/light/ambient/frag.glsl')\n\n/**\n * AmbientLightCommand class constructor alias.\n * @see AmbientLightCommand\n */\n\nmodule.exports = exports = (...args) => new AmbientLightCommand(...args)\n\n/**\n * AmbientLightCommand class.\n *\n * @public\n * @class AmbientLightCommand\n * @extends Command\n */\n\nexport class AmbientLightCommand extends Command {\n  constructor(ctx, {\n    intensity = 1.0,\n    color = new Vector(1.0, 1.0, 1.0, 1.0),\n  } = {}) {\n    const {regl} = ctx\n    const textures = {albedo: regl.texture({type: 'float'})}\n    const fbo = regl.framebuffer({color: [textures.albedo]})\n    const gbuffer = GBuffer(ctx, {fbo})\n    const draw = regl({\n      vert, frag,\n      uniforms: {\n        normalTexture: () => textures.normal,\n        intensity: () => clamp(intensity, -1, 1),\n        color: () => [...color],\n      },\n\n      attributes: {position: [[-4, -4], [4, -4], [0, 4]]},\n      depth: {enable: false},\n      count: 3,\n    })\n\n    super((_, block, scope) => {\n      if ('function' == typeof block) {\n        scope = block\n        block = {}\n      }\n\n      block = block || {}\n      scope = scope || (() => void 0)\n\n      if ('color' in block) {\n        if ('object' == typeof block.color) {\n          if (color[0] != block.color[0] ||\n              color[1] != block.color[1] ||\n              color[2] != block.color[2] ||\n              color[3] != block.color[3]) {\n            Object.assign(color, block.color)\n          }\n        }\n      }\n\n      if ('intensity' in block) {\n        if ('number' == typeof block.intensity &&\n            block.intensity == block.intensity) {\n          intensity = block.intensity\n        }\n      }\n\n      gbuffer((...args) => { scope(...args) })\n      draw()\n    })\n  }\n}\n"
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "vert",
    "memberof": "src/light/directional.js",
    "longname": "src/light/directional.js~vert",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/light/directional.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "frag",
    "memberof": "src/light/directional.js",
    "longname": "src/light/directional.js~frag",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/light/directional.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AmbientLightCommand",
    "memberof": "src/light/directional.js",
    "longname": "src/light/directional.js~AmbientLightCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/light/directional.js",
    "importStyle": "{AmbientLightCommand}",
    "description": "AmbientLightCommand class.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AmbientLightCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 138,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/light/directional.js~AmbientLightCommand",
    "longname": "src/light/directional.js~AmbientLightCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "optional": true,
        "types": [
          "{\"intensity\": *, \"color\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 139,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/math/index.js",
    "memberof": null,
    "longname": "src/math/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport { Quaternion } from './quaternion'\nexport { Vector } from './vector'\n"
  },
  {
    "__docId__": 140,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/math/quaternion.js",
    "memberof": null,
    "longname": "src/math/quaternion.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport coalesce from 'defined'\nimport clamp from 'clamp'\nimport quat from 'gl-quat'\n\nimport {\n  Vector,\n  XVector3,\n  YVector3,\n  ZVector3,\n} from './vector'\n\nconst multiply = (...args) => quat.multiply([], ...args)\nconst slerp = (t, ...args) => quat.slerp(t, t, ...args)\nconst copy = quat.copy\nconst set = (...args) => quat.setAxisAngle(...args)\n\n/**\n * Quaternion class.\n *\n * @public\n * @class Quaternion\n * @extends Vector\n */\n\nexport class Quaternion extends Vector {\n\n  /**\n   * Quaternion class constructor.\n   *\n   * @public\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} z\n   * @param {Number} w\n   */\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    super(coalesce(x, 0),\n          coalesce(y, 0),\n          coalesce(z, 0),\n          coalesce(w, 1))\n  }\n\n  /**\n   * Rotates target at given orientation euler angles\n   * in XYZ order with a given interpolation factor\n   * used for slerp.\n   *\n   * @public\n   * @param {Quaternion} target\n   * @param {Object} angles\n   * @param {Number} interpolationFactor\n   */\n\n  static slerpTargetFromAxisAngles(target,\n                                   angles,\n                                   interpolationFactor = 0.1) {\n    const ax = angles[0], ay = angles[1], az = angles[2]\n    const vx = XVector3, vy = YVector3, vz = ZVector3\n    const x = _scratchX, y = _scratchY, z = _scratchZ\n\n    const f = clamp(interpolationFactor, 0, 1)\n    const t = target\n\n    set(x, vx, ax)\n    set(y, vy, ay)\n    set(z, vz, az)\n\n    // t' = slerp(t, x * y * z, f)\n    slerp(t, multiply(multiply(x, y), z), f)\n  }\n\n  /**\n   * Rotates target at given orientation euler angles\n   * in XYZ order with a given interpolation factor\n   * used for slerp and also applied to the\n   * angle expressed on the X axis.\n   *\n   * @public\n   * @param {Quaternion} target\n   * @param {Object} angles\n   * @param {Number} interpolationFactor\n   */\n\n  static sloppySlerpTargetFromAxisAngles(target,\n                                         angles,\n                                         interpolationFactor = 0.1) {\n    const ax = angles[0], ay = angles[1], az = angles[2]\n    const vx = XVector3, vy = YVector3, vz = ZVector3\n    const x = _scratchX, y = _scratchY, z = _scratchZ\n\n    const f = clamp(interpolationFactor, 0, 1)\n    const t = target\n\n    set(x, vx, ax*f)\n    set(y, vy, ay)\n    set(z, vz, az)\n\n    // t' = x * slerp(t, y * z, f)\n    copy(t, multiply(x, slerp(t, multiply(y, z), f)))\n  }\n}\n\nconst _scratchX = new Quaternion()\nconst _scratchY = new Quaternion()\nconst _scratchZ = new Quaternion()\n"
  },
  {
    "__docId__": 141,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "multiply",
    "memberof": "src/math/quaternion.js",
    "longname": "src/math/quaternion.js~multiply",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/math/quaternion.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "slerp",
    "memberof": "src/math/quaternion.js",
    "longname": "src/math/quaternion.js~slerp",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/math/quaternion.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "copy",
    "memberof": "src/math/quaternion.js",
    "longname": "src/math/quaternion.js~copy",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/math/quaternion.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "set",
    "memberof": "src/math/quaternion.js",
    "longname": "src/math/quaternion.js~set",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/math/quaternion.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Quaternion",
    "memberof": "src/math/quaternion.js",
    "longname": "src/math/quaternion.js~Quaternion",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/math/quaternion.js",
    "importStyle": "{Quaternion}",
    "description": "Quaternion class.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Quaternion"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 146,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/math/quaternion.js~Quaternion",
    "longname": "src/math/quaternion.js~Quaternion#constructor",
    "access": "public",
    "description": "Quaternion class constructor.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 147,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "slerpTargetFromAxisAngles",
    "memberof": "src/math/quaternion.js~Quaternion",
    "longname": "src/math/quaternion.js~Quaternion.slerpTargetFromAxisAngles",
    "access": "public",
    "description": "Rotates target at given orientation euler angles\nin XYZ order with a given interpolation factor\nused for slerp.",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "Quaternion"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "angles",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "interpolationFactor",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 148,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "sloppySlerpTargetFromAxisAngles",
    "memberof": "src/math/quaternion.js~Quaternion",
    "longname": "src/math/quaternion.js~Quaternion.sloppySlerpTargetFromAxisAngles",
    "access": "public",
    "description": "Rotates target at given orientation euler angles\nin XYZ order with a given interpolation factor\nused for slerp and also applied to the\nangle expressed on the X axis.",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "Quaternion"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "angles",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "interpolationFactor",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 149,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_scratchX",
    "memberof": "src/math/quaternion.js",
    "longname": "src/math/quaternion.js~_scratchX",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/math/quaternion.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "type": {
      "types": [
        "src/math/quaternion.js~Quaternion"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_scratchY",
    "memberof": "src/math/quaternion.js",
    "longname": "src/math/quaternion.js~_scratchY",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/math/quaternion.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "type": {
      "types": [
        "src/math/quaternion.js~Quaternion"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_scratchZ",
    "memberof": "src/math/quaternion.js",
    "longname": "src/math/quaternion.js~_scratchZ",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/math/quaternion.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "type": {
      "types": [
        "src/math/quaternion.js~Quaternion"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/math/vector.js",
    "memberof": null,
    "longname": "src/math/vector.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { define } from '../utils'\nimport coalesce from 'defined'\nimport vec4 from 'gl-vec4'\nimport vec3 from 'gl-vec3'\nimport vec2 from 'gl-vec2'\n\n/**\n * Vector class.\n *\n * @public\n * @class Vector\n */\n\nexport class Vector {\n\n  /**\n   * Vector class contructor.\n   *\n   * @param {...Mixed} input\n   */\n\n  constructor(...input) {\n    if (1 == input.length && 'object' == typeof input[0]) {\n      const tmp = input[0]\n      input[0] = tmp.x || tmp[0] || undefined\n      input[1] = tmp.y || tmp[1] || undefined\n      input[2] = tmp.z || tmp[2] || undefined\n      input[3] = tmp.w || tmp[3] || undefined\n      input = input.filter((x) => undefined !== x)\n    }\n\n    const elements = new Float32Array([...input])\n    define(this, 'elements', { get:() => elements })\n    const mappings = [\n      [0, 1, 2, 3],\n      ['x', 'y', 'z', 'w'],\n      ['r', 'g', 'b', 'a'],\n    ]\n\n    for (let mapping of mappings) {\n      for (let i = 0; i < mapping.length; ++i) {\n        if (null == elements[i]) { break }\n        define(this, mapping[i], {\n          enumerable: null != elements[i],\n          get: () => elements[i],\n          set: (v) => elements[i] = v\n        })\n      }\n    }\n  }\n\n  /**\n   * Vector length getter.\n   *\n   * @type {Number}\n   * @public\n   */\n\n  get length() {\n    return this.elements.length\n  }\n\n  /**\n   * Dummy length setter.\n   *\n   * @private\n   */\n\n  set length(value) {\n    void value\n  }\n\n  /**\n   * Returns a reference to the underlying\n   * vector elements.\n   *\n   * @getter\n   * @type {Float64Array}\n   */\n\n  get ref() {\n    return this.elements\n  }\n\n  /**\n   * Returns the component count of the vector\n   *\n   * @getter\n   * @type {Number}\n   */\n\n  get componentLength() {\n    return this.elements.length\n  }\n\n  /**\n   * Set components-wise values\n   *\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} z\n   * @param {Number} w\n   * @return {Vector}\n   */\n\n  set(x, y, z, w) {\n    if (x instanceof Vector) {\n      return this.set(x.x, x.y, x.z, x.w)\n    }\n\n    // switch fall through component setter\n    switch (arguments.length) {\n      case 4: this.elements[3] = coalesce(w, this.elements[3]);\n      case 3: this.elements[2] = coalesce(z, this.elements[2]);\n      case 2: this.elements[1] = coalesce(y, this.elements[1]);\n      case 1: this.elements[0] = coalesce(x, this.elements[0]);\n    }\n    return this\n  }\n\n  /**\n   * Converts the vector into\n   * a normal Array.\n   *\n   * @return {Array}\n   */\n\n  toArray() {\n    return [...this.elements]\n  }\n\n  /**\n   * Returns a JSON serializable value.\n   *\n   * @return {Array}\n   */\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  /**\n   * Returns the underlying vector\n   * array value.\n   *\n   * @return {Float64Array}\n   */\n\n  valueOf() {\n    return this.elements\n  }\n\n  /**\n   * Iterator protocol implementation.\n   */\n\n  [Symbol.iterator]() {\n    return this.toArray()[Symbol.iterator]()\n  }\n}\n\n/**\n * Instanced x, y, z vectors\n */\n\nexport const XVector3 = new Vector(1, 0, 0)\nexport const YVector3 = new Vector(0, 1, 0)\nexport const ZVector3 = new Vector(0, 0, 1)\n"
  },
  {
    "__docId__": 153,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Vector",
    "memberof": "src/math/vector.js",
    "longname": "src/math/vector.js~Vector",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/math/vector.js",
    "importStyle": "{Vector}",
    "description": "Vector class.",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Vector"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 154,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#constructor",
    "access": null,
    "description": "Vector class contructor.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Mixed"
        ],
        "spread": true,
        "optional": false,
        "name": "input",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 155,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "length",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#length",
    "access": "public",
    "description": "Vector length getter.",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 156,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "length",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#length",
    "access": "private",
    "description": "Dummy length setter.",
    "lineNumber": 75,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 157,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "ref",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#ref",
    "access": null,
    "description": "Returns a reference to the underlying\nvector elements.",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Float64Array"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 158,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "componentLength",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#componentLength",
    "access": null,
    "description": "Returns the component count of the vector",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 159,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "set",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#set",
    "access": null,
    "description": "Set components-wise values",
    "lineNumber": 112,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "w",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 160,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toArray",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#toArray",
    "access": null,
    "description": "Converts the vector into\na normal Array.",
    "lineNumber": 134,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 161,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toJSON",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#toJSON",
    "access": null,
    "description": "Returns a JSON serializable value.",
    "lineNumber": 144,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 162,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "valueOf",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#valueOf",
    "access": null,
    "description": "Returns the underlying vector\narray value.",
    "lineNumber": 155,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Float64Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 163,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "[Symbol.iterator]",
    "memberof": "src/math/vector.js~Vector",
    "longname": "src/math/vector.js~Vector#[Symbol.iterator]",
    "access": null,
    "description": "Iterator protocol implementation.",
    "lineNumber": 163,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 164,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "XVector3",
    "memberof": "src/math/vector.js",
    "longname": "src/math/vector.js~XVector3",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/math/vector.js",
    "importStyle": "{XVector3}",
    "description": "Instanced x, y, z vectors",
    "lineNumber": 172,
    "type": {
      "types": [
        "src/math/vector.js~Vector"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "YVector3",
    "memberof": "src/math/vector.js",
    "longname": "src/math/vector.js~YVector3",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/math/vector.js",
    "importStyle": "{YVector3}",
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "type": {
      "types": [
        "src/math/vector.js~Vector"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ZVector3",
    "memberof": "src/math/vector.js",
    "longname": "src/math/vector.js~ZVector3",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/math/vector.js",
    "importStyle": "{ZVector3}",
    "description": null,
    "lineNumber": 174,
    "undocument": true,
    "type": {
      "types": [
        "src/math/vector.js~Vector"
      ]
    }
  },
  {
    "__docId__": 167,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/media/audio.js",
    "memberof": null,
    "longname": "src/media/audio.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { debug, define } from '../utils'\nimport { MediaCommand } from './media'\nimport events from 'dom-events'\n\n/**\n * AudioCommand constructor.\n * @see AudioCommand\n */\n\nmodule.exports = exports = (...args) => new AudioCommand(...args)\n\n/**\n * AudioCommand class.\n *\n * @public\n * @extends MediaCommand\n */\n\nexport class AudioCommand extends MediaCommand {\n\n  /**\n   * AudioCommand class constructor.\n   *\n   * @constructor\n   * @param {Context} ctx\n   * @param {String} src\n   * @param {Object} [initialState]\n   */\n\n  constructor(ctx, src, initialState = {}) {\n    let source = null\n    let volume = 0\n    let isMuted = false\n    let isPaused = true\n    let isPlaying = false\n\n    const manifest = {\n      audio: {\n        stream: true,\n        type: 'audio',\n        src: src\n      }\n    }\n\n    /**\n     * Calls internal audio source method\n     * with arguments. This function is used\n     * to proxy a class method to a audio\n     * element method.\n     *\n     * @private\n     * @param {String} method\n     * @param {...Mixed} args\n     * @return {AudioCommand}\n     */\n\n    const call = (method, ...args) => {\n      if (source) {\n        debug('AudioCommand: call %s(%j)', method, args)\n        source[method](...args)\n      } else {\n        this.once('load', () => this[method](...args))\n      }\n      return this\n    }\n\n    /**\n     * Sets an internal audio source property\n     * value. This function is used\n     * to proxy a class method to a audio\n     * element property\n     *\n     * @private\n     * @param {String} method\n     * @param {...Mixed} args\n     * @return {AudioCommand|Mixed}\n     */\n\n    const set = (property, value) => {\n      if (source) {\n        if (undefined === value) {\n          return source[property]\n        } else {\n          debug('AudioCommand: set %s=%s', property, value)\n          source[property] = value\n        }\n      } else {\n        this.once('load', () => { this[property] = value })\n      }\n      return this\n    }\n\n    /**\n     * Emits an event on the instance.\n     *\n     * @private\n     * @param {String} event\n     * @param {...Mixed} args\n     * @return {AudioCommand}\n     */\n\n    const emit = (event, ...args) => {\n      this.emit(event, ...args)\n      return this\n    }\n\n    // sanitize initialState object\n    for (let key in initialState) {\n      if (undefined === initialState[key]) {\n        delete initialState[key]\n      }\n    }\n\n    super(ctx, manifest, initialState)\n\n    // set initial audio state\n    this.once('load', () => {\n      // set initial set on source\n      Object.assign(source, initialState)\n\n      const proxy = (event, override) => {\n        events.on(source, event, (...args) => {\n          emit(override || event, ...args)\n        })\n      }\n\n      // proxy source events\n      for (let key in HTMLAudioElement.prototype) {\n        if (key.match(/^on[a-z]/)) {\n          proxy(key.replace(/^on/, ''))\n          define(this, key, {\n            get: () => source[key],\n            set: (value) => source[key] = value\n          })\n        }\n      }\n\n      volume = source.volume\n      isMuted = source.muted\n      isPlaying = source.paused\n    })\n\n    // set to playing state\n    this.on('playing', () => {\n      isPlaying = true\n      isPaused = false\n    })\n\n    // set to paused state\n    this.on('pause', () => {\n      isPlaying = false\n      isPaused = true\n    })\n\n    // set volume mute state\n    this.on('mute', () => {\n      isMuted = true\n    })\n\n    this.on('unmute', () => {\n      isMuted = false\n    })\n\n    /**\n     * Source attribute accessor.\n     *\n     * @type {String}\n     */\n\n    define(this, 'src', {\n      get: () => {\n        return (source && source.src) ?\n          source.src :\n          (this.manifest && this.manifest.audio) ?\n            this.manifest.audio.src :\n            null\n      },\n\n      set: (value) => {\n        if (source && 'string' == typeof value) {\n          source.src = value\n          if (this.manifest && this.manifest.audio) {\n            this.manifest.audio.src = value\n            this.reset()\n            this.load()\n          }\n        }\n      }\n    })\n\n    // proxy all configurable audio properties that serve\n    // some kind of real purpose\n    // @TODO(werle) - support text tracks\n    ;[\n      'currentTime',\n      'crossOrigin',\n      'currentSrc',\n      'duration',\n      'seekable',\n      'volume',\n      'paused',\n      'played',\n      'prefix',\n      'muted',\n      'loop',\n    ].map((property) => define(this, property, {\n      get: () => source[property],\n      set: (value) => { source[property] = value }\n    }))\n\n    // expose DOM element\n    define(this, 'domElement', { get: () => source })\n\n    /**\n     * Plays the audio.\n     *\n     * @return {AudioCommand}\n     */\n\n    this.play = () => call('play')\n\n    /**\n     * Pauses the audio.\n     *\n     * @return {AudioCommand}\n     */\n\n    this.pause = () => call('pause')\n\n    /**\n     * Mutes the audio\n     *\n     * @return {AudioCommand}\n     */\n\n    this.mute = () => set('muted', true) && emit('mute')\n\n    /**\n     * Unutes the audio\n     *\n     * @return {AudioCommand}\n     */\n\n    this.unmute = () => set('muted', false) && emit('unmute')\n\n    /**\n     * Callback when audio has loaded.\n     *\n     * @type {Function}\n     */\n\n    this.onloaded = ({audio}) => {\n      source = audio\n    }\n  }\n}\n"
  },
  {
    "__docId__": 168,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AudioCommand",
    "memberof": "src/media/audio.js",
    "longname": "src/media/audio.js~AudioCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/media/audio.js",
    "importStyle": "{AudioCommand}",
    "description": "AudioCommand class.",
    "lineNumber": 25,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 169,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/media/audio.js~AudioCommand",
    "longname": "src/media/audio.js~AudioCommand#constructor",
    "access": null,
    "description": "AudioCommand class constructor.",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "initialState",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 170,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "play",
    "memberof": "src/media/audio.js~AudioCommand",
    "longname": "src/media/audio.js~AudioCommand#play",
    "access": null,
    "description": "Plays the audio.",
    "lineNumber": 226,
    "return": {
      "nullable": null,
      "types": [
        "AudioCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "pause",
    "memberof": "src/media/audio.js~AudioCommand",
    "longname": "src/media/audio.js~AudioCommand#pause",
    "access": null,
    "description": "Pauses the audio.",
    "lineNumber": 234,
    "return": {
      "nullable": null,
      "types": [
        "AudioCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mute",
    "memberof": "src/media/audio.js~AudioCommand",
    "longname": "src/media/audio.js~AudioCommand#mute",
    "access": null,
    "description": "Mutes the audio",
    "lineNumber": 242,
    "return": {
      "nullable": null,
      "types": [
        "AudioCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "unmute",
    "memberof": "src/media/audio.js~AudioCommand",
    "longname": "src/media/audio.js~AudioCommand#unmute",
    "access": null,
    "description": "Unutes the audio",
    "lineNumber": 250,
    "return": {
      "nullable": null,
      "types": [
        "AudioCommand"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "onloaded",
    "memberof": "src/media/audio.js~AudioCommand",
    "longname": "src/media/audio.js~AudioCommand#onloaded",
    "access": null,
    "description": "Callback when audio has loaded.",
    "lineNumber": 258,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 175,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/media/image.js",
    "memberof": null,
    "longname": "src/media/image.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { MediaCommand } from './media'\nimport isPowerOfTwo from 'is-power-of-two'\nimport getPixels from 'get-pixels'\nimport toCanvas from 'image-to-canvas'\nimport raf from 'raf'\n\nimport {\n  clampToMaxSize,\n  makePowerOfTwo,\n  define,\n  debug,\n} from '../utils'\n\n/**\n * ImageCommand constructor.\n * @see ImageCommand\n */\n\nmodule.exports = exports = (...args) => new ImageCommand(...args)\n\n/**\n * ImageCommand class.\n *\n * @public\n * @class ImageCommand\n * @extends MediaCommand\n */\n\nexport class ImageCommand extends MediaCommand {\n\n  /**\n   * ImageCommand class constructor.\n   *\n   * @constructor\n   * @param {Context} ctx\n   * @param {String} src\n   * @param {Object} [initialState]\n   */\n\n  constructor(ctx, src, initialState = {}) {\n    let buffer = null\n    let source = null\n    let texture = null\n    let isConvertingToBuffer = false\n\n    const manifest = {\n      image: {\n        stream: true,\n        type: 'image',\n        src: 'string' == typeof src ? src : undefined\n      },\n\n      regl: {\n        blend: {\n          enable: true,\n          func: {\n            src: 'src alpha',\n            dst: 'one minus src alpha'\n          },\n        },\n      }\n    }\n\n    const textureState = Object.assign({\n      alignment: 4,\n      flipY: true,\n      wrap: ['clamp', 'clamp'],\n      min: 'linear',\n      mag: 'linear',\n\n      get data() {\n        if (buffer) {\n          return buffer\n        } else if (source) {\n          return source\n        }\n      },\n    }, initialState.texture)\n\n\n    // sanitize initialState object\n    for (let key in initialState) {\n      if (undefined === initialState[key]) {\n        delete initialState[key]\n      }\n    }\n\n    super(ctx, manifest, initialState)\n\n    this.once('load', () => {\n      if (source instanceof Image) {\n        // set initial set on source\n        Object.assign(source, initialState)\n      }\n    })\n\n    // dimensions\n    define(this, 'width', { get: () => source ? source.width || source.shape[0] || 0 : 0})\n    define(this, 'height', { get: () => source ? source.height || source.shape[1] || 0 : 0})\n    define(this, 'aspectRatio', { get: () => this.width/this.height || 1 })\n\n    // expose DOM element when available\n    define(this, 'domElement', {\n      get: () => source instanceof Node ? source : null\n    })\n\n    this.type = 'image'\n\n    /**\n     * Sets an internal image source property\n     * value. This function is used\n     * to proxy a class method to a image\n     * element property\n     *\n     * @private\n     * @param {String} method\n     * @param {...Mixed} args\n     * @return {ImageCommand|Mixed}\n     */\n\n    const set = (property, value) => {\n      if (source) {\n        if (undefined === value) {\n          return source[property]\n        } else {\n          debug('ImageCommand: set %s=%s', property, value)\n          source[property] = value\n        }\n      } else {\n        this.once('load', () => { this[property] = value })\n      }\n      return this\n    }\n\n    /**\n     * Source attribute accessor.\n     *\n     * @type {String}\n     */\n\n    define(this, 'src', {\n      get: () => {\n        return (source && source.src) ?\n          source.src :\n          (this.manifest && this.manifest.image) ?\n            this.manifest.image.src :\n            null\n      },\n\n      set: (value) => {\n        if (source && 'string' == typeof value) {\n          source.src = value\n          if (this.manifest && this.manifest.image) {\n            this.manifest.image.src = value\n            this.reset()\n            this.load()\n          }\n        }\n      }\n    })\n\n    /**\n     * Image texture target.\n     *\n     * @type {REGLTexture}\n     */\n\n    define(this, 'texture', {\n      get: () => texture,\n      set: (value) => {\n        if (texture && null === value) {\n          texture.destroy()\n          texture = ctx.regl.texture({ ...textureState })\n        } if (value) {\n          if (texture) {\n            texture.destroy()\n          }\n          texture = value\n        }\n      }\n    })\n\n    if (initialState && initialState.texture) {\n      texture = initialState.texture\n    }\n\n    if ('object' == typeof src) {\n      if (src.source) {\n        source = src.source\n      } else if (src.buffer) {\n        buffer = src.buffer\n      }\n      delete src.buffer\n      delete src.source\n      Object.assign(textureState, src)\n      raf(() => this.refresh())\n      raf(() => this.emit('load'))\n    }\n\n    /**\n     * Refreshes image texture with current\n     * texture state.\n     */\n\n    this.refresh = () => {\n      if (textureState.data) {\n        texture({ ...textureState })\n      }\n    }\n\n    /**\n     * Callback when image has loaded.\n     *\n     * @type {Function}\n     */\n\n    this.onloaded = ({image}) => {\n      source = clampToMaxSize(\n        image,\n        ctx.regl.limits.maxTextureSize,\n        !(isPowerOfTwo(image.width) || isPowerOfTwo(image.height))\n      )\n\n      const needsMipmaps = Boolean(image && (\n        !isPowerOfTwo(image.height) ||\n        !isPowerOfTwo(image.width)\n      ))\n\n      if (needsMipmaps) {\n        textureState.mipmap = needsMipmaps\n        textureState.min = 'linear mipmap nearest'\n      }\n\n      if (texture) { texture.destroy() }\n      texture = ctx.regl.texture({ ...textureState })\n\n      this.emit('load')\n      raf(() => this.refresh())\n    }\n  }\n}\n"
  },
  {
    "__docId__": 176,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ImageCommand",
    "memberof": "src/media/image.js",
    "longname": "src/media/image.js~ImageCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/media/image.js",
    "importStyle": "{ImageCommand}",
    "description": "ImageCommand class.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ImageCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 177,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/media/image.js~ImageCommand",
    "longname": "src/media/image.js~ImageCommand#constructor",
    "access": null,
    "description": "ImageCommand class constructor.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "initialState",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 178,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/media/image.js~ImageCommand",
    "longname": "src/media/image.js~ImageCommand#type",
    "access": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "refresh",
    "memberof": "src/media/image.js~ImageCommand",
    "longname": "src/media/image.js~ImageCommand#refresh",
    "access": null,
    "description": "Refreshes image texture with current\ntexture state.",
    "lineNumber": 211,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "onloaded",
    "memberof": "src/media/image.js~ImageCommand",
    "longname": "src/media/image.js~ImageCommand#onloaded",
    "access": null,
    "description": "Callback when image has loaded.",
    "lineNumber": 223,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 181,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/media/index.js",
    "memberof": null,
    "longname": "src/media/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport Audio from './audio'\nexport Video from './video'\nexport Image from './image'\nexport Media from './media'\n"
  },
  {
    "__docId__": 182,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/media/media.js",
    "memberof": null,
    "longname": "src/media/media.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { debug, define } from '../utils'\nimport { EventEmitter } from 'events'\nimport { Object3DCommand } from '../object'\nimport resl from 'resl'\nimport raf from 'raf'\n\n/**\n * reload timeout in milliseconds.\n *\n * @private\n * @type {Number}\n */\n\nconst DEFAULT_RELOAD_TIMEOUT = 30000\n\n/**\n * No-op to return undefined\n *\n * @private\n * @type {Function}\n */\n\nconst noop = () => void 0\n\n/**\n * MediaCommand constructor.\n * @see MediaCommand\n */\n\nmodule.exports = exports = (...args) => new MediaCommand(...args)\n\n/**\n * MediaCommand class.\n *\n * @public\n * @class MediaCommand\n * @extends Object3DCommand\n */\n\nexport class MediaCommand extends Object3DCommand {\n\n  /**\n   * MediaCommand class constructor that loads\n   * resources from a given manifest using resl\n   *\n   * @constructor\n   * @param {Object} ctx\n   * @param {Object} manifest\n   * @param {Object} [initialState]\n   */\n\n  constructor(ctx, manifest, initialState = {}) {\n    let isDoneLoading = false\n    let retryTimeout = null\n    let isCancelled = false\n    let hasProgress = false\n    let isLoading = false\n    let hasError = false\n    let timeout = DEFAULT_RELOAD_TIMEOUT\n\n    // load when called as a function\n    super(ctx, {\n      type: 'media',\n      draw: (_, state, block) => this.read(block)\n    })\n\n    // mixin and initialize EventEmitter\n    EventEmitter.call(this)\n    Object.assign(this, EventEmitter.prototype)\n    this.setMaxListeners(Infinity)\n    this.on('error', (err) => ctx.emit('error', err))\n\n    // preload unless otherwise specified\n    if (initialState && false !== initialState.preload) {\n      raf(() => this.load())\n    }\n\n    define(this, 'manifest', { get: () => manifest })\n    define(this, 'isDoneLoading', { get: () => isDoneLoading })\n    define(this, 'isCancelled', { get: () => isCancelled })\n    define(this, 'hasProgress', { get: () => hasProgress })\n    define(this, 'isLoading', { get: () => isLoading })\n    define(this, 'hasError', { get: () => hasError })\n    define(this, 'hasData', {\n      get: () => !hasError && (isDoneLoading || hasProgress)\n    })\n\n    this.update = (newManifest) => {\n      Object.assign(manifest, newManifest)\n      return this\n    }\n\n\n    this.read = (done = () => void 0) => {\n      this._read(done)\n      return this\n    }\n\n    this._read = (done = () => void 0) => {\n      done()\n      return this\n    }\n\n    this.reload = () => {\n      this.reset()\n      this.load()\n      return this\n    }\n\n    this.reset = () => {\n      isDoneLoading = false\n      isCancelled = false\n      hasProgress = false\n      isLoading = false\n      hasError = false\n      return this\n    }\n\n    this.cancel = () => {\n      this.reset()\n      isCancelled = true\n      return this\n    }\n\n    this.setTimeout = (value) => {\n      timeout = value\n      return this\n    }\n\n    this.load = () => {\n      const requested = {}\n\n      if (isCancelled || isLoading || hasProgress || hasError || isDoneLoading) {\n        return false\n      }\n\n      for (let key in manifest) {\n        if ('object' == typeof manifest[key]) {\n          if ('string' == typeof manifest[key].src) {\n            requested[key] = manifest[key]\n          }\n        }\n      }\n\n      if (0 == Object.keys(requested).length) {\n        return false\n      }\n\n      const retry = () => {\n        clearTimeout(retryTimeout)\n        retryTimeout = setTimeout(() => {\n          clearTimeout(retryTimeout)\n          if (hasError || ((hasProgress || isLoading) && !isDoneLoading)) {\n            debug('retrying....')\n            this.reload()\n          }\n        }, timeout)\n      }\n\n      retry()\n\n      isLoading = true\n      raf(() => resl({\n        manifest: requested,\n\n        onDone: (...args) => {\n          isDoneLoading = true\n          void (this.onloaded || noop)(...args)\n          this.emit('load', ...args)\n        },\n\n        onError: (...args) => {\n          hasError = true\n          isDoneLoading = true\n          void (this.onerror || noop)(...args)\n          this.emit('error', ...args)\n          retry()\n        },\n\n        onProgress: (...args) => {\n          hasProgress = true\n          void (this.onprogress || noop)(...args)\n          this.emit('progress', ...args)\n        },\n      }))\n\n      return true\n    }\n  }\n}\n"
  },
  {
    "__docId__": 183,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_RELOAD_TIMEOUT",
    "memberof": "src/media/media.js",
    "longname": "src/media/media.js~DEFAULT_RELOAD_TIMEOUT",
    "access": "private",
    "export": false,
    "importPath": "axis3d/src/media/media.js",
    "importStyle": null,
    "description": "reload timeout in milliseconds.",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 184,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "noop",
    "memberof": "src/media/media.js",
    "longname": "src/media/media.js~noop",
    "access": "private",
    "export": false,
    "importPath": "axis3d/src/media/media.js",
    "importStyle": null,
    "description": "No-op to return undefined",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 185,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MediaCommand",
    "memberof": "src/media/media.js",
    "longname": "src/media/media.js~MediaCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/media/media.js",
    "importStyle": "{MediaCommand}",
    "description": "MediaCommand class.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MediaCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 186,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/media/media.js~MediaCommand",
    "longname": "src/media/media.js~MediaCommand#constructor",
    "access": null,
    "description": "MediaCommand class constructor that loads\nresources from a given manifest using resl",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "manifest",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "initialState",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 187,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/media/media.js~MediaCommand",
    "longname": "src/media/media.js~MediaCommand#update",
    "access": null,
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "read",
    "memberof": "src/media/media.js~MediaCommand",
    "longname": "src/media/media.js~MediaCommand#read",
    "access": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_read",
    "memberof": "src/media/media.js~MediaCommand",
    "longname": "src/media/media.js~MediaCommand#_read",
    "access": null,
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "reload",
    "memberof": "src/media/media.js~MediaCommand",
    "longname": "src/media/media.js~MediaCommand#reload",
    "access": null,
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/media/media.js~MediaCommand",
    "longname": "src/media/media.js~MediaCommand#reset",
    "access": null,
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "cancel",
    "memberof": "src/media/media.js~MediaCommand",
    "longname": "src/media/media.js~MediaCommand#cancel",
    "access": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 193,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "setTimeout",
    "memberof": "src/media/media.js~MediaCommand",
    "longname": "src/media/media.js~MediaCommand#setTimeout",
    "access": null,
    "description": null,
    "lineNumber": 131,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "load",
    "memberof": "src/media/media.js~MediaCommand",
    "longname": "src/media/media.js~MediaCommand#load",
    "access": null,
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/media/microphone.js",
    "memberof": null,
    "longname": "src/media/microphone.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": ""
  },
  {
    "__docId__": 196,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/media/video.js",
    "memberof": null,
    "longname": "src/media/video.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport makeVideoPlayableInline from 'iphone-inline-video'\nimport { debug, define } from '../utils'\nimport { MediaCommand } from './media'\nimport { ImageCommand } from './image'\nimport isPowerOfTwo from 'is-power-of-two'\nimport events from 'dom-events'\nimport clamp from 'clamp'\nimport raf from 'raf'\n\n/**\n * VideoCommand constructor.\n * @see Video\n */\n\nmodule.exports = exports = (...args) => new VideoCommand(...args)\n\n/**\n * VideoCommand class.\n *\n * @public\n * @class VideoCommand\n * @extends MediaCommand\n */\n\nexport class VideoCommand extends MediaCommand {\n\n  /**\n   * VideoCommand class constructor.\n   *\n   * @constructor\n   * @param {Context} ctx\n   * @param {String} src\n   * @param {Object} [initialState]\n   */\n\n  constructor(ctx, src, initialState = {}) {\n    let source = null\n    let poster = null\n    let volume = 0\n    let texture = null\n\n    let isMuted = false\n    let isPaused = true\n    let isPlaying = false\n\n    let wantsMute = false\n    let wantsPause = false\n    let wantsPlay = false\n\n    // Texture state used for regl texture updates.\n    const textureState = Object.assign({\n      format: 'rgba',\n      flipY: true,\n      wrap: ['clamp', 'clamp'],\n      mag: 'linear',\n      min: 'linear',\n    }, initialState.texture)\n\n    // Video manifest for resl.\n    const manifest = {\n      video: Object.assign({\n        stream: true,\n        type: 'video',\n        src: src\n      }, initialState.manifest)\n    }\n\n    // sanitize initialState object\n    delete initialState.manifest\n    delete initialState.texture\n    for (let key in initialState) {\n      if (undefined === initialState[key]) {\n        delete initialState[key]\n      }\n    }\n\n    //\n    // Calls internal video source method\n    // with arguments. This function is used\n    // to proxy a class method to a video\n    // element method.\n    //\n    const call = (method, ...args) => {\n      if (source) {\n        debug('VideoCommand: call %s(%j)', method, args)\n        const ret = source[method](...args)\n        if (ret && 'function' == typeof ret.catch) {\n          ret.catch((err) => this.emit('error', err))\n        }\n        window.source = source\n      } else {\n        this.once('load', () => this[method](...args))\n      }\n      return this\n    }\n\n    //\n    // Sets an internal video source property\n    // value. This function is used\n    // to proxy a class method to a video\n    // element property\n    //\n    const set = (property, value) => {\n      if (source) {\n        if (undefined === value) {\n          return source[property]\n        } else {\n          debug('VideoCommand: set %s=%s', property, value)\n          source[property] = value\n        }\n      } else {\n        this.once('load', () => { this[property] = value })\n      }\n      return this\n    }\n\n    //\n    // Emits an event on the instance.\n    //\n    const emit = (event, ...args) => {\n      this.emit(event, ...args)\n      return this\n    }\n\n    //\n    // Sets video texture\n    //\n    const setTexture = (value) => {\n      if (texture && null === value) {\n        texture.destroy()\n        texture = ctx.regl.texture({ ...textureState })\n      } else {\n        texture = ctx.regl.texture({ ...textureState })\n      }\n\n      if (value && texture) {\n        texture.destroy()\n        texture = value\n      }\n    }\n\n    super(ctx, manifest, initialState)\n\n    setTexture(\n      initialState && initialState.texture ?\n        initialState.texture :\n        ctx.regl.texture({ ...textureState })\n    )\n\n    this.on('load', () => {\n      const needsMipmaps = (\n        isPowerOfTwo(source.videoHeight) &&\n        isPowerOfTwo(source.videoWidth)\n      )\n\n      if (needsMipmaps) {\n        textureState.mipmap = needsMipmaps\n        textureState.min = 'linear mipmap nearest'\n      }\n    })\n\n    this.once('load', () => {\n      // set initial set on source\n      Object.assign(source, initialState)\n      const proxy = (event, override) => {\n        events.on(source, event, (...args) => {\n          debug(\"VideoCommand: event: %s\", event)\n          emit(override || event, ...args)\n        })\n      }\n\n      // proxy source events\n      for (let key in HTMLVideoElement.prototype) {\n        if (key.match(/^on[a-z]/)) {\n          proxy(key.replace(/^on/, ''))\n          define(this, key, {\n            get: () => source[key],\n            set: (value) => source[key] = value\n          })\n        }\n      }\n\n      volume = source.volume\n      isMuted = source.muted\n      isPaused = source.paused\n      isPlaying = !isPaused\n    })\n\n    // set to playing state\n    this.on('play', () => {\n      isPlaying = true\n      isPaused = false\n    })\n    this.on('playing', () => {\n      isPlaying = true\n      isPaused = false\n    })\n\n    // set to paused state\n    this.on('pause', () => {\n      isPlaying = false\n      isPaused = true\n    })\n\n    // set volume mute state\n    this.on('mute', () => { isMuted = true })\n    this.on('unmute', () => { isMuted = false })\n\n    //\n    // Source attribute accessor.\n    //\n\n    // proxy all configurable video properties that serve\n    // some kind of real purpose\n    // @TODO(werle) - support text tracks\n    ;[\n      'playbackRate',\n      'currentTime',\n      'crossOrigin',\n      'currentSrc',\n      'duration',\n      'seekable',\n      'volume',\n      'paused',\n      'played',\n      'prefix',\n      'title',\n      'muted',\n      'loop',\n    ].map((property) => define(this, property, {\n      get: () => source ? source[property] : null,\n      set: (value) => {\n        if (source) {\n          source[property] = value\n        } else {\n          this.once('load', () => { source[property] = value })\n        }\n      }\n    }))\n\n    // set poster if applicable\n    if (initialState && initialState.poster) {\n      this.poster = initialState.poster\n    }\n\n    // expose DOM element\n    define(this, 'domElement', { get: () => source })\n\n    // overload\n    const reload = this.reload\n    this.reload = () => {\n      if (source) {\n        source.pause()\n        source.currentTime = 0\n        source.load()\n\n        if (wantsPlay) {\n          source.play()\n        }\n\n        if (wantsMute) {\n          source.muted = true\n        }\n      }\n\n      reload()\n      return this\n    }\n\n    // Callback when video  has loaded.\n    this.onloaded = ({video}) => {\n      video.setAttribute('playsinline', true)\n      makeVideoPlayableInline(video)\n\n      source = video\n\n      if (null == poster) {\n        textureState.data = source\n        texture({ ...textureState })\n      }\n\n      if ('function' == typeof source.load) {\n        source.load()\n      }\n\n      let lastRead = 0\n      this._read = (done) => {\n        const now = Date.now()\n        //console.log(source.readyState, source.HAVE_ENOUGH_DATA, isPlaying, (now - lastRead))\n        if (true && (now - lastRead >= 64) && source.readyState >= source.HAVE_ENOUGH_DATA) {\n          lastRead = now\n          debug('VideoCommand: read')\n          textureState.data = source\n          texture({ ...textureState })\n        }\n      }\n    }\n\n    //\n    // Public methods\n    //\n    this.play = () => (wantsPlay = true) && call('play')\n    this.pause = () => (wantsPause = true) && call('pause')\n    this.mute = () => (wantsMute = true) && set('muted', true) && emit('mute')\n    this.unmute = () => !(wantsMute = false) && set('muted', false) && emit('unmute')\n\n    //\n    // Public properties\n    //\n    define(this, 'width', { get: () => source ? source.videoWidth : 0})\n    define(this, 'height', { get: () => source ? source.videoHeight : 0})\n    define(this, 'aspectRatio', { get: () => {\n      if (source) {\n        return source.videoWidth/source.videoHeight\n      } else if (poster) {\n        return poster.aspectRatio\n        } else {\n          return 1\n        }\n      }\n    })\n\n    define(this, 'texture', {\n      get: () => texture,\n      set: (value) => {\n        setTexture(value)\n      }\n    })\n\n    define(this, 'poster', {\n      get: () => source ? source.poster : null,\n      set: (value) => {\n        if (value) {\n          if (source) {\n            source.poster = value.src || value\n          } else {\n            this.once('load', () => { source.poster = value.src || value })\n          }\n\n          if (null == poster) {\n            if (value) {\n              poster = new ImageCommand(ctx, value.src || value, {texture})\n            }\n          }\n        }\n      },\n    })\n\n    define(this, 'src', {\n      get: () => {\n        if (source && source.src) {\n          return source.src\n        } else if (this.manifest && this.manifest.video) {\n          return this.manifest.video.src\n        } else {\n          return null\n        }\n      },\n\n      set: (value) => {\n        if (source && 'string' == typeof value) {\n          source.src = value\n          if (this.manifest && this.manifest.video) {\n            this.manifest.video.src = value\n            this.reset()\n            this.load()\n          }\n        }\n      }\n    })\n  }\n}\n"
  },
  {
    "__docId__": 197,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "VideoCommand",
    "memberof": "src/media/video.js",
    "longname": "src/media/video.js~VideoCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/media/video.js",
    "importStyle": "{VideoCommand}",
    "description": "VideoCommand class.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "VideoCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 198,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#constructor",
    "access": null,
    "description": "VideoCommand class constructor.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "initialState",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 199,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "poster",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#poster",
    "access": null,
    "description": null,
    "lineNumber": 249,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "reload",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#reload",
    "access": null,
    "description": null,
    "lineNumber": 257,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "onloaded",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#onloaded",
    "access": null,
    "description": null,
    "lineNumber": 277,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_read",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#_read",
    "access": null,
    "description": null,
    "lineNumber": 293,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "play",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#play",
    "access": null,
    "description": null,
    "lineNumber": 308,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "pause",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#pause",
    "access": null,
    "description": null,
    "lineNumber": 309,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mute",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#mute",
    "access": null,
    "description": null,
    "lineNumber": 310,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "unmute",
    "memberof": "src/media/video.js~VideoCommand",
    "longname": "src/media/video.js~VideoCommand#unmute",
    "access": null,
    "description": null,
    "lineNumber": 311,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mesh/box.js",
    "memberof": null,
    "longname": "src/mesh/box.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { BoxGeometry } from '../geometry/box'\nimport { MeshCommand } from './mesh'\nimport mat4 from 'gl-mat4'\nimport glsl from 'glslify'\n\n/**\n * Box function.\n *\n * @see BoxCommand\n */\n\nmodule.exports = exports = (...args) => new BoxCommand(...args)\n\n/**\n * BoxCommand class.\n *\n * @public\n * @class BoxCommand\n * @extends MeshCommand\n */\n\nexport class BoxCommand extends MeshCommand {\n  constructor(ctx, opts = {}) {\n    const geometry = new BoxGeometry(opts)\n    super(ctx, { ...opts, type: 'box', geometry })\n  }\n}\n"
  },
  {
    "__docId__": 208,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BoxCommand",
    "memberof": "src/mesh/box.js",
    "longname": "src/mesh/box.js~BoxCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/mesh/box.js",
    "importStyle": "{BoxCommand}",
    "description": "BoxCommand class.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "BoxCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 209,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/mesh/box.js~BoxCommand",
    "longname": "src/mesh/box.js~BoxCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "opts",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 210,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mesh/capsule.js",
    "memberof": null,
    "longname": "src/mesh/capsule.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": ""
  },
  {
    "__docId__": 211,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mesh/index.js",
    "memberof": null,
    "longname": "src/mesh/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module exports.\n */\n\nexport Box from './box'\nexport Mesh from './mesh'\nexport Plane from './plane'\nexport Sphere from './sphere'\nexport Triangle from './triangle'\n"
  },
  {
    "__docId__": 212,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mesh/mesh.js",
    "memberof": null,
    "longname": "src/mesh/mesh.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Quaternion, Vector } from '../math'\nimport { Object3DCommand } from '../object'\nimport { $reglContext } from '../symbols'\nimport getBoundingBox from 'bound-points'\nimport injectDefines from 'glsl-inject-defines'\nimport { define } from '../utils'\nimport coalesce from 'defined'\nimport glslify from 'glslify'\nimport clamp from 'clamp'\nimport mat4 from 'gl-mat4'\nimport vec4 from 'gl-vec4'\nimport vec3 from 'gl-vec3'\nimport vec2 from 'gl-vec2'\nimport quat from 'gl-quat'\n\nconst identity = mat4.identity([])\n\nexport const DEFAULT_VERTEX_SHADER = glslify(__dirname + '/../glsl/mesh/vert.glsl')\nexport const DEFAULT_FRAGMENT_SHADER = glslify(__dirname + '/../glsl/mesh/frag.glsl')\n\n/**\n * MeshCommand constructor.\n * @see MeshCommand\n */\n\nmodule.exports = exports = (...args) => new MeshCommand(...args)\n\n/**\n * MeshCommand class.\n *\n * @public\n * @class MeshCommand\n * @extends Command\n */\n\nexport class MeshCommand extends Object3DCommand {\n\n  /**\n   * MeshCommand class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} opts\n   */\n\n  constructor(ctx, opts = {}) {\n    const reglOptions = { ...opts.regl }\n\n    let boundingBox = null\n    let render = null\n    let draw = opts.draw || null\n    let map = null\n\n    let wireframeThickness = coalesce(opts.wireframeThickness, 0.125)\n    let wireframe = true === opts.wireframe ? true : false\n    let geometry = opts.geometry || null\n    let opacity = opts.opacity || 1\n    let color = new Vector(...(opts.color || [197/255, 148/255, 149/255, 1]))\n\n    const cull = {\n      enable: false,\n      face: 'back',\n      ...opts.cull\n    }\n\n    const depth = {\n      enable: true,\n      range: [0, 1],\n      mask: true,\n      func: 'less',\n      ...opts.depth,\n    }\n\n    const blend = {\n      equation: 'add',\n      enable: false,\n      color: [0, 0, 0, 0],\n      func: {src: 'src alpha', dst: 'one minus src alpha'},\n      ...opts.blend,\n    }\n\n    const initial = {\n      wireframeThickness: wireframeThickness,\n      wireframe: wireframe,\n      opacity: opacity,\n      color: [...color],\n      depth: {...depth},\n      blend: {...blend},\n      cull: {...cull},\n      map: map\n    }\n\n    const setMap = (value) => {\n      if (value && value != map) {\n        if (value) {\n          map = value\n          configure()\n        }\n      } else if (null === value && null != map) {\n        map = null\n      }\n    }\n\n    const update = (state) => {\n      let needsUpdate = false\n\n      Object.assign(depth, initial.depth)\n      Object.assign(blend, initial.blend)\n      Object.assign(cull, initial.cull)\n      vec4.copy(color, initial.color)\n\n      if (state.color) {\n        vec4.copy(color, state.color)\n      }\n\n      if (wireframe != state.wireframe &&\n          'boolean' == typeof state.wireframe) {\n        wireframe = state.wireframe\n      } else if (wireframe != initial.wireframe) {\n        wireframe = initial.wireframe\n      }\n\n      if (opacity != state.opacity &&\n         'number' == typeof state.opacity ) {\n        opacity = state.opacity\n      } else if (opacity != initial.opacity) {\n        opacity = initial.opacity\n      }\n\n      if (wireframeThickness != state.wireframeThickness &&\n         'number' == typeof state.wireframeThickness ) {\n        wireframeThickness = state.wireframeThickness\n      } else if (wireframeThickness != initial.wireframeThickness) {\n        wireframeThickness = initial.wireframeThickness\n      }\n\n      //\n      if (state.map && map != state.map) {\n        setMap(state.map)\n        needsUpdate = true\n      } else {\n        // map not set with initial map somehow\n        if (null == map && initial.map) {\n          map = initial.map\n          needsUpdate = true\n        }\n      }\n\n      if (needsUpdate) {\n        configure()\n      }\n    }\n\n    const computeBoundingBox = () => {\n      if (null == geometry) {\n        return null\n      } else if (boundingBox) {\n        return boundingBox\n      }\n\n      return (\n        boundingBox =\n          getBoundingBox(geometry.positions)\n          .map((p) => new Vector(...p))\n      )\n    }\n\n    const computeSize = () => {\n      // trigger compute with getter\n      if (null == boundingBox) {\n        return null\n      }\n\n      let size = null\n      const dimension = boundingBox[0].length\n      const min = boundingBox[0]\n      const max = boundingBox[1]\n\n      switch (dimension) {\n        case 3: size = vec3.subtract(new Vector(0, 0, 0), max, min); break\n        case 2: size = vec2.subtract(new Vector(0, 0), max, min); break\n        default: return null\n      }\n\n      switch (dimension) {\n        case 3: return vec3.multiply(size, size, this.scale)\n        case 2: return vec2.multiply(size, size, this.scale)\n      }\n    }\n\n    const configure = () => {\n      // reset draw function\n      if (!opts.draw) { draw = null }\n      // use regl draw command if draw() function\n      // was not provided\n      if (false !== draw && 'function' != typeof draw) {\n        const elements = geometry ? geometry.primitive.cells : undefined\n        const attributes = {...opts.attributes}\n        const shaderDefines = {}\n\n        const uniforms = {\n          ...opts.uniforms,\n\n          wireframeThickness: ({}, {\n            wireframeThickness: newWireFrameThickness\n          } = {}) => newWireFrameThickness || wireframeThickness,\n\n          wireframe: () => Boolean(wireframe),\n          opacity: (ctx, {opacity}) => null != opacity ? opacity : 1,\n          aspect: ({aspect}) => aspect  || 1.0,\n          color: () => [...(color || [0, 0, 0, 0])],\n\n          // 3d\n          projection: ({projection}) => projection  || identity,\n          model: ({transform}) => transform || identity,\n          view: ({view}) => view  || identity,\n        }\n\n        if (geometry) {\n          // helper function to set attribute that dynamically\n          // selects wireframe simplex or mesh simplex\n          const attr = (name, macro) => {\n            const pl = n => `${n}s`\n            const w = geometry.wireframe\n            const p = geometry.primitive\n            if (p[pl(name)] || w[pl(name)]) {\n              shaderDefines[macro] = ''\n              attributes[name] = () => {\n                if (wireframe) {\n                  return (w[pl(name)] || p[pl(name)] || null)\n                } else {\n                  return (p[pl(name)] || w[pl(name)] || null)\n                }\n              }\n            }\n          }\n\n          attr('position', 'HAS_POSITIONS')\n          attr('normal', 'HAS_NORMALS')\n          attr('uv', 'HAS_UVS')\n\n          attr('nextPosition', 'HAS_NEXT_POSITIONS')\n          attr('direction', 'HAS_DIRECTIONS')\n        }\n\n        if (map && map.texture) {\n          shaderDefines.HAS_MAP = ''\n          uniforms.isMapLoaded = () => {\n            if ('function' == typeof map) {\n              map()\n            }\n\n            if (null != map.isDoneLoading && null != map.hasProgress) {\n              return Boolean(map.isDoneLoading || map.hasProgress)\n            } else {\n              return true\n            }\n          }\n\n          uniforms.map = () => {\n            if ('function' == typeof map) { map() }\n            return map.texture || map\n          }\n        } else if (map) {\n          map.once('load', () => configure())\n        }\n\n        Object.assign(reglOptions, {\n          context: {\n            ...reglOptions.context,\n            geometry: () => geometry || null,\n            color: uniforms.color(),\n          },\n\n          uniforms, attributes,\n\n          cull: {\n            enable: () => cull.enable,\n            face: () => cull.face,\n          },\n\n          blend: {\n            equation: () => blend.equation,\n            enable: () => blend.enable,\n            color: () => blend.color,\n            func: () => blend.func,\n          },\n\n          depth: {\n            enable: () => depth.enable,\n            range: () => depth.range,\n            mask: () => depth.mask,\n            func: depth.func,\n          },\n\n          primitive: null == geometry ? undefined : () => {\n            if (wireframe) {\n              return geometry.wireframe ? 'triangles' : 'line strip'\n            } else if ('string' == typeof opts.primitive) {\n              return opts.primitive\n            } else {\n              return 'triangles'\n            }\n          }\n        })\n\n        if (geometry && geometry.primitive.cells) {\n          Object.assign(reglOptions, {\n            elements: ({}, {count} = {}) => {\n              let cells = null\n              if (wireframe && geometry.wireframe && geometry.wireframe.cells) {\n                cells = geometry.wireframe.cells\n              } else if (geometry && geometry.primitive.cells) {\n                cells = geometry.primitive.cells\n              }\n\n              count = coalesce(count, cells.length - 1)\n              if (cells) {\n                count = clamp(Math.floor(count), 0, 3*(cells.length - 1))\n                cells = cells.slice(0, count)\n              }\n\n              return cells\n            }\n          })\n\n        } else if (geometry) {\n          Object.assign(reglOptions, {\n            count: ({}, {count} = {}) => {\n              if (null != count) { return count }\n              else if (opts.count) { return opts.count }\n              else if (geometry && geometry.primitive) {\n                return geometry.primitive.positions.length\n              } else {\n                return null\n              }\n            }\n          })\n        }\n\n        if (null !== opts.frag && false !== opts.frag) {\n          reglOptions.frag = opts.frag || DEFAULT_FRAGMENT_SHADER\n        }\n\n        if (null !== opts.vert && false !== opts.vert) {\n          reglOptions.vert = opts.vert || DEFAULT_VERTEX_SHADER\n        }\n\n        if (reglOptions.frag) {\n          reglOptions.frag = injectDefines(reglOptions.frag, shaderDefines)\n        }\n\n        if (reglOptions.vert) {\n          reglOptions.vert = injectDefines(reglOptions.vert, shaderDefines)\n        }\n\n        for (let key in reglOptions) {\n          if (undefined === reglOptions[key]) {\n            delete reglOptions[key]\n          }\n        }\n\n        if (geometry) {\n          draw = ctx.regl(reglOptions)\n        }\n      }\n    }\n\n    super(ctx, {\n      ...opts,\n      //\n      // Draws mesh and with given state and\n      // then calling an optional given block\n      //\n      draw(state = {}, block = () => void 0) {\n        const noop = () => void 0\n\n        if ('function' == typeof state) {\n          block = state\n          state = {}\n        }\n\n        state = state || {}\n        block = block || function() {}\n\n        void (state.before || opts.before || noop)({\n          ...state,\n          wireframe,\n          geometry,\n          opacity,\n          color,\n        });\n\n        update(state)\n\n        if (ctx.reglContext) {\n          draw(state)\n        }\n\n        block(ctx.reglContext || {})\n\n        void (state.after || opts.after || noop)({\n          ...state,\n          wireframe,\n          geometry,\n          opacity,\n          color,\n        });\n      }\n    })\n\n    //\n    // Public properties\n    //\n    define(this, 'boundingBox', { get() { return computeBoundingBox() } })\n    define(this, 'geometry', { get: () => geometry })\n    define(this, 'color', { get: () => color })\n    define(this, 'size', { get() { return computeSize() } })\n\n    // initial map if given\n    if (opts.map) {\n      setMap(opts.map)\n    }\n\n    // initial configuration\n    configure()\n  }\n}\n"
  },
  {
    "__docId__": 213,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "identity",
    "memberof": "src/mesh/mesh.js",
    "longname": "src/mesh/mesh.js~identity",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/mesh/mesh.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_VERTEX_SHADER",
    "memberof": "src/mesh/mesh.js",
    "longname": "src/mesh/mesh.js~DEFAULT_VERTEX_SHADER",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/mesh/mesh.js",
    "importStyle": "{DEFAULT_VERTEX_SHADER}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_FRAGMENT_SHADER",
    "memberof": "src/mesh/mesh.js",
    "longname": "src/mesh/mesh.js~DEFAULT_FRAGMENT_SHADER",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/mesh/mesh.js",
    "importStyle": "{DEFAULT_FRAGMENT_SHADER}",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MeshCommand",
    "memberof": "src/mesh/mesh.js",
    "longname": "src/mesh/mesh.js~MeshCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/mesh/mesh.js",
    "importStyle": "{MeshCommand}",
    "description": "MeshCommand class.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MeshCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 217,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/mesh/mesh.js~MeshCommand",
    "longname": "src/mesh/mesh.js~MeshCommand#constructor",
    "access": null,
    "description": "MeshCommand class constructor.",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 218,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mesh/plane.js",
    "memberof": null,
    "longname": "src/mesh/plane.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { PlaneGeometry } from '../geometry/plane'\nimport { MeshCommand } from './mesh'\nimport mat4 from 'gl-mat4'\nimport glsl from 'glslify'\n\n/**\n * Plane function.\n *\n * @see PlaneCommand\n */\n\nmodule.exports = exports = (...args) => new PlaneCommand(...args)\n\n/**\n * PlaneCommand class.\n *\n * @public\n * @class PlaneCommand\n * @extends MeshCommand\n */\n\nexport class PlaneCommand extends MeshCommand {\n  constructor(ctx, opts = {}) {\n    const geometry = new PlaneGeometry(opts)\n    super(ctx, { ...opts, type: 'plane', geometry })\n  }\n}\n"
  },
  {
    "__docId__": 219,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PlaneCommand",
    "memberof": "src/mesh/plane.js",
    "longname": "src/mesh/plane.js~PlaneCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/mesh/plane.js",
    "importStyle": "{PlaneCommand}",
    "description": "PlaneCommand class.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PlaneCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 220,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/mesh/plane.js~PlaneCommand",
    "longname": "src/mesh/plane.js~PlaneCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "opts",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 221,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mesh/sphere.js",
    "memberof": null,
    "longname": "src/mesh/sphere.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { SphereGeometry } from '../geometry/sphere'\nimport { MeshCommand } from './mesh'\nimport mat4 from 'gl-mat4'\nimport glsl from 'glslify'\n\n/**\n * SphereCommand constructor.\n * @see SphereCommand\n */\n\nmodule.exports = exports = (...args) => new SphereCommand(...args)\n\n/**\n * SphereCommand class.\n *\n * @public\n * @class SphereCommand\n * @extends MeshCommand\n */\n\nexport class SphereCommand extends MeshCommand {\n  constructor(ctx, opts = {}) {\n    const geometry = new SphereGeometry(opts)\n    super(ctx, { ...opts, type: 'sphere', geometry })\n  }\n}\n"
  },
  {
    "__docId__": 222,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SphereCommand",
    "memberof": "src/mesh/sphere.js",
    "longname": "src/mesh/sphere.js~SphereCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/mesh/sphere.js",
    "importStyle": "{SphereCommand}",
    "description": "SphereCommand class.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SphereCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 223,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/mesh/sphere.js~SphereCommand",
    "longname": "src/mesh/sphere.js~SphereCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "opts",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 224,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mesh/torus.js",
    "memberof": null,
    "longname": "src/mesh/torus.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": ""
  },
  {
    "__docId__": 225,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mesh/triangle.js",
    "memberof": null,
    "longname": "src/mesh/triangle.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { TriangleGeometry } from '../geometry/triangle'\nimport { MeshCommand } from './mesh'\nimport glsl from 'glslify'\n\n// @TODO(werle) - move this into a glsl file\nconst vert = `\nprecision mediump float;\n\nuniform mat4 projection;\nuniform mat4 model;\nuniform mat4 view;\n\nattribute vec2 position;\nvoid main() {\n  gl_Position = projection * view * model * vec4(position, 0.0, 1.0);\n}\n`\n\n/**\n * TriangleCommand constructor.\n * @see TriangleCommand\n */\n\nmodule.exports = exports = (...args) => new TriangleCommand(...args)\n\n/**\n * TriangleCommand class.\n *\n * @public\n * @class TriangleCommand\n * @extends Command\n */\n\nexport class TriangleCommand extends MeshCommand {\n  constructor(ctx, opts = {}) {\n    const geometry = new TriangleGeometry(opts)\n    super(ctx, { ...opts, count: 3, type: 'triangle', geometry, vert })\n  }\n}\n"
  },
  {
    "__docId__": 226,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "vert",
    "memberof": "src/mesh/triangle.js",
    "longname": "src/mesh/triangle.js~vert",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/mesh/triangle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TriangleCommand",
    "memberof": "src/mesh/triangle.js",
    "longname": "src/mesh/triangle.js~TriangleCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/mesh/triangle.js",
    "importStyle": "{TriangleCommand}",
    "description": "TriangleCommand class.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TriangleCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 228,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/mesh/triangle.js~TriangleCommand",
    "longname": "src/mesh/triangle.js~TriangleCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "opts",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 229,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/object.js",
    "memberof": null,
    "longname": "src/object.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { Quaternion, Vector } from './math'\nimport { Command } from './command'\nimport { define } from './utils'\nimport mat4 from 'gl-mat4'\nimport vec4 from 'gl-vec4'\nimport vec3 from 'gl-vec3'\nimport vec2 from 'gl-vec2'\nimport quat from 'gl-quat'\n\nlet OBJECT_COMMAND_COUNTER = 0\n\n/**\n * Object3DCommand constructor.\n * @see Object3DCommand\n */\n\nmodule.exports = exports = (...args) => new Object3DCommand(...args)\n\n/**\n * Object3DCommand class.\n *\n * @public\n * @class Object3DCommand\n * @extends Command\n */\n\nexport class Object3DCommand extends Command {\n\n  /**\n   * Returns the next object ID\n   *\n   * @public\n   * @static\n   * @return {Number}\n   */\n\n  static id() {\n    return OBJECT_COMMAND_COUNTER ++\n  }\n\n  /**\n   * Object3DCommand class constructor.\n   *\n   * @param {Context} ctx\n   * @param {Object} opts\n   */\n\n  constructor(ctx, opts = {}) {\n    const draw = opts.draw || function () {}\n    const type = opts.type || 'object'\n    const id = opts.id || Object3DCommand.id()\n\n    // 3d\n    const rotation = new Quaternion(...(opts.rotation || []))\n    const position = new Vector(...(opts.position || [0, 0, 0]))\n    const scale = new Vector(...(opts.scale || [1, 1, 1]))\n\n    // initial state\n    const initial = {\n      rotation: [...rotation],\n      position: [...position],\n      scale: [...scale],\n    }\n\n    // world\n    const transform = mat4.identity([])\n    const model = mat4.identity([])\n\n    // regl context\n    const injectContext = ctx.regl({\n      context: {\n        transform: () => transform,\n        model: () => model,\n        id: () => id,\n      }\n    })\n\n    //\n    // Updates state and internal matrices.\n    //\n    const update = (state = {}) => {\n      mat4.identity(model)\n      mat4.identity(transform)\n      vec3.copy(scale, initial.scale)\n      vec3.copy(position, initial.position)\n      quat.copy(rotation, initial.rotation)\n\n      if (state.scale) {\n        if (state.scale.length && 3 == state.scale.length) {\n          vec3.copy(scale, state.scale)\n        } else {\n          Object.assign(scale, state.scale)\n        }\n      }\n\n      if (state.position) {\n        if (state.position.length && 3 == state.position.length) {\n          vec3.copy(position, state.position)\n        } else {\n          Object.assign(position, state.position)\n        }\n      }\n\n      if (state.rotation) {\n        if (state.rotation.length && 4 == state.rotation.length) {\n          quat.copy(rotation, state.rotation)\n        } else {\n          Object.assign(rotation, state.rotation)\n        }\n      }\n\n      //\n      //   M = T * R * S\n      //   M' = Mp * M\n      //\n\n      // M\n      mat4.translate(model, model, position)\n      mat4.multiply(model, model, mat4.fromQuat([], rotation))\n      mat4.scale(model, model, scale)\n\n      // M'\n      const {transform: parentTransform} = ctx.reglContext\n      if (parentTransform) {\n        mat4.multiply(transform, parentTransform, model)\n      } else {\n        mat4.copy(transform, model)\n      }\n    }\n\n    // calls current target  render function\n    super((_, state = {}, block = () => void 0) => {\n      if ('function' == typeof state) {\n        block = state\n        state = {}\n      }\n\n      state = state || {}\n      block = block || function() {}\n\n      // push this command to context stack\n      update({...state})\n      ctx.push(this)\n\n      // inject context suitable for\n      // all Object3DCommand instances\n      injectContext(() => {\n        // draw object however defined by the\n        // extending class calling block as a scoped\n        // function\n        draw({\n          ...state,\n          transform,\n          position,\n          rotation,\n          scale,\n        }, block)\n\n        // remove this command from the context stack\n        ctx.pop()\n      })\n    })\n\n    //\n    // Public properties\n    //\n    define(this, 'id', { get() { return id } })\n    define(this, 'scale', { get() { return scale } })\n    define(this, 'position', { get() { return position } })\n    define(this, 'rotation', { get() { return rotation } })\n    define(this, 'transform', { get() { return transform } })\n  }\n}\n"
  },
  {
    "__docId__": 230,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "OBJECT_COMMAND_COUNTER",
    "memberof": "src/object.js",
    "longname": "src/object.js~OBJECT_COMMAND_COUNTER",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/object.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Object3DCommand",
    "memberof": "src/object.js",
    "longname": "src/object.js~Object3DCommand",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/object.js",
    "importStyle": "{Object3DCommand}",
    "description": "Object3DCommand class.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Object3DCommand"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 232,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "id",
    "memberof": "src/object.js~Object3DCommand",
    "longname": "src/object.js~Object3DCommand.id",
    "access": "public",
    "description": "Returns the next object ID",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@static",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 233,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/object.js~Object3DCommand",
    "longname": "src/object.js~Object3DCommand#constructor",
    "access": null,
    "description": "Object3DCommand class constructor.",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 234,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/symbols.js",
    "memberof": null,
    "longname": "src/symbols.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Private symbols used within the project\n * sorted here in alphabetical order.\n */\n\nexport const $caller = Symbol('caller')\nexport const $ctx = Symbol('ctx')\nexport const $domElement = Symbol('element')\nexport const $hasFocus = Symbol('hasFocus')\nexport const $isDestroyed = Symbol('isDestroyed')\nexport const $ref = Symbol('ref')\nexport const $regl = Symbol('regl')\nexport const $reglContext = Symbol('reglContext')\nexport const $run = Symbol('run')\nexport const $scope = Symbol('scope')\nexport const $stack = Symbol('stack')\nexport const $state = Symbol('state')\n"
  },
  {
    "__docId__": 235,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$caller",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$caller",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$caller}",
    "description": "Private symbols used within the project\nsorted here in alphabetical order.",
    "lineNumber": 8,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 236,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$ctx",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$ctx",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$ctx}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$domElement",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$domElement",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$domElement}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$hasFocus",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$hasFocus",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$hasFocus}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$isDestroyed",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$isDestroyed",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$isDestroyed}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$ref",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$ref",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$ref}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$regl",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$regl",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$regl}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$reglContext",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$reglContext",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$reglContext}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$run",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$run",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$run}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$scope",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$scope",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$scope}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$stack",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$stack",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$stack}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$state",
    "memberof": "src/symbols.js",
    "longname": "src/symbols.js~$state",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/symbols.js",
    "importStyle": "{$state}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils.js",
    "memberof": null,
    "longname": "src/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict'\n\n/**\n * Module dependencies.\n */\n\nimport { version } from './package'\nimport createDebug from 'debug'\n\n/**\n * Math dependencies.\n */\n\nconst { round, floor, pow, } = Math\n\n/**\n * Define property helper.\n *\n * @public\n * @param {Object} a\n * @param {String} b\n * @param {Object} c\n */\n\nexport const define = (a, b, c) => Object.defineProperty(a, b, { ...c })\n\n/**\n * Converts input degrees to radians\n *\n * @public\n * @param {Number} n\n * @return {Number}\n */\n\nexport const radians = (n) => n == n ? (n*Math.PI/180.0) : 0\n\n/**\n * Utility debug output\n *\n * @public\n * @param {String} fmt\n * @param {...Mixed} args\n */\n\nexport const debug = createDebug(`[axis@${version}]`)\n\n/**\n * Simple linear inerpolation function.\n *\n * @public\n * @param {Number} v0\n * @param {Number} v1\n * @param {Number} t\n * @return {Number}\n */\n\nexport const lerp = (v0, v1, t) => v0*(1 - t) + v1*t\n\n/**\n * Predicate function to determine if a given DOM\n * element is in the window's viewport.\n *\n * @public\n * @param {Element} domElement\n * @return {Boolean}\n */\n\nexport const isDOMElementInViewport = (domElement) => {\n  const {clientWidth, clientHeight} = document.documentElement\n  const {top, left, bottom, right} = domElement.getBoundingClientRect()\n  const {innerWidth, innerHeight} = window\n  const height = innerHeight || clientHeight\n  const width = innerWidth || clientWidth\n  return bottom > 0 && right > 0 && left < width && top < height\n}\n\n/**\n * Returns the screen orientation angle.\n * Borrowed from https://github.com/hawksley/eleVR-Web-Player/blob/master/lib/util.js\n *\n * @return {Number}\n */\n\nexport const getScreenOrientation = () => {\n  switch (window.screen.orientation || window.screen.mozOrientation) {\n    case 'landscape-primary': return 90\n    case 'landscape-secondary': return -90\n    case 'portrait-secondary': return 180\n    case 'portrait-primary': return 0\n  }\n\n  return window.orientation || 0\n}\n\n/**\n * Finds the nearest power of two for a\n * given number value.\n */\n\nexport const nearestPowerOfTwo = (value) => pow(2, round(Math.log(value) / Math.LN2))\n\n/**\n * Convert an image or canvas to the nearest power\n * of two.\n * Borrowed from https://github.com/mrdoob/three.js/blob/dev/src/renderers/webgl/WebGLTextures.js\n *\n * @param {HTMLImageElement|HTMLCanvasElement} image\n * @return {HTMLImageElement|HTMLCanvasElement}\n */\n\nexport const makePowerOfTwo = (image) => {\n\tif (image instanceof HTMLImageElement || image instanceof HTMLCanvasElement) {\n\t\tconst canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas')\n\t\tconst context = canvas.getContext('2d')\n\n\t\tcanvas.width = nearestPowerOfTwo(image.width)\n\t\tcanvas.height = nearestPowerOfTwo(image.height)\n\t\tcontext.drawImage(image, 0, 0, canvas.width, canvas.height)\n\n\t\treturn canvas\n\t}\n\n\treturn image\n}\n\n/**\n * Creates a canvas DOM element.\n *\n * @return {HTMLCanvasElement}\n */\n\nexport const createCanvas = () =>\n  document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas')\n\n/**\n * Scale image using a canvas.\n * Warning: Scaling through the canvas will only work with\n * images that use premultiplied alpha.\n *\n * Borrowed from https://github.com/mrdoob/three.js/blob/dev/src/renderers/webgl/WebGLTextures.js\n *\n * @param {HTMLImageElement|HTMLCanvasElement} image\n * @param {Number} maxSize\n * @return {HTMLImageElement|HTMLCanvasElement}\n */\n\nexport const scaleWithCanvas = (image, scale, scaleNearestPowerOfTwo) => {\n  const canvas = createCanvas()\n  const context = canvas.getContext('2d')\n  let {width, height} = image\n\n  if (scaleNearestPowerOfTwo) {\n    width = nearestPowerOfTwo(width)\n    height = nearestPowerOfTwo(height)\n  }\n\n  canvas.width = Math.floor(image.width * scale)\n  canvas.height = Math.floor(image.height * scale)\n\n  context.drawImage(image, 0, 0, width, height,\n                    0, 0, canvas.width, canvas.height)\n  return canvas\n}\n\n/**\n * Clamp an image to a max size.\n *\n * @param {HTMLImageElement|HTMLCanvasElement} image\n * @param {Number} maxSize\n * @return {HTMLImageElement|HTMLCanvasElement}\n */\n\nexport const clampToMaxSize = (image, maxSize, scaleNearestPowerOfTwo) => {\n\tif (image.width > maxSize || image.height > maxSize) {\n    const scale = maxSize/Math.max(image.width, image.height)\n    return scaleWithCanvas(image, scale, scaleNearestPowerOfTwo)\n  } else {\n    return scaleNearestPowerOfTwo ? makePowerOfTwo(image) : image\n  }\n}\n"
  },
  {
    "__docId__": 248,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "round",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~round",
    "access": null,
    "export": false,
    "importPath": "axis3d/src/utils.js",
    "importStyle": null,
    "description": "Math dependencies.",
    "lineNumber": 14,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 249,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "define",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~define",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{define}",
    "description": "Define property helper.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 250,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "radians",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~radians",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{radians}",
    "description": "Converts input degrees to radians",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "debug",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~debug",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{debug}",
    "description": "Utility debug output",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fmt",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "...Mixed"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "lerp",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~lerp",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{lerp}",
    "description": "Simple linear inerpolation function.",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "v0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "v1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isDOMElementInViewport",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~isDOMElementInViewport",
    "access": "public",
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{isDOMElementInViewport}",
    "description": "Predicate function to determine if a given DOM\nelement is in the window's viewport.",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "domElement",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "getScreenOrientation",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~getScreenOrientation",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{getScreenOrientation}",
    "description": "Returns the screen orientation angle.\nBorrowed from https://github.com/hawksley/eleVR-Web-Player/blob/master/lib/util.js",
    "lineNumber": 84,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "nearestPowerOfTwo",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~nearestPowerOfTwo",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{nearestPowerOfTwo}",
    "description": "Finds the nearest power of two for a\ngiven number value.",
    "lineNumber": 100,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "makePowerOfTwo",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~makePowerOfTwo",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{makePowerOfTwo}",
    "description": "Convert an image or canvas to the nearest power\nof two.\nBorrowed from https://github.com/mrdoob/three.js/blob/dev/src/renderers/webgl/WebGLTextures.js",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLImageElement",
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLImageElement",
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 257,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "createCanvas",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~createCanvas",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{createCanvas}",
    "description": "Creates a canvas DOM element.",
    "lineNumber": 132,
    "return": {
      "nullable": null,
      "types": [
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "scaleWithCanvas",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~scaleWithCanvas",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{scaleWithCanvas}",
    "description": "Scale image using a canvas.\nWarning: Scaling through the canvas will only work with\nimages that use premultiplied alpha.\n\nBorrowed from https://github.com/mrdoob/three.js/blob/dev/src/renderers/webgl/WebGLTextures.js",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLImageElement",
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxSize",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLImageElement",
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 259,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "clampToMaxSize",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~clampToMaxSize",
    "access": null,
    "export": true,
    "importPath": "axis3d/src/utils.js",
    "importStyle": "{clampToMaxSize}",
    "description": "Clamp an image to a max size.",
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLImageElement",
          "HTMLCanvasElement"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxSize",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLImageElement",
        "HTMLCanvasElement"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 262,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 263,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 264,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 265,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 266,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 267,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 268,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 269,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 270,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 271,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 272,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 273,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 274,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 275,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 276,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 277,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 278,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 279,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 280,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 281,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 282,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 283,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 284,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 285,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 286,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 287,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 288,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 289,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 290,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 291,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 292,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 293,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 294,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 295,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 296,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 297,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 298,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 299,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 300,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 301,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 302,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 303,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 304,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 305,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 306,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 307,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 309,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 310,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 311,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 312,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 313,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 314,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 315,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 316,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  }
]